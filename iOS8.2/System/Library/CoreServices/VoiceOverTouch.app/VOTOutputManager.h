/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:23:28 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/CoreServices/VoiceOverTouch.app/vot
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <vot/vot-Structs.h>
@class NSMutableArray, SCRCIndexMap, NSLock, VOTOutputRequestRunner, AXTimer, AXAccessQueue, NSMutableSet, NSDate;

@interface VOTOutputManager : NSObject {

	CFArrayRef _queuedOutputRequests;
	NSMutableArray* _requestRunners;
	SCRCIndexMap* _components;
	NSLock* _queueLock;
	char _lastRequestShouldNotBeInterrupted;
	char _requestIsRunning;
	unsigned long _numberOfRequestSinceLastUninterruptable;
	float _cachedRate;
	char _shutdown;
	VOTOutputRequestRunner* _onHoldRunner;
	AXTimer* _inactivateAudioTimer;
	AXAccessQueue* _audioSessionQueue;
	char _audioSessionActive;
	NSMutableSet* _audioSessionUsers;
	NSDate* _dateToResumeRequests;
	NSDate* _dateToResumeSounds;

}

@property (nonatomic,readonly) AXAccessQueue * audioSessionQueue;              //@synthesize audioSessionQueue=_audioSessionQueue - In the implementation block
@property (nonatomic,retain) NSDate * dateToResumeRequests;                    //@synthesize dateToResumeRequests=_dateToResumeRequests - In the implementation block
@property (nonatomic,retain) NSDate * dateToResumeSounds;                      //@synthesize dateToResumeSounds=_dateToResumeSounds - In the implementation block
+(id)outputManager;
+(CFStringRef)copyUnicodeDescriptionStringForCharacter:(int)arg1 ;
+(id)outputManagerIfExists;
-(id)componentForType:(int)arg1 ;
-(void)playSoundFast:(id)arg1 ;
-(void)resetSpeechRate;
-(void)updateVolume;
-(void)_voiceOverVolumeChanged:(id)arg1 ;
-(NSDate *)dateToResumeRequests;
-(void)setDateToResumeRequests:(NSDate *)arg1 ;
-(void)_handleProcessRequest:(id)arg1 ;
-(void)_handleRequestFinished:(id)arg1 ;
-(void)_dispatchNextQueuedRequest;
-(float)speechRateForLanguage:(id)arg1 ;
-(float)defaultSpeechRate;
-(void)stopSpeakingAtBoundary:(int)arg1 allRequests:(char)arg2 ;
-(id)pauseStringForType:(int)arg1 ;
-(void)setDateToResumeSounds:(NSDate *)arg1 ;
-(void)_silenceRequestsForTimeInterval:(id)arg1 ;
-(void)speakSimpleString:(id)arg1 braille:(char)arg2 ;
-(NSDate *)dateToResumeSounds;
-(void)playSoundFast:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)finishedOutputRequest:(id)arg1 ;
-(void)setSystemVolume:(float)arg1 ;
-(float)systemVolume;
-(void)synchVolumeWithSystem;
-(void)toggleSystemMute;
-(void)alterVoiceOverVolume:(char)arg1 ;
-(void)holdCurrentRequest;
-(void)resumeCurrentRequest;
-(void)silenceOutputForTimeInterval:(double)arg1 ;
-(void)enableAudioSession:(id)arg1 ;
-(void)disableAudioSession:(id)arg1 ;
-(void)speakSimpleString:(id)arg1 ;
-(AXAccessQueue *)audioSessionQueue;
-(void)_systemVolumeDidChange:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(void)handleEvent:(id)arg1 ;
-(void)_setVolume:(float)arg1 ;
-(void)setUseCompactVoice:(char)arg1 ;
-(char)isSpeaking;
-(void)clearQueue;
-(void)shutdown;
-(char)isSystemMuted;
-(void)setRate:(float)arg1 ;
-(char)isPaused;
-(float)speechRate;
-(float)volume;
-(void)setVolume:(float)arg1 ;
-(void)pauseSpeakingAtBoundary:(int)arg1 ;
-(void)continueSpeaking;
-(void)stopSpeakingAtBoundary:(int)arg1 ;
@end

