/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:19 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDShapeLayout.h>
#import <iWorkImport/TSWPLayoutParent.h>
#import <iWorkImport/TSWPColumnMetrics.h>
#import <iWorkImport/TSWPStorageObserver.h>

@protocol TSWPShapeLayoutDelegate;
@class TSDWrapPolygon, TSWPLayout, TSWPPadding;

@interface TSWPShapeLayout : TSDShapeLayout <TSWPLayoutParent, TSWPColumnMetrics, TSWPStorageObserver> {

	TSDWrapPolygon* _cachedInteriorWrapPolygon;
	char _observingStorage;
	TSWPLayout* _containedLayout;
	id<TSWPShapeLayoutDelegate> _delegate;

}

@property (nonatomic,readonly) TSWPLayout * containedLayout;              //@synthesize containedLayout=_containedLayout - In the implementation block
@property (nonatomic,readonly) char autosizes; 
@property (assign) id<TSWPShapeLayoutDelegate> delegate;                  //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) TSWPPadding * layoutMargins; 
@property (nonatomic,readonly) unsigned columnCount; 
@property (nonatomic,readonly) char alwaysStartsNewTarget; 
@property (nonatomic,readonly) char shrinkTextToFit; 
@property (nonatomic,readonly) char columnsAreLeftToRight; 
@property (nonatomic,readonly) float textScaleFactor; 
-(void)invalidateSize;
-(void)processChangedProperty:(int)arg1 ;
-(char)canAspectRatioLockBeChangedByUser;
-(void)updateChildrenFromInfo;
-(id)dependentLayouts;
-(id)childSearchTargets;
-(void)willBeAddedToLayoutController:(id)arg1 ;
-(void)willBeRemovedFromLayoutController:(id)arg1 ;
-(char)resizeMayChangeAspectRatio;
-(char)supportsRotation;
-(void)insertChild:(id)arg1 below:(id)arg2 ;
-(void)insertChild:(id)arg1 above:(id)arg2 ;
-(id)interiorWrapPath;
-(id)pathSource;
-(CGAffineTransform)computeLayoutTransform;
-(char)isInvisibleAutosizingShape;
-(CGSize)adjustedInsetsForTarget:(id)arg1 ;
-(void)invalidateForAutosizingTextLayout:(id)arg1 ;
-(float)widthForColumnIndex:(unsigned)arg1 bodyWidth:(float)arg2 ;
-(float)gapForColumnIndex:(unsigned)arg1 bodyWidth:(float)arg2 ;
-(float)positionForColumnIndex:(unsigned)arg1 bodyWidth:(float)arg2 target:(id)arg3 outWidth:(float*)arg4 outGap:(float*)arg5 ;
-(char)alwaysStartsNewTarget;
-(char)shrinkTextToFit;
-(char)columnsAreLeftToRight;
-(unsigned)autosizeFlagsForTextLayout:(id)arg1 ;
-(int)verticalAlignmentForTextLayout:(id)arg1 ;
-(CGRect)nonAutosizedFrameForTextLayout:(id)arg1 ;
-(CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(CGSize)arg2 ;
-(id)dependentsOfTextLayout:(id)arg1 ;
-(Class)repClassForTextLayout:(id)arg1 ;
-(float)maxAutoGrowWidthForTextLayout:(id)arg1 ;
-(char)textLayoutShouldWrapAroundExternalDrawables:(id)arg1 ;
-(char)textLayoutShouldLayoutVertically:(id)arg1 ;
-(void)storage:(id)arg1 didChangeRange:(NSRange)arg2 delta:(int)arg3 broadcastKind:(int)arg4 ;
-(id)textWrapper;
-(id)interiorClippingPath;
-(CGPoint)autosizePositionOffset;
-(void)createContainedLayoutForEditing;
-(id)instructionalStorageForContainedStorage:(id)arg1 storageKind:(int)arg2 ;
-(char)autosizes;
-(TSWPLayout *)containedLayout;
-(void)destroyContainedLayoutForInstructionalText;
-(void)createContainedLayoutForInstructionalText;
-(id)interiorWrapPolygon;
-(CGAffineTransform)autosizedTransform;
-(CGAffineTransform)autosizedTransformForInfoGeometry:(id)arg1 ;
-(CGPoint)autosizePositionOffsetForFixedWidth:(char)arg1 height:(char)arg2 ;
-(unsigned)cropLine:(CGRect)arg1 lineSegmentRects:(CGRect)arg2 ;
-(id)initWithInfo:(id)arg1 ;
-(void)invalidatePath;
-(void)dealloc;
-(void)setDelegate:(id<TSWPShapeLayoutDelegate>)arg1 ;
-(id<TSWPShapeLayoutDelegate>)delegate;
-(TSWPPadding *)layoutMargins;
-(void)setGeometry:(id)arg1 ;
-(unsigned)columnCount;
-(void)setChildren:(id)arg1 ;
-(void)addChild:(id)arg1 ;
-(void)insertChild:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)replaceChild:(id)arg1 with:(id)arg2 ;
-(id)children;
@end

