/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:13 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDFill.h>
#import <iWorkImport/TSDMixing.h>
#import <iWorkImport/NSCopying.h>
#import <iWorkImport/NSMutableCopying.h>

@class TSUColor;

@interface TSDColorFill : TSDFill <TSDMixing, NSCopying, NSMutableCopying> {

	TSUColor* mColor;

}

@property (nonatomic,readonly) CGColorRef CGColor; 
@property (nonatomic,copy,readonly) TSUColor * color; 
@property (nonatomic,readonly) float opacity; 
@property (nonatomic,readonly) float hue; 
@property (nonatomic,readonly) float saturation; 
@property (nonatomic,readonly) float brightness; 
@property (nonatomic,readonly) float luminance; 
+(id)instanceWithArchive:(const FillArchive*)arg1 unarchiver:(id)arg2 ;
+(id)colorWithColor:(id)arg1 ;
+(id)keyPathsForValuesAffectingCGColor;
+(id)keyPathsForValuesAffectingOpacity;
+(id)keyPathsForValuesAffectingLuminance;
+(id)keyPathsForValuesAffectingHue;
+(id)keyPathsForValuesAffectingSaturation;
+(id)keyPathsForValuesAffectingBrightness;
+(id)blackColor;
+(id)clearColor;
+(id)colorWithWhite:(float)arg1 alpha:(float)arg2 ;
+(id)whiteColor;
+(id)grayColor;
+(id)redColor;
+(id)greenColor;
+(id)blueColor;
+(id)cyanColor;
+(id)magentaColor;
+(id)yellowColor;
+(id)orangeColor;
+(id)purpleColor;
+(id)brownColor;
+(id)colorWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4 ;
+(id)colorWithCGColor:(CGColorRef)arg1 ;
+(id)colorWithUIColor:(id)arg1 ;
+(id)randomColor;
-(void)saveToArchive:(FillArchive*)arg1 archiver:(id)arg2 ;
-(id)initWithArchive:(const FillArchive*)arg1 unarchiver:(id)arg2 ;
-(SEL)mapThemeAssetSelector;
-(char)isClear;
-(id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2 ;
-(int)mixingTypeWithObject:(id)arg1 ;
-(char)canApplyToCAShapeLayer;
-(void)applyToCAShapeLayer:(id)arg1 withScale:(float)arg2 ;
-(char)drawsInOneStep;
-(void)applyToCALayer:(id)arg1 withScale:(float)arg2 ;
-(char)canApplyToCALayer;
-(float)p_hsbComponentWithIndex:(unsigned long)arg1 ;
-(float)saturation;
-(void)dealloc;
-(CGColorRef)CGColor;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isOpaque;
-(float)opacity;
-(id)initWithWhite:(float)arg1 alpha:(float)arg2 ;
-(id)initWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4 ;
-(TSUColor *)color;
-(id)initWithCGColor:(CGColorRef)arg1 ;
-(id)initWithColor:(id)arg1 ;
-(float)brightness;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)referenceColor;
-(id)initWithUIColor:(id)arg1 ;
-(float)hue;
-(id)UIColor;
-(id)grayscaleColor;
-(id)invertedColor;
-(float)luminance;
-(char)isNearlyWhite;
-(void)paintRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(void)paintPath:(CGPathRef)arg1 inContext:(CGContextRef)arg2 ;
-(int)fillType;
@end

