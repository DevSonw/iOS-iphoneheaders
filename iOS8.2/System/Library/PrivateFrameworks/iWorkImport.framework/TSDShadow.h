/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:13 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDMixing.h>
#import <iWorkImport/TSSPreset.h>
#import <iWorkImport/TSSPresetSource.h>
#import <iWorkImport/NSCopying.h>
#import <iWorkImport/NSMutableCopying.h>

@class TSUColor, NSString;

@interface TSDShadow : NSObject <TSDMixing, TSSPreset, TSSPresetSource, NSCopying, NSMutableCopying> {

	float mAngle;
	float mOffset;
	float mRadius;
	float mOpacity;
	CGColorRef mColor;
	char mEnabled;

}

@property (nonatomic,readonly) float angle; 
@property (nonatomic,readonly) float offset; 
@property (nonatomic,readonly) CGPoint offsetDelta; 
@property (nonatomic,readonly) float radius; 
@property (nonatomic,readonly) float opacity; 
@property (nonatomic,readonly) CGColorRef color; 
@property (getter=isEnabled,nonatomic,readonly) char enabled; 
@property (nonatomic,readonly) TSUColor * TSUColor; 
@property (nonatomic,readonly) NSString * presetKind; 
+(id)instanceWithArchive:(const ShadowArchive*)arg1 unarchiver:(id)arg2 ;
+(char)canMixWithNilObjects;
+(id)mixableObjectClasses;
+(id)defaultShadow;
+(id)defaultDisabledShadow;
+(id)shadowWithAngle:(float)arg1 offset:(float)arg2 radius:(float)arg3 opacity:(float)arg4 color:(CGColorRef)arg5 enabled:(char)arg6 ;
+(id)presetKinds;
+(void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 ;
+(id)p_defaultShadowEnabled:(char)arg1 ;
+(id)contactShadowWithAngle:(float)arg1 offset:(float)arg2 radius:(float)arg3 height:(float)arg4 opacity:(float)arg5 color:(CGColorRef)arg6 enabled:(char)arg7 ;
+(id)shadowWithNSShadow:(id)arg1 ;
+(id)curvedShadowWithOffset:(float)arg1 angle:(float)arg2 radius:(float)arg3 curve:(float)arg4 opacity:(float)arg5 color:(CGColorRef)arg6 enabled:(char)arg7 ;
+(id)keyPathsForValuesAffectingTSUColor;
+(char)automaticallyNotifiesObserversOfTSUColor;
-(void)saveToArchive:(ShadowArchive*)arg1 archiver:(id)arg2 ;
-(id)initWithArchive:(const ShadowArchive*)arg1 unarchiver:(id)arg2 ;
-(NSString *)presetKind;
-(char)isThemeEquivalent:(id)arg1 ;
-(SEL)mapThemeAssetSelector;
-(id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2 ;
-(int)mixingTypeWithObject:(id)arg1 ;
-(void)applyToContext:(CGContextRef)arg1 viewScale:(float)arg2 flipped:(char)arg3 ;
-(void)applyToContext:(CGContextRef)arg1 viewScale:(float)arg2 flipped:(char)arg3 extraOffset:(CGSize)arg4 ;
-(CGRect)shadowBoundsForRect:(CGRect)arg1 ;
-(CGRect)shadowBoundsForRect:(CGRect)arg1 additionalAngle:(float)arg2 ;
-(id)shadowByTransformingByTransform:(CGAffineTransform)arg1 ;
-(CGPoint)offsetDelta;
-(CGRect)shadowBoundsForRect:(CGRect)arg1 additionalTransform:(CGAffineTransform)arg2 ;
-(float)clampOffset:(float)arg1 ;
-(float)clampRadius:(float)arg1 ;
-(float)clampOpacity:(float)arg1 ;
-(id)newShadowClampedForSwatches;
-(char)isContactShadow;
-(char)isDropShadow;
-(char)isCurvedShadow;
-(char)showForEditingText;
-(TSUColor *)TSUColor;
-(void)applyToContext:(CGContextRef)arg1 viewScale:(float)arg2 ;
-(CGRect)boundsInNaturalSpaceForRep:(id)arg1 ;
-(CGRect)boundsForRep:(id)arg1 ;
-(CGImageRef)newShadowImageForRep:(id)arg1 withSize:(CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(char)arg4 ;
-(char)differenceRequiresRebuilding:(id)arg1 ;
-(id)NSShadow;
-(id)i_initWithOpacity:(float)arg1 color:(CGColorRef)arg2 enabled:(char)arg3 ;
-(CGImageRef)i_newEmptyImageWithSize:(CGSize)arg1 ;
-(id)mixedBaseObjectWithObject:(id)arg1 ;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(id)description;
-(id)mutableCopy;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEnabled;
-(float)opacity;
-(float)offset;
-(CGColorRef)color;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(float)angle;
-(float)radius;
-(unsigned)shadowType;
-(id)typeDescription;
@end

