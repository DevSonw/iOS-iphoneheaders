/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:12 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDFill.h>
#import <iWorkImport/TSSPreset.h>
#import <iWorkImport/TSSPresetSource.h>
#import <iWorkImport/TSDMixing.h>
#import <iWorkImport/NSCopying.h>
#import <iWorkImport/NSMutableCopying.h>

@class NSMutableArray, NSArray, TSUColor, NSString;

@interface TSDGradient : TSDFill <TSSPreset, TSSPresetSource, TSDMixing, NSCopying, NSMutableCopying> {

	NSMutableArray* mStops;
	unsigned mType;
	float mOpacity;
	CGShadingRef mShadingRef;
	char mIsAdvancedGradient;

}

@property (nonatomic,retain,readonly) NSArray * gradientStops; 
@property (nonatomic,readonly) TSUColor * firstColor; 
@property (nonatomic,readonly) TSUColor * lastColor; 
@property (nonatomic,readonly) unsigned gradientType; 
@property (assign,nonatomic) float opacity; 
@property (nonatomic,readonly) char isOpaque; 
@property (nonatomic,readonly) CGShadingRef shadingRef; 
@property (assign,nonatomic) char isAdvancedGradient; 
@property (nonatomic,readonly) char hasAlpha; 
@property (nonatomic,readonly) NSString * presetKind; 
+(id)instanceWithArchive:(const FillArchive*)arg1 unarchiver:(id)arg2 ;
+(id)linearGradientWithStartColor:(id)arg1 endColor:(id)arg2 ;
+(id)presetKinds;
+(void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 ;
+(char)useInflections;
+(void)enableInflections;
+(void)disableInflections;
+(char)useQuartzShadings;
+(void)sortStopsArray:(id)arg1 ;
+(id)linearGradientWithGradientStops:(id)arg1 ;
+(id)radialGradientWithStartColor:(id)arg1 endColor:(id)arg2 ;
+(id)radialGradientWithGradientStops:(id)arg1 ;
-(void)saveToArchive:(FillArchive*)arg1 archiver:(id)arg2 ;
-(id)initWithArchive:(const FillArchive*)arg1 unarchiver:(id)arg2 ;
-(void)drawSwatchInRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(NSString *)presetKind;
-(SEL)mapThemeAssetSelector;
-(id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2 ;
-(int)mixingTypeWithObject:(id)arg1 ;
-(TSUColor *)firstColor;
-(id)newColorAtFraction:(float)arg1 ;
-(id)initWithGradientStops:(id)arg1 type:(unsigned)arg2 opacity:(float)arg3 ;
-(id)initWithGradientStops:(id)arg1 type:(unsigned)arg2 ;
-(void)releaseShadingRef;
-(NSArray *)gradientStops;
-(char)isAdvancedGradient;
-(id)initWithStartColor:(id)arg1 endColor:(id)arg2 type:(unsigned)arg3 ;
-(char)isAdvancedGradientIgnoringFlag;
-(TSUColor *)lastColor;
-(id)stopBeforeFraction:(float)arg1 ;
-(id)stopAfterFraction:(float)arg1 ;
-(void)setIsAdvancedGradient:(char)arg1 ;
-(id)p_insertStopAtFraction:(float)arg1 withColor:(id)arg2 ;
-(void)p_insertGradientStop:(id)arg1 ;
-(char)isEqualIgnoringTransform:(id)arg1 ;
-(CGShadingRef)shadingRef;
-(id)stopAtIndex:(unsigned)arg1 ;
-(void)paintRect:(CGRect)arg1 inContext:(CGContextRef)arg2 atAngle:(float)arg3 ;
-(CGAffineTransform)centeredRadialTransformInRect:(CGRect)arg1 ;
-(CGPoint)startPointForPath:(id)arg1 andBounds:(CGRect)arg2 ;
-(CGPoint)endPointForPath:(id)arg1 andBounds:(CGRect)arg2 ;
-(void)p_setAlpha:(CGContextRef)arg1 ;
-(CGContextRef)p_beginBitmapWrapperContextInContext:(CGContextRef)arg1 returningIntegralBounds:(CGRect*)arg2 ;
-(void)p_endBitmapWrapperContext:(CGContextRef)arg1 inContext:(CGContextRef)arg2 withIntegralBounds:(CGRect)arg3 ;
-(void)p_setGradientStops:(id)arg1 ;
-(void)p_removeStop:(id)arg1 ;
-(id)p_removeStopAtIndex:(unsigned)arg1 ;
-(id)p_insertStopAtFraction:(float)arg1 ;
-(void)p_reverseStopOrder;
-(void)p_evenlyDistributeStops;
-(void)p_setGradientType:(unsigned)arg1 ;
-(void)p_moveStopAtIndex:(unsigned)arg1 toFraction:(float)arg2 ;
-(void)p_swapStopAtIndex:(unsigned)arg1 withStopAtIndex:(unsigned)arg2 ;
-(void)p_setColorOfStopAtIndex:(unsigned)arg1 toColor:(id)arg2 ;
-(void)p_setInflectionOfStopAtIndex:(unsigned)arg1 toInflection:(float)arg2 ;
-(char)hasAlpha;
-(void)dealloc;
-(id)init;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isOpaque;
-(float)opacity;
-(void)setOpacity:(float)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)referenceColor;
-(void)paintRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(void)paintPath:(CGPathRef)arg1 inContext:(CGContextRef)arg2 ;
-(int)fillType;
-(unsigned)gradientType;
@end

