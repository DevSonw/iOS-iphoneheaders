/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:02 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <iWorkImport/iWorkImport-Structs.h>
@class TSPObject, NSHashTable;

@interface TSPArchiverBase : NSObject {

	TSPObject* _object;
	auto_ptr<google::protobuf::Message>* _message;
	unsigned long long _messageVersion;
	hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule> > >* _fieldRules;
	FieldPath* _currentFieldPath;
	NSHashTable* _strongReferences;
	NSHashTable* _weakReferences;
	NSHashTable* _commandToModelReferences;
	NSHashTable* _lazyReferences;
	NSHashTable* _dataReferences;

}

@property (nonatomic,readonly) char forPasteboard; 
@property (nonatomic,readonly) TSPObject * object;                                  //@synthesize object=_object - In the implementation block
@property (assign,nonatomic) unsigned long long messageVersion;                     //@synthesize messageVersion=_messageVersion - In the implementation block
@property (nonatomic,readonly) NSHashTable * strongReferences;                      //@synthesize strongReferences=_strongReferences - In the implementation block
@property (nonatomic,readonly) NSHashTable * weakReferences;                        //@synthesize weakReferences=_weakReferences - In the implementation block
@property (nonatomic,readonly) NSHashTable * commandToModelReferences;              //@synthesize commandToModelReferences=_commandToModelReferences - In the implementation block
@property (nonatomic,readonly) NSHashTable * lazyReferences;                        //@synthesize lazyReferences=_lazyReferences - In the implementation block
@property (nonatomic,readonly) NSHashTable * dataReferences;                        //@synthesize dataReferences=_dataReferences - In the implementation block
-(void)setStrongReference:(id)arg1 message:(Reference*)arg2 ;
-(void)setWeakReference:(id)arg1 message:(Reference*)arg2 ;
-(void)setStrongLazyReference:(id)arg1 message:(Reference*)arg2 ;
-(void)setDataReference:(id)arg1 message:(DataReference*)arg2 ;
-(void)setMustUnderstandRuleForFieldPath:(int*)arg1 ;
-(void)setRule:(int)arg1 forFieldPath:(int*)arg2 ;
-(void)setIgnoreAndPreserveRuleForFieldPath:(int*)arg1 ;
-(void)setIgnoreAndDropRuleForFieldPath:(int*)arg1 ;
-(Message*)messageWithNewFunction:(/*function pointer*/void*)arg1 ;
-(char)forPasteboard;
-(void)setStrongReferenceArray:(id)arg1 message:(RepeatedPtrField<TSP::Reference>*)arg2 ;
-(void)setWeakReferenceArray:(id)arg1 message:(RepeatedPtrField<TSP::Reference>*)arg2 ;
-(void)setStrongLazyReferenceArray:(id)arg1 message:(RepeatedPtrField<TSP::Reference>*)arg2 ;
-(void)setWeakLazyReference:(id)arg1 message:(Reference*)arg2 ;
-(void)setDataReferenceArray:(id)arg1 message:(RepeatedPtrField<TSP::DataReference>*)arg2 ;
-(void)setMustUnderstandRuleForField:(int)arg1 ;
-(void)setIgnoreAndPreserveRuleForField:(int)arg1 ;
-(void)setIgnoreAndDropRuleForField:(int)arg1 ;
-(void)scopedRulesForField:(int)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)enumerateRulesUsingBlock:(/*^block*/id)arg1 ;
-(unsigned long long)messageVersion;
-(void)setMessageVersion:(unsigned long long)arg1 ;
-(NSHashTable *)strongReferences;
-(NSHashTable *)weakReferences;
-(NSHashTable *)commandToModelReferences;
-(NSHashTable *)lazyReferences;
-(NSHashTable *)dataReferences;
-(void)dealloc;
-(id)init;
-(TSPObject *)object;
-(Message*)message;
-(void)releaseMessage;
-(void)cleanup;
-(id)initWithObject:(id)arg1 ;
@end

