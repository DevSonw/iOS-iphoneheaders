/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:14 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <iWorkImport/iWorkImport-Structs.h>
@class TSDGLTextureInfo, TSDGLShader;

@interface TSDGLEdgeDistanceFieldMorphEffect : NSObject {

	char _didTeardown;
	CGRect _outgoingTextBounds;
	CGRect _incomingTextBounds;
	CGAffineTransform _outgoingTextureEdgeInsetsAdjustmentMatrix;
	CGAffineTransform _incomingTextureEdgeInsetsAdjustmentMatrix;
	SCD_Struct_TS472 _textureAdjustment;
	char _didSetupTextureAdjustment;
	char _isTextStyleIdenticalExceptSize;
	TSDGLTextureInfo* _outgoingTextureInfo;
	TSDGLTextureInfo* _incomingTextureInfo;
	TSDGLShader* _shader;

}

@property (nonatomic,readonly) TSDGLTextureInfo * outgoingTextureInfo;              //@synthesize outgoingTextureInfo=_outgoingTextureInfo - In the implementation block
@property (nonatomic,readonly) TSDGLTextureInfo * incomingTextureInfo;              //@synthesize incomingTextureInfo=_incomingTextureInfo - In the implementation block
@property (nonatomic,readonly) TSDGLShader * shader;                                //@synthesize shader=_shader - In the implementation block
@property (assign,nonatomic) char isTextStyleIdenticalExceptSize;                   //@synthesize isTextStyleIdenticalExceptSize=_isTextStyleIdenticalExceptSize - In the implementation block
+(void)willBeginUsingShaders;
+(void)didEndUsingShaders;
-(char)isTextStyleIdenticalExceptSize;
-(void)setIsTextStyleIdenticalExceptSize:(char)arg1 ;
-(CGContextRef)newContextFromTexture:(id)arg1 ;
-(CGRect)p_actualPixelBoundsOfTexturedRectangle:(id)arg1 ;
-(id)initWithOutgoingTextureName:(unsigned)arg1 outgoingTextureSize:(CGSize)arg2 outgoingTextBounds:(CGRect)arg3 outgoingColor:(tquat<float>)arg4 incomingTextureName:(unsigned)arg5 incomingTextureSize:(CGSize)arg6 incomingTextBounds:(CGRect)arg7 incomingColor:(tquat<float>)arg8 GLState:(id)arg9 motionBlur:(char)arg10 motionBlurIgnoreTextureOpacity:(char)arg11 ;
-(CGAffineTransform)p_affineTransformWithTextureAdjustment:(SCD_Struct_TS472)arg1 textureSize:(CGSize)arg2 ;
-(float)p_errorFromApplyingTextureAdjustment:(SCD_Struct_TS472)arg1 toOutgoingValue:(float)arg2 incomingValue:(float)arg3 sample:(unsigned)arg4 sampleCount:(unsigned)arg5 ;
-(SCD_Struct_TS472)textureMatchingTextureAdjustment;
-(void)p_fillScanlineCenters:(CGPoint*)arg1 scanlineMinMaxZeroes:(CGPoint*)arg2 samples:(unsigned)arg3 fromTexture:(unsigned)arg4 textureSize:(CGSize)arg5 ;
-(float)p_errorFromApplyingTextureAdjustment:(SCD_Struct_TS472)arg1 toOutgoingScanlineCenters:(CGPoint*)arg2 outgoingScanlineZeroes:(CGPoint*)arg3 incomingScanlineCenters:(CGPoint*)arg4 incomingScanlineZeroes:(CGPoint*)arg5 samples:(unsigned)arg6 ;
-(void)setupShaderWithMorphPercent:(float)arg1 MVPMatrix:(CATransform3D)arg2 outgoingTextureMatrix:(CGAffineTransform)arg3 incomingTextureMatrix:(CGAffineTransform)arg4 ;
-(id)initWithOutgoingTR:(id)arg1 incomingTR:(id)arg2 GLState:(id)arg3 motionBlur:(char)arg4 motionBlurIgnoreTextureOpacity:(char)arg5 ;
-(void)setupIfNecessary;
-(void)setupShaderWithMorphPercent:(float)arg1 MVPMatrix:(CATransform3D)arg2 generateTextureMatrices:(char)arg3 ;
-(TSDGLTextureInfo *)outgoingTextureInfo;
-(TSDGLTextureInfo *)incomingTextureInfo;
-(TSDGLShader *)shader;
-(void)dealloc;
-(void)teardown;
@end

