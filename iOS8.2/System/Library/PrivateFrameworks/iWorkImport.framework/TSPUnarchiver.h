/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:02 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol TSPObjectDelegate, TSPLazyReferenceDelegate, TSPUnarchiverDelegate;
#import <iWorkImport/iWorkImport-Structs.h>
@class TSPUnknownContent, NSUUID;

@interface TSPUnarchiver : NSObject {

	unsigned _messageType;
	auto_ptr<google::protobuf::Message>* _message;
	long long _objectIdentifier;
	auto_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > >* _strongReferences;
	unsigned long long _messageVersion;
	TSPUnknownContent* _unknownContent;
	id<TSPObjectDelegate> _objectDelegate;
	id<TSPLazyReferenceDelegate> _lazyReferenceDelegate;
	id<TSPUnarchiverDelegate> _delegate;
	vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference> >* _references;
	vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference> >* _repeatedReferences;
	vector<void ()(), std::__1::allocator<void ()()> >* _finalizeHandlers;

}

@property (nonatomic,readonly) char hasPreUFFVersion; 
@property (nonatomic,readonly) unsigned long long preUFFVersion; 
@property (nonatomic,readonly) char isFromPasteboard; 
@property (nonatomic,readonly) char isCrossDocumentPaste; 
@property (nonatomic,readonly) char isCrossAppPaste; 
@property (nonatomic,readonly) unsigned messageType;                                     //@synthesize messageType=_messageType - In the implementation block
@property (nonatomic,readonly) unsigned long long messageVersion;                        //@synthesize messageVersion=_messageVersion - In the implementation block
@property (nonatomic,readonly) unsigned long long fileFormatVersion; 
@property (nonatomic,readonly) char documentHasCurrentFileFormatVersion; 
@property (nonatomic,readonly) long long objectIdentifier;                               //@synthesize objectIdentifier=_objectIdentifier - In the implementation block
@property (nonatomic,readonly) NSUUID * objectUUID; 
@property (nonatomic,readonly) TSPUnknownContent * unknownContent;                       //@synthesize unknownContent=_unknownContent - In the implementation block
@property (nonatomic,__weak,readonly) id<TSPObjectDelegate> objectDelegate;              //@synthesize objectDelegate=_objectDelegate - In the implementation block
@property (nonatomic,__weak,readonly) id<TSPUnarchiverDelegate> delegate;                //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) char canValidateReferences; 
-(long long)objectIdentifier;
-(TSPUnknownContent *)unknownContent;
-(id<TSPObjectDelegate>)objectDelegate;
-(NSUUID *)objectUUID;
-(unsigned long long)fileFormatVersion;
-(unsigned long long)messageVersion;
-(hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > >*)strongReferences;
-(void)readReferenceMessage:(const Reference*)arg1 isWeak:(char)arg2 shouldValidate:(char)arg3 allowUnknownObject:(char)arg4 completion:(/*^block*/id)arg5 ;
-(char)canValidateReferences;
-(void)readRepeatedReferenceMessage:(const RepeatedPtrField<TSP::Reference>*)arg1 isWeak:(char)arg2 allowUnknownObject:(char)arg3 completion:(/*^block*/id)arg4 ;
-(void)readLazyReferenceMessage:(const Reference*)arg1 isWeak:(char)arg2 shouldValidate:(char)arg3 allowUnknownObject:(char)arg4 completion:(/*^block*/id)arg5 ;
-(void)readRepeatedLazyReferenceMessage:(const RepeatedPtrField<TSP::Reference>*)arg1 isWeak:(char)arg2 shouldValidate:(char)arg3 allowUnknownObject:(char)arg4 completion:(/*^block*/id)arg5 ;
-(void)readReferenceMessage:(const Reference*)arg1 completion:(/*^block*/id)arg2 ;
-(void)readWeakReferenceMessage:(const Reference*)arg1 completion:(/*^block*/id)arg2 ;
-(void)readRepeatedReferenceMessage:(const RepeatedPtrField<TSP::Reference>*)arg1 completion:(/*^block*/id)arg2 ;
-(void)readRepeatedWeakReferenceMessage:(const RepeatedPtrField<TSP::Reference>*)arg1 completion:(/*^block*/id)arg2 ;
-(void)readLazyReferenceMessage:(const Reference*)arg1 completion:(/*^block*/id)arg2 ;
-(void)readWeakLazyReferenceMessage:(const Reference*)arg1 completion:(/*^block*/id)arg2 ;
-(void)readRepeatedLazyReferenceMessage:(const RepeatedPtrField<TSP::Reference>*)arg1 completion:(/*^block*/id)arg2 ;
-(void)readRepeatedWeakLazyReferenceMessage:(const RepeatedPtrField<TSP::Reference>*)arg1 completion:(/*^block*/id)arg2 ;
-(id)readDataReferenceMessage:(const DataReference*)arg1 ;
-(char)documentHasCurrentFileFormatVersion;
-(void)addFinalizeHandler:(/*^block*/id)arg1 ;
-(id)initWithMessageType:(unsigned)arg1 message:(auto_ptr<google::protobuf::Message>*)arg2 identifier:(long long)arg3 strongReferences:(auto_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool> > > >*)arg4 fieldInfos:(auto_ptr<TSP::FieldInfoTree>*)arg5 messageVersion:(unsigned long long)arg6 unknownMessages:(id)arg7 ignoreVersionChecking:(char)arg8 objectDelegate:(id)arg9 lazyReferenceDelegate:(id)arg10 delegate:(id)arg11 error:(id*)arg12 ;
-(vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference> >*)repeatedReferences;
-(vector<void ()(), std::__1::allocator<void ()()> >*)finalizeHandlers;
-(void)readReferenceMessage1:(const Reference*)arg1 message2:(const Reference*)arg2 completion:(/*^block*/id)arg3 ;
-(void)readWeakReferenceMessage1:(const Reference*)arg1 message2:(const Reference*)arg2 completion:(/*^block*/id)arg3 ;
-(void)readReferenceMessage:(const Reference*)arg1 repeatedMessage:(const RepeatedPtrField<TSP::Reference>*)arg2 completion:(/*^block*/id)arg3 ;
-(void)readWeakReferenceMessage:(const Reference*)arg1 repeatedMessage:(const RepeatedPtrField<TSP::Reference>*)arg2 completion:(/*^block*/id)arg3 ;
-(char)isCrossAppPaste;
-(char)isCrossDocumentPaste;
-(char)isFromPasteboard;
-(set<long long, std::__1::less<long long>, std::__1::allocator<long long> >Ref)filterIdentifiers:(const set<long long, std::__1::less<long long>, std::__1::allocator<long long> >Ref)arg1 ;
-(unsigned long long)preUFFVersion;
-(char)hasPreUFFVersion;
-(void)readSparseReferenceArchive:(const SparseReferenceArrayArchive*)arg1 class:(Class)arg2 completion:(/*^block*/id)arg3 ;
-(unsigned)messageType;
-(id<TSPUnarchiverDelegate>)delegate;
-(const Message*)message;
-(vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference> >*)references;
@end

