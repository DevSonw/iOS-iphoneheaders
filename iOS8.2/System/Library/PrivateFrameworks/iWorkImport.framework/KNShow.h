/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:20 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>

@class KNUIState, KNTheme, KNSlideTree, TSSStylesheet, KNRecording, KNSoundtrack;

@interface KNShow : TSPObject {

	KNUIState* mUIState;
	KNTheme* mTheme;
	KNSlideTree* mSlideTree;
	TSSStylesheet* mStylesheet;
	KNRecording* mRecording;
	CGSize mSize;
	double mAutoplayTransitionDelay;
	double mAutoplayBuildDelay;
	double mIdleTimerDelay;
	int mMode;
	char mLoopPresentation;
	char mIdleTimerActive;
	char mAutomaticallyPlaysUponOpen;
	char mNeedsToUpdateThumbnails;
	char mWasImportedAsPreUFF;
	KNSoundtrack* mSoundtrack;

}

@property (assign,nonatomic) CGSize size; 
@property (nonatomic,retain) KNUIState * uiState; 
@property (nonatomic,retain) KNTheme * theme; 
@property (nonatomic,retain) KNSlideTree * slideTree; 
@property (nonatomic,readonly) TSSStylesheet * stylesheet; 
@property (assign,nonatomic) double autoplayTransitionDelay; 
@property (assign,nonatomic) double autoplayBuildDelay; 
@property (assign,nonatomic) double idleTimerDelay; 
@property (assign,nonatomic) int mode; 
@property (nonatomic,retain) KNSoundtrack * soundtrack; 
@property (nonatomic,retain) KNRecording * recording; 
@property (assign,nonatomic) char loopPresentation; 
@property (assign,nonatomic) char idleTimerActive; 
@property (assign,nonatomic) char automaticallyPlaysUponOpen; 
@property (nonatomic,readonly) char slideNumbersVisible; 
@property (nonatomic,readonly) char needsToUpdateThumbnails; 
@property (nonatomic,readonly) char wasImportedAsPreUFF; 
+(id)showWithSize:(CGSize)arg1 context:(id)arg2 ;
-(id)initFromUnarchiver:(id)arg1 ;
-(void)willModify;
-(void)saveToArchiver:(id)arg1 ;
-(void)saveToArchive:(ShowArchive*)arg1 archiver:(id)arg2 ;
-(void)loadFromArchive:(const ShowArchive*)arg1 unarchiver:(id)arg2 ;
-(KNUIState *)uiState;
-(KNSlideTree *)slideTree;
-(id)initWithSize:(CGSize)arg1 context:(id)arg2 ;
-(unsigned)indexOfSlideNode:(id)arg1 ;
-(void)setSlideTree:(KNSlideTree *)arg1 ;
-(double)autoplayTransitionDelay;
-(void)setAutoplayTransitionDelay:(double)arg1 ;
-(double)autoplayBuildDelay;
-(void)setAutoplayBuildDelay:(double)arg1 ;
-(double)idleTimerDelay;
-(void)setIdleTimerDelay:(double)arg1 ;
-(char)loopPresentation;
-(void)setLoopPresentation:(char)arg1 ;
-(char)idleTimerActive;
-(void)setIdleTimerActive:(char)arg1 ;
-(char)automaticallyPlaysUponOpen;
-(void)setAutomaticallyPlaysUponOpen:(char)arg1 ;
-(KNSoundtrack *)soundtrack;
-(void)setSoundtrack:(KNSoundtrack *)arg1 ;
-(char)slideNumbersVisible;
-(id)slideNodeAtIndex:(unsigned)arg1 ;
-(void)setUiState:(KNUIState *)arg1 ;
-(char)needsToUpdateThumbnails;
-(char)wasImportedAsPreUFF;
-(void)setRecording:(KNRecording *)arg1 ;
-(void)dealloc;
-(CGSize)size;
-(void)setSize:(CGSize)arg1 ;
-(CGPoint)center;
-(void)setMode:(int)arg1 ;
-(int)mode;
-(KNRecording *)recording;
-(KNTheme *)theme;
-(void)setTheme:(KNTheme *)arg1 ;
-(TSSStylesheet *)stylesheet;
@end

