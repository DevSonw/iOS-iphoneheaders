/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:12 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDLayoutManipulatingTracker.h>

@class TSDRep, TSDKnob, TSDAutoscroll, TSDInteractiveCanvasController;

@interface TSDKnobTracker : NSObject <TSDLayoutManipulatingTracker> {

	TSDRep* mRep;
	TSDKnob* mKnob;
	CGPoint mCurrentPosition;
	CGPoint mKnobOffset;
	char mDidBegin;
	char mDidDrag;
	char mDragEnding;
	char mEndedOperationDueToESC;
	char mIsInspectorDrivenTracking;
	TSDAutoscroll* mAutoscroll;

}

@property (nonatomic,readonly) TSDInteractiveCanvasController * icc; 
@property (nonatomic,retain) TSDRep * rep; 
@property (nonatomic,retain) TSDKnob * knob; 
@property (nonatomic,readonly) char didBegin; 
@property (assign,nonatomic) char didDrag; 
@property (assign,nonatomic) char dragEnding; 
@property (nonatomic,readonly) double delay; 
@property (assign,nonatomic) CGPoint currentPosition; 
@property (nonatomic,readonly) char endedOperationDueToESC; 
@property (assign,nonatomic) char isInspectorDrivenTracking; 
@property (nonatomic,readonly) CGPoint knobOffset; 
@property (nonatomic,retain) TSDAutoscroll * autoscroll; 
-(TSDRep *)rep;
-(id)initWithRep:(id)arg1 knob:(id)arg2 ;
-(void)changeDynamicLayoutsForReps:(id)arg1 ;
-(unsigned long long)enabledKnobMask;
-(CGRect)currentBoundsForStandardKnobs;
-(char)shouldHideSelectionHighlight;
-(CGAffineTransform)transformInRootForStandardKnobs;
-(CGPoint)convertKnobPositionToUnscaledCanvas:(CGPoint)arg1 ;
-(CGPoint)convertKnobPositionFromUnscaledCanvas:(CGPoint)arg1 ;
-(void)setKnob:(TSDKnob *)arg1 ;
-(void)setRep:(TSDRep *)arg1 ;
-(void)moveKnobToRepPosition:(CGPoint)arg1 ;
-(char)shouldHideOtherKnobs;
-(char)didDrag;
-(char)dragEnding;
-(void)i_resetCurrentPositionToKnobPositionIfAppropriate;
-(void)beginMovingKnob;
-(void)setDidDrag:(char)arg1 ;
-(void)moveKnobToCanvasPosition:(CGPoint)arg1 ;
-(void)endMovingKnob;
-(char)shouldOpenCommandGroupToCommitChangesForReps:(id)arg1 ;
-(void)commitChangesForReps:(id)arg1 ;
-(char)supportsAlignmentGuides;
-(char)operationShouldBeDynamic;
-(TSDInteractiveCanvasController *)icc;
-(char)allowHUDToDisplay;
-(char)shouldUseKnobOffset;
-(char)shouldEndMovingKnobOnESC;
-(void)willEndMovingKnobDueToESC;
-(void)i_setKnobOffset:(CGPoint)arg1 ;
-(char)wantsAutoscroll;
-(void)updateAfterAutoscroll:(id)arg1 ;
-(float)unscaledStartAutoscrollThreshold;
-(int)allowedAutoscrollDirections;
-(char)isInspectorDrivenTracking;
-(void)setIsInspectorDrivenTracking:(char)arg1 ;
-(void)setDragEnding:(char)arg1 ;
-(char)endedOperationDueToESC;
-(CGPoint)knobOffset;
-(void)setCurrentPosition:(CGPoint)arg1 ;
-(char)didBegin;
-(void)dealloc;
-(double)delay;
-(void)autoscrollWillNotStart;
-(TSDAutoscroll *)autoscroll;
-(void)setAutoscroll:(TSDAutoscroll *)arg1 ;
-(CGPoint)currentPosition;
-(TSDKnob *)knob;
@end

