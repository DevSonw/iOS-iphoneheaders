/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:12 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSSThemeAsset.h>
#import <iWorkImport/TSDPathPainter.h>
#import <iWorkImport/TSDMixing.h>
#import <iWorkImport/NSCopying.h>
#import <iWorkImport/NSMutableCopying.h>

@class TSUColor, TSDStrokePattern, NSString;

@interface TSDStroke : NSObject <TSSThemeAsset, TSDPathPainter, TSDMixing, NSCopying, NSMutableCopying> {

	TSUColor* mColor;
	float mWidth;
	float mActualWidth;
	int mCap;
	int mJoin;
	TSDStrokePattern* mPattern;
	float mMiterLimit;

}

@property (nonatomic,readonly) char dontClearBackground; 
@property (nonatomic,readonly) char empty; 
@property (nonatomic,readonly) char solid; 
@property (nonatomic,retain) TSUColor * color; 
@property (assign,nonatomic) float width; 
@property (assign,nonatomic) float actualWidth; 
@property (assign,nonatomic) int cap; 
@property (assign,nonatomic) int join; 
@property (assign,nonatomic) float miterLimit; 
@property (nonatomic,retain) TSDStrokePattern * pattern; 
@property (nonatomic,readonly) char isNullStroke; 
@property (nonatomic,readonly) char isDash; 
@property (nonatomic,readonly) char isRoundDash; 
@property (nonatomic,readonly) char shouldRender; 
@property (nonatomic,readonly) char supportsPattern; 
@property (nonatomic,readonly) char supportsWidth; 
@property (nonatomic,readonly) char supportsColor; 
@property (nonatomic,readonly) char supportsLineOptions; 
@property (nonatomic,readonly) float suggestedMinimumLineWidth; 
@property (nonatomic,readonly) char isFrame; 
@property (nonatomic,readonly) char isNearlyWhite; 
@property (nonatomic,readonly) float dashSpacing; 
@property (nonatomic,readonly) char drawsOutsideStrokeBounds; 
@property (nonatomic,readonly) TSDStrokeOutsets outsets; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)instanceWithArchive:(const StrokeArchive*)arg1 unarchiver:(id)arg2 ;
+(char)canMixWithNilObjects;
+(id)strokeWithColor:(id)arg1 width:(float)arg2 ;
+(id)emptyStroke;
+(id)p_newStroke;
+(id)p_newEmptyStroke;
+(Class)mutableClass;
+(id)strokeWithColor:(id)arg1 width:(float)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 ;
+(id)mergeRangeEmptyStroke;
+(id)zeroWidthEmptyStroke;
+(id)emptyStrokeWithWidth:(float)arg1 ;
+(id)stroke;
-(void)saveToArchive:(StrokeArchive*)arg1 archiver:(id)arg2 ;
-(id)initWithArchive:(const StrokeArchive*)arg1 unarchiver:(id)arg2 ;
-(void)drawSwatchInRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(char)isThemeEquivalent:(id)arg1 ;
-(SEL)mapThemeAssetSelector;
-(char)isNullStroke;
-(char)shouldRender;
-(char)isRoundDash;
-(float)actualWidth;
-(void)applyToContext:(CGContextRef)arg1 ;
-(id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2 ;
-(int)mixingTypeWithObject:(id)arg1 ;
-(void)applyToContext:(CGContextRef)arg1 insideStroke:(char)arg2 ;
-(void)paintPath:(CGPathRef)arg1 wantsInteriorStroke:(char)arg2 inContext:(CGContextRef)arg3 ;
-(void)aaDefeatedPaintLineEnd:(id)arg1 atPoint:(CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 inContext:(CGContextRef)arg5 ;
-(CGRect)boundsForLineEnd:(id)arg1 atPoint:(CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 transform:(CGAffineTransform)arg5 ;
-(void)applyToCAShapeLayer:(id)arg1 insideStroke:(char)arg2 withScale:(float)arg3 ;
-(char)isDash;
-(id)initWithColor:(id)arg1 width:(float)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 ;
-(id)initWithColor:(id)arg1 width:(float)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(float)arg6 ;
-(char)supportsWidth;
-(char)supportsLineOptions;
-(char)supportsPattern;
-(void)setActualWidth:(float)arg1 ;
-(id)colorForCGContext:(CGContextRef)arg1 ;
-(void)paintRect:(CGRect)arg1 wantsInteriorStroke:(char)arg2 inContext:(CGContextRef)arg3 ;
-(void)paintPath:(CGPathRef)arg1 wantsInteriorStroke:(char)arg2 inContext:(CGContextRef)arg3 useFastDrawing:(char)arg4 ;
-(void)paintLineEnd:(id)arg1 atPoint:(CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 inContext:(CGContextRef)arg5 useFastDrawing:(char)arg6 ;
-(char)canApplyDirectlyToRepCALayer;
-(char)canApplyToCAShapeLayer;
-(char)drawsOutsideStrokeBounds;
-(char)needsToExtendJoinsForBoundsCalculation;
-(CGRect)boundsForPath:(id)arg1 ;
-(TSDStrokeOutsets)outsets;
-(void)p_setPropertiesFromStroke:(id)arg1 ;
-(void)p_setPatternPropertiesFromStroke:(id)arg1 ;
-(void)applyInteriorWrapPropertiesToContext:(CGContextRef)arg1 insideStroke:(char)arg2 ;
-(float)lineEndInsetAdjustment;
-(id)strokeLineEnd:(id)arg1 ;
-(void)paintPathWithNormalClip:(CGPathRef)arg1 wantsInteriorStroke:(char)arg2 inContext:(CGContextRef)arg3 ;
-(void)paintLineEnd:(id)arg1 atPoint:(CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 inContext:(CGContextRef)arg5 ;
-(id)pathForLineEnd:(id)arg1 wrapPath:(char)arg2 atPoint:(CGPoint)arg3 atAngle:(float)arg4 withScale:(float)arg5 ;
-(float)suggestedMinimumLineWidth;
-(void)applyToRepCALayer:(id)arg1 withScale:(float)arg2 ;
-(char)prefersToApplyToCAShapeLayerDuringManipulation;
-(void)applyToCAShapeLayer:(id)arg1 withScale:(float)arg2 ;
-(char)drawsInOneStep;
-(char)shouldAntialiasDefeat;
-(id)strokeByTransformingByTransform:(CGAffineTransform)arg1 ;
-(char)solid;
-(char)dontClearBackground;
-(char)isEqualToStroke:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(char)isEqual:(id)arg1 ;
-(unsigned)hash;
-(NSString *)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(float)miterLimit;
-(void)setMiterLimit:(float)arg1 ;
-(float)width;
-(TSUColor *)color;
-(void)setColor:(TSUColor *)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(void)setWidth:(float)arg1 ;
-(char)supportsColor;
-(char)isFrame;
-(char)isNearlyWhite;
-(void)paintRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(void)paintPath:(CGPathRef)arg1 inContext:(CGContextRef)arg2 ;
-(void)setCap:(int)arg1 ;
-(void)setJoin:(int)arg1 ;
-(int)cap;
-(int)join;
-(float)dashSpacing;
-(TSDStrokePattern *)pattern;
-(void)setPattern:(TSDStrokePattern *)arg1 ;
-(char)empty;
@end

