/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:07 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <iWorkImport/iWorkImport-Structs.h>
@class TSCH3DShaderVariable, NSMutableSet;

@interface TSCH3DShaderVariableLinkage : NSObject {

	TSCH3DShaderVariable* mVariable;
	TSCH3DShaderType mLinked;
	TSCH3DShaderVariableScopes mScope;
	TSCH3DShaderVariableScopes mDeclaredScope;
	char mIsUsed;
	NSMutableSet* mDependees;

}

@property (nonatomic,readonly) TSCH3DShaderVariable * variable; 
@property (nonatomic,readonly) NSMutableSet * dependees; 
@property (nonatomic,readonly) TSCH3DShaderType shaderType; 
@property (nonatomic,readonly) TSCH3DShaderType linked; 
@property (nonatomic,readonly) TSCH3DShaderVariableScopes scope; 
@property (nonatomic,readonly) char isLinked; 
@property (nonatomic,readonly) char notLinked; 
@property (nonatomic,readonly) TSCH3DShaderVariableScopes declaredScope; 
@property (assign,nonatomic) char isUsed; 
@property (nonatomic,readonly) char isSpecial; 
@property (nonatomic,readonly) char isUniform; 
@property (nonatomic,readonly) char hasAttribute; 
@property (nonatomic,readonly) char isAttribute; 
@property (nonatomic,readonly) char isVertexVarying; 
@property (nonatomic,readonly) char isFragment; 
@property (nonatomic,readonly) char hasFragment; 
@property (nonatomic,readonly) char canHaveFragment; 
@property (nonatomic,readonly) char isVertex; 
@property (nonatomic,readonly) char hasVertex; 
@property (nonatomic,readonly) char scopeHasFragment; 
@property (nonatomic,readonly) char scopedInAll; 
@property (nonatomic,readonly) char isFragmentLinkable; 
@property (nonatomic,readonly) char isVertexLinkable; 
@property (nonatomic,readonly) unsigned hasGlobal; 
+(id)linkageWithVariable:(id)arg1 ;
-(TSCH3DShaderType)shaderType;
-(TSCH3DShaderVariableScopes)declaredScope;
-(char)hasBody:(TSCH3DShaderType)arg1 ;
-(void)addShader:(TSCH3DShaderType)arg1 scope:(TSCH3DShaderVariableScopeType)arg2 ;
-(void)addLinkage:(TSCH3DShaderType)arg1 ;
-(void)addDeclaredShader:(TSCH3DShaderType)arg1 scope:(TSCH3DShaderVariableScopeType)arg2 ;
-(void)setIsUsed:(char)arg1 ;
-(char)notLinked;
-(char)isUniform;
-(char)hasFragment;
-(char)canHaveFragment;
-(char)isVarying:(TSCH3DShaderType)arg1 ;
-(char)hasVertex;
-(char)hasAttribute;
-(char)scopedInAll;
-(char)isFragmentLinkable;
-(char)isVertexLinkable;
-(TSCH3DShaderType)linked;
-(char)updateLinkage:(TSCH3DShaderType)arg1 ;
-(void)addBodyScope:(TSCH3DShaderType)arg1 ;
-(id)nameForShader:(TSCH3DShaderType)arg1 scope:(TSCH3DShaderVariableScopeType)arg2 ;
-(id)variableDeclarationInShader:(TSCH3DShaderType)arg1 scope:(TSCH3DShaderVariableScopeType)arg2 ;
-(NSMutableSet *)dependees;
-(void)setShader:(TSCH3DShaderType)arg1 scope:(TSCH3DShaderVariableScopeType)arg2 ;
-(void)setLinkage:(TSCH3DShaderType)arg1 ;
-(id)globalNameForShader:(TSCH3DShaderType)arg1 scope:(TSCH3DShaderVariableScopeType)arg2 ;
-(id)variableQualifiersWithStorageQualifier:(id)arg1 ;
-(char)isUsed;
-(id)initWithVariable:(id)arg1 ;
-(char)isVertexVarying;
-(char)scopeHasFragment;
-(char)isVertex;
-(char)isFragment;
-(char)isGlobalScope:(TSCH3DShaderVariableScopeType)arg1 ;
-(unsigned)hasGlobal;
-(char)hasShader:(TSCH3DShaderType)arg1 scope:(TSCH3DShaderVariableScopeType)arg2 ;
-(id)resolveGlobalNameForShader:(TSCH3DShaderType)arg1 scope:(TSCH3DShaderVariableScopeType)arg2 defaultTo:(id)arg3 ;
-(char)hasVarying;
-(char)updateShader:(TSCH3DShaderType)arg1 scope:(TSCH3DShaderVariableScopeType)arg2 ;
-(void)removeShader:(TSCH3DShaderType)arg1 scope:(TSCH3DShaderVariableScopeType)arg2 ;
-(void)removeLinkage:(TSCH3DShaderType)arg1 ;
-(char)hasLinkage:(TSCH3DShaderType)arg1 ;
-(char)isAttribute;
-(void)dealloc;
-(id)description;
-(TSCH3DShaderVariableScopes)scope;
-(TSCH3DShaderVariable *)variable;
-(char)isLinked;
-(char)isSpecial;
-(void)unlink;
@end

