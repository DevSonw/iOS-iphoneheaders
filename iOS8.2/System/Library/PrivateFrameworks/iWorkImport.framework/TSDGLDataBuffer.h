/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:27:13 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDGLDataBufferAccessor.h>

@class NSMutableArray, NSMutableDictionary, TSDGLShader, NSArray, NSString;

@interface TSDGLDataBuffer : NSObject <TSDGLDataBufferAccessor> {

	unsigned mCurrentBufferIndex;
	NSMutableArray* mArrayBuffers;
	NSMutableDictionary* mAttributeToArrayBuffersDictionary;
	unsigned mElementArrayCount;
	unsigned short* mGLElementData;
	char mGLElementDataBufferWasSetup;
	unsigned mGLElementDataBuffer;
	CGSize mGLElementMeshSize;
	unsigned mGLElementQuadParticleCount;
	unsigned mGLVertexArrayObjects[2];
	char _isUpdatingRawDataBuffer;
	char _didTeardown;
	char _isEnabled;
	TSDGLShader* _enabledShader;
	char _isDoubleBuffered;
	unsigned _vertexCount;
	NSArray* _vertexAttributes;
	unsigned _drawMode;

}

@property (readonly) unsigned vertexCount;                          //@synthesize vertexCount=_vertexCount - In the implementation block
@property (readonly) NSArray * vertexAttributes;                    //@synthesize vertexAttributes=_vertexAttributes - In the implementation block
@property (assign,nonatomic) unsigned drawMode;                     //@synthesize drawMode=_drawMode - In the implementation block
@property (readonly) char isDoubleBuffered;                         //@synthesize isDoubleBuffered=_isDoubleBuffered - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setGLfloat:(float)arg1 forAttribute:(id)arg2 atIndex:(unsigned)arg3 ;
-(float)GLfloatForAttribute:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)setCGFloat:(float)arg1 forAttribute:(id)arg2 atIndex:(unsigned)arg3 ;
-(CGSize)GLPoint2DForAttribute:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)setGLPoint2D:(CGSize)arg1 forAttribute:(id)arg2 atIndex:(unsigned)arg3 ;
-(SCD_Struct_TS470)GLPoint3DForAttribute:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)setGLPoint3D:(SCD_Struct_TS470)arg1 forAttribute:(id)arg2 atIndex:(unsigned)arg3 ;
-(tquat<float>)GLPoint4DForAttribute:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)setGLPoint4D:(tquat<float>)arg1 forAttribute:(id)arg2 atIndex:(unsigned)arg3 ;
-(void)setGLushort:(unsigned short)arg1 forIndexElement:(unsigned)arg2 ;
-(id)initWithVertexAttributes:(id)arg1 vertexCount:(unsigned)arg2 indexElementCount:(unsigned)arg3 doubleBuffered:(char)arg4 ;
-(id)initWithVertexAttributes:(id)arg1 meshSize:(CGSize)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 textureFlipped:(char)arg4 includeCenterAttribute:(char)arg5 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 textureFlipped:(char)arg4 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 ;
-(char)isDoubleBuffered;
-(void)p_setupGLElementArrayBufferIfNecessary;
-(void)enableElementArrayBuffer;
-(void)drawWithShader:(id)arg1 deactivateShaderWhenDone:(char)arg2 ;
-(void)drawWithShader:(id)arg1 range:(NSRange)arg2 deactivateShaderWhenDone:(char)arg3 ;
-(void)enableDataBufferWithShader:(id)arg1 ;
-(void)disableDataBufferWithShader:(id)arg1 ;
-(char)p_setAttributeUpdateData:(SCD_Struct_TS471*)arg1 fromAttribute:(id)arg2 ;
-(id)initWithVertexAttributes:(id)arg1 quadParticleCount:(unsigned)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 textureFlipped:(char)arg3 ;
-(unsigned short)GLushortForIndexElement:(unsigned)arg1 ;
-(void)disableElementArrayBuffer;
-(void)drawWithShader:(id)arg1 ;
-(void)setDataForAttribute:(id)arg1 atIndex:(unsigned)arg2 fromAttribute:(id)arg3 dataBuffer:(id)arg4 index:(unsigned)arg5 ;
-(id)vertexAttributeNamed:(id)arg1 ;
-(void)updateDataBufferAttributes:(id)arg1 withBlock:(/*^block*/id)arg2 ;
-(NSArray *)vertexAttributes;
-(void)dealloc;
-(NSString *)description;
-(unsigned)drawMode;
-(void)setDrawMode:(unsigned)arg1 ;
-(void)teardown;
-(unsigned)vertexCount;
@end

