/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:26:28 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <QuartzCore/CALayer.h>
#import <VectorKit/VKInteractiveMapDelegate.h>
#import <VectorKit/MDMapControllerDelegate.h>
#import <VectorKit/GGLLayerDisruptor.h>
#import <VectorKit/GGLRenderQueueSource.h>

@protocol VKMapViewDelegate;
@class VKMapCanvas, VKClassicGlobeCanvas, MDDisplayLayer, NSString, VKAnimation, VKLabelMarker, VKMemoryObserver, GGLDisplayLink, NSMutableArray, GEOResourceManifestConfiguration, CADisplay, VKStyleManager, GEOMapRegion, NSArray, VKPolylineOverlayPainter;

@interface VKMapView : CALayer <VKInteractiveMapDelegate, MDMapControllerDelegate, GGLLayerDisruptor, GGLRenderQueueSource> {

	int _mapType;
	VKMapCanvas* _canvas;
	VKClassicGlobeCanvas* _globe;
	MDDisplayLayer* _mapLayer;
	id<VKMapViewDelegate> _mapDelegate;
	char _loaderOpen;
	char _additionalManifestConfigurationLoaderOpen;
	NSString* _tileLoaderClientID;
	unsigned _mapDisplayStyle;
	VKAnimation* _mapDisplayStyleAnimation;
	VKAnimation* _edgeInsetAnimation;
	VKEdgeInsets _animatingToEdgeInsets;
	char _isChangingMapType;
	unsigned _regionChangeCount;
	char _containsOverlay;
	double _verticalYaw;
	VKLabelMarker* _selectedLabelMarker;
	unsigned _applicationState;
	VKMemoryObserver* _memoryObserver;
	GGLDisplayLink* _displayLink;
	int _displayRate;
	int _requestedRate;
	shared_ptr<ggl::RenderQueue>* _renderQueue;
	NSMutableArray* _annotationMarkersToAddToNewCanvas;
	char _isInBackground;
	GEOResourceManifestConfiguration* _additionalManifestConfiguration;

}

@property (nonatomic,readonly) VKMapCanvas * mapCanvas; 
@property (assign,nonatomic) char shouldLoadFallbackTiles; 
@property (assign,nonatomic) char shouldLoadMapMargin; 
@property (assign,nonatomic) id<VKMapViewDelegate> mapDelegate;                                                  //@synthesize mapDelegate=_mapDelegate - In the implementation block
@property (assign,nonatomic) char staysCenteredDuringPinch; 
@property (assign,nonatomic) char staysCenteredDuringRotation; 
@property (nonatomic,retain) CADisplay * hostDisplay; 
@property (assign,nonatomic) char isPitchable; 
@property (getter=isPitched,nonatomic,readonly) char pitched; 
@property (getter=isFullyPitched,nonatomic,readonly) char fullyPitched; 
@property (nonatomic,readonly) char canEnter3DMode; 
@property (getter=isShowingFlyover,nonatomic,readonly) char showingFlyover; 
@property (nonatomic,readonly) char canShowFlyover; 
@property (assign,nonatomic) char trafficEnabled; 
@property (assign,nonatomic) int displayRate; 
@property (assign,nonatomic) char localizeLabels; 
@property (assign,nonatomic) int labelScaleFactor; 
@property (assign,nonatomic) char dynamicMapModesEnabled; 
@property (assign,nonatomic) int mapType; 
@property (assign,nonatomic) unsigned mapDisplayStyle; 
@property (nonatomic,readonly) double minimumZoomLevel; 
@property (nonatomic,readonly) double maximumZoomLevel; 
@property (nonatomic,readonly) double currentZoomLevel; 
@property (nonatomic,retain) VKStyleManager * styleManager; 
@property (assign,nonatomic) int targetDisplay; 
@property (assign,getter=isLabelMarkerSelectionEnabled,nonatomic) char labelMarkerSelectionEnabled; 
@property (assign,nonatomic) int shieldSize; 
@property (assign,nonatomic) int navigationShieldSize; 
@property (assign,nonatomic) int shieldIdiom; 
@property (assign,nonatomic) char showsPointsOfInterest; 
@property (assign,nonatomic) char showsBuildings; 
@property (nonatomic,retain) GEOResourceManifestConfiguration * additionalManifestConfiguration;                 //@synthesize additionalManifestConfiguration=_additionalManifestConfiguration - In the implementation block
@property (assign,nonatomic) VKEdgeInsets edgeInsets; 
@property (assign,nonatomic) VKEdgeInsets fullyOccludedEdgeInsets; 
@property (assign,nonatomic) VKEdgeInsets labelEdgeInsets; 
@property (nonatomic,retain) GEOMapRegion * mapRegion; 
@property (nonatomic,readonly) GEOMapRegion * mapRegionOfInterest; 
@property (nonatomic,readonly) double yaw; 
@property (nonatomic,readonly) double presentationYaw; 
@property (nonatomic,readonly) double verticalYaw;                                                               //@synthesize verticalYaw=_verticalYaw - In the implementation block
@property (nonatomic,readonly) double pitch; 
@property (nonatomic,readonly) double altitude; 
@property (assign,nonatomic) VKPoint centerCoordinate; 
@property (assign,nonatomic) char allowDatelineWraparound; 
@property (assign,getter=isGesturing,nonatomic) char gesturing; 
@property (assign,nonatomic) char iconsShouldAlignToPixels; 
@property (getter=isFullyDrawn,nonatomic,readonly) char fullyDrawn; 
@property (assign,nonatomic) int trackingCameraPanStyle; 
@property (assign,nonatomic) double trackingZoomScale; 
@property (assign,nonatomic) int annotationTrackingZoomStyle; 
@property (getter=isAnimatingToTrackAnnotation,nonatomic,readonly) char animatingToTrackAnnotation; 
@property (nonatomic,readonly) char canShowFlyoverAnimation; 
@property (nonatomic,readonly) VKLabelMarker * selectedLabelMarker; 
@property (nonatomic,readonly) NSArray * annotationMarkers; 
@property (nonatomic,readonly) NSArray * labelMarkers; 
@property (nonatomic,retain) VKPolylineOverlayPainter * focusedLabelsPolylinePainter; 
@property (nonatomic,retain) NSArray * externalTrafficIncidents; 
@property (nonatomic,retain) id<GEORoutePreloadSession> routePreloadSession; 
@property (assign,nonatomic) char rendersInBackground; 
@property (assign,nonatomic) char debugDrawContinuously; 
@property (assign,nonatomic) char debugLayoutContinuously; 
@property (assign,nonatomic) char debugEnableMultisampling; 
@property (nonatomic,readonly) float debugFramesPerSecond; 
@property (nonatomic,readonly) char enableDebugLabelHighlighting; 
@property (nonatomic,readonly) NSArray * visibleTileSets; 
@property (assign,nonatomic) double userZoomFocusStyleGroundspanMeters; 
@property (assign,nonatomic) double userZoomFocusStyleMinGroundspanMeters; 
@property (assign,nonatomic) double userZoomFocusStyleMaxGroundspanMeters; 
@property (assign,nonatomic) unsigned applicationState;                                                          //@synthesize applicationState=_applicationState - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_mapkit_configureFromDefaults:(char)arg1 ;
-(void)dealloc;
-(void)setNeedsDisplay;
-(void)setNeedsLayout;
-(void)setHidden:(char)arg1 ;
-(void)setBounds:(CGRect)arg1 ;
-(unsigned)applicationState;
-(VKEdgeInsets)edgeInsets;
-(void)renderInContext:(CGContextRef)arg1 ;
-(void)setContentsScale:(float)arg1 ;
-(void)_updateBackgroundColor;
-(void)forceLayout;
-(void)didReceiveMemoryWarning:(id)arg1 ;
-(void)setEdgeInsets:(VKEdgeInsets)arg1 ;
-(void)willEnterForeground;
-(/*^block*/id)annotationRectTest;
-(/*^block*/id)annotationCoordinateTest;
-(double)pitch;
-(double)yaw;
-(char)allowDatelineWraparound;
-(void)setAllowDatelineWraparound:(char)arg1 ;
-(VKMapCanvas *)mapCanvas;
-(void)_setMaximumZoomLevel:(double)arg1 ;
-(void)_resetMaximumZoomLevel;
-(void)setApplicationState:(unsigned)arg1 ;
-(void)_updateMapDisplayStyle;
-(void)_closeAdditionalManifestConfigurationLoaderConnection;
-(void)_openAdditionalManifestConfigurationLoaderConnection;
-(void)setAdditionalManifestConfiguration:(GEOResourceManifestConfiguration *)arg1 ;
-(id)currentCanvas;
-(void)setLabelMarkerSelectionEnabled:(char)arg1 ;
-(void)forceSceneLoad;
-(int)mapType;
-(NSArray *)visibleTileSets;
-(id)attributionsForCurrentRegion;
-(char)isShowingNoDataPlaceholders;
-(void)setStylesheetName:(id)arg1 ;
-(VKStyleManager *)styleManager;
-(void)setStyleManager:(VKStyleManager *)arg1 ;
-(void)reloadStylesheet;
-(int)targetDisplay;
-(void)setTargetDisplay:(int)arg1 ;
-(char)trafficEnabled;
-(void)setTrafficEnabled:(char)arg1 ;
-(void)_updateAnalytics:(char)arg1 ;
-(void)_updateDisplayRate;
-(char)_createDisplayLayer;
-(char)updateDisplayLinkStatus;
-(void)_clearAnalytics;
-(void)didEnterBackground;
-(char)currentZoomLevelAllowsRotation;
-(void)setStaysCenteredDuringPinch:(char)arg1 ;
-(char)localizeLabels;
-(void)setLocalizeLabels:(char)arg1 ;
-(int)labelScaleFactor;
-(void)setLabelScaleFactor:(int)arg1 ;
-(char)staysCenteredDuringPinch;
-(void)setStaysCenteredDuringRotation:(char)arg1 ;
-(char)staysCenteredDuringRotation;
-(void)setIsPitchable:(char)arg1 ;
-(char)isPitchable;
-(char)debugEnableMultisampling;
-(void)setDebugEnableMultisampling:(char)arg1 ;
-(float)debugFramesPerSecond;
-(void)setMapType:(int)arg1 ;
-(void)startFlyoverTourAnimation:(unsigned long long)arg1 animateToStart:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)clearScene;
-(char)isEffectivelyHidden;
-(void)debugHighlightLabelAtPoint:(CGPoint)arg1 ;
-(void)setShouldLoadFallbackTiles:(char)arg1 ;
-(char)shouldLoadFallbackTiles;
-(void)setShouldLoadMapMargin:(char)arg1 ;
-(char)shouldLoadMapMargin;
-(id)detailedDescription;
-(char)isGesturing;
-(void)setGesturing:(char)arg1 ;
-(char)iconsShouldAlignToPixels;
-(void)setIconsShouldAlignToPixels:(char)arg1 ;
-(char)canZoomInForTileSize:(int)arg1 ;
-(char)canZoomOutForTileSize:(int)arg1 ;
-(double)minimumZoomLevel;
-(double)minimumZoomLevelForTileSize:(int)arg1 ;
-(double)topDownMinimumZoomLevelForTileSize:(int)arg1 ;
-(double)maximumZoomLevel;
-(double)maximumZoomLevelForTileSize:(int)arg1 ;
-(double)currentZoomLevel;
-(double)currentZoomLevelForTileSize:(int)arg1 ;
-(double)zoomLevelAdjustmentForTileSize:(int)arg1 ;
-(int)shieldSize;
-(void)setShieldSize:(int)arg1 ;
-(int)navigationShieldSize;
-(void)setNavigationShieldSize:(int)arg1 ;
-(int)shieldIdiom;
-(void)setShieldIdiom:(int)arg1 ;
-(char)showsPointsOfInterest;
-(void)setShowsPointsOfInterest:(char)arg1 ;
-(char)showsBuildings;
-(void)setShowsBuildings:(char)arg1 ;
-(void)setDesiredMapMode:(int)arg1 immediate:(char)arg2 ;
-(char)dynamicMapModesEnabled;
-(void)setDynamicMapModesEnabled:(char)arg1 ;
-(void)setCanonicalSkyHeight:(double)arg1 ;
-(void)setMapDelegate:(id<VKMapViewDelegate>)arg1 ;
-(char)rendersInBackground;
-(void)setRendersInBackground:(char)arg1 ;
-(char)supportsNightMode;
-(char)canShowFlyover;
-(char)isShowingFlyover;
-(NSArray *)annotationMarkers;
-(void)_createGlobe;
-(int)annotationTrackingZoomStyle;
-(void)setAnnotationTrackingZoomStyle:(int)arg1 ;
-(void)setRouteUserOffset:(PolylineCoordinate)arg1 ;
-(NSArray *)externalTrafficIncidents;
-(void)setExternalTrafficIncidents:(NSArray *)arg1 ;
-(void)setAnnotationMarkerDeselectionCallback:(/*^block*/id)arg1 ;
-(void)removeAnnotationMarker:(id)arg1 ;
-(void)addAnnotationMarker:(id)arg1 allowAnimation:(char)arg2 ;
-(void)selectAnnotationMarker:(id)arg1 ;
-(void)removePersistentOverlay:(id)arg1 ;
-(void)addPersistentOverlay:(id)arg1 ;
-(void)removeOverlay:(id)arg1 ;
-(void)addOverlay:(id)arg1 ;
-(void)setRouteLineSplitAnnotation:(id)arg1 ;
-(void)deselectLabelMarker;
-(void)stopTrackingAnnotation;
-(void)startTrackingAnnotation:(id)arg1 trackHeading:(char)arg2 animated:(char)arg3 ;
-(void)removeExternalAnchor:(id)arg1 ;
-(void)addExternalAnchor:(id)arg1 ;
-(void)setDisableLabels:(char)arg1 ;
-(void)setDisableRoads:(char)arg1 ;
-(char)canEnter3DMode;
-(void)resetRenderQueue;
-(unsigned)mapDisplayStyle;
-(void)setMapDisplayStyle:(unsigned)arg1 animated:(char)arg2 ;
-(char)isPitched;
-(void)setMapDisplayStyle:(unsigned)arg1 ;
-(float)_styleTransitionProgress;
-(void)_setStyleTransitionProgress:(float)arg1 targetStyle:(unsigned)arg2 step:(int)arg3 ;
-(double)presentationYaw;
-(double)altitude;
-(void)setMapRegion:(id)arg1 animated:(char)arg2 ;
-(GEOMapRegion *)mapRegion;
-(GEOMapRegion *)mapRegionOfInterest;
-(id)consoleString:(char)arg1 ;
-(void)setCenterCoordinate:(VKPoint)arg1 animated:(char)arg2 ;
-(VKPoint)centerCoordinate;
-(void)setCenterCoordinate:(SCD_Struct_VK23)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(/*^block*/id)arg6 completion:(/*^block*/id)arg7 ;
-(void)openLoaderConnection;
-(void)onTimerFired:(id)arg1 ;
-(void)closeLoaderConnection;
-(void)runAnimation:(id)arg1 ;
-(void)setYaw:(double)arg1 animated:(char)arg2 ;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(char)arg4 ;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(char)arg4 completion:(/*^block*/id)arg5 ;
-(void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(/*^block*/id)arg5 ;
-(double)durationToAnimateToMapRegion:(id)arg1 ;
-(void)setEdgeInsets:(VKEdgeInsets)arg1 duration:(double)arg2 timingFunction:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)setFullyOccludedEdgeInsets:(VKEdgeInsets)arg1 ;
-(VKEdgeInsets)fullyOccludedEdgeInsets;
-(void)setLabelEdgeInsets:(VKEdgeInsets)arg1 ;
-(VKEdgeInsets)labelEdgeInsets;
-(char)canShowAnimationForSearchResultWithMapRegion:(id)arg1 ;
-(void)showSearchResultAnimationAtCoordinate:(SCD_Struct_VK23)arg1 withMapRegion:(id)arg2 ;
-(char)canShowFlyoverAnimation;
-(void)prepareFlyoverAnimation:(id)arg1 inBackground:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)_notifyDelegateFlyoverTourLabelChanged:(id)arg1 ;
-(void)_runFlyoverTourStateChange:(int)arg1 completion:(/*^block*/id)arg2 ;
-(void)stopFlyoverAnimation;
-(void)pauseFlyoverTourAnimation;
-(void)resumeFlyoverTourAnimation;
-(void)enableFlyoverStatistics;
-(void)disableFlyoverStatistics;
-(id)flyoverStatistics;
-(void)updateCameraContext:(id)arg1 ;
-(void)stopTracking;
-(void)pauseTracking;
-(void)transitionToTracking:(char)arg1 mapMode:(int)arg2 pounceCompletionHandler:(/*^block*/id)arg3 ;
-(void)setShouldLimitTrackingCameraHeight:(char)arg1 ;
-(void)setTrackingCameraPanStyle:(int)arg1 ;
-(int)trackingCameraPanStyle;
-(void)setRoutePreloadSession:(id<GEORoutePreloadSession>)arg1 ;
-(id<GEORoutePreloadSession>)routePreloadSession;
-(id)annotationMarkerForSelectionAtPoint:(CGPoint)arg1 avoidCurrent:(char)arg2 ;
-(id)labelMarkerForSelectionAtPoint:(CGPoint)arg1 selectableLabelsOnly:(char)arg2 ;
-(void)selectLabelMarker:(id)arg1 ;
-(void)enter3DMode;
-(void)exit3DMode;
-(char)isFullyPitched;
-(void)panWithOffset:(CGPoint)arg1 relativeToScreenPoint:(CGPoint)arg2 animated:(char)arg3 duration:(double)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)deselectAnnotationMarker:(id)arg1 ;
-(char)shouldHideOffscreenSelectedAnnotation;
-(VKLabelMarker *)selectedLabelMarker;
-(NSArray *)labelMarkers;
-(double)trackingZoomScale;
-(void)setTrackingZoomScale:(double)arg1 ;
-(char)isAnimatingToTrackAnnotation;
-(void)setTracePlaybackSpeedMultiplier:(double)arg1 ;
-(void)addRasterOverlay:(id)arg1 ;
-(void)removeRasterOverlay:(id)arg1 ;
-(void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2 ;
-(void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2 ;
-(void)setCurrentLocationText:(id)arg1 ;
-(id)viewportInfo;
-(char)restoreViewportFromInfo:(id)arg1 ;
-(VKPolylineOverlayPainter *)focusedLabelsPolylinePainter;
-(void)setFocusedLabelsPolylinePainter:(VKPolylineOverlayPainter *)arg1 ;
-(void)zoomToLevel:(double)arg1 withFocusPoint:(CGPoint)arg2 ;
-(void)zoom:(double)arg1 withFocusPoint:(CGPoint)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)startPinchingWithFocusPoint:(CGPoint)arg1 ;
-(void)updatePinchWithFocusPoint:(CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3 ;
-(void)stopPinchingWithFocusPoint:(CGPoint)arg1 ;
-(void)startPanningAtPoint:(CGPoint)arg1 panAtStartPoint:(char)arg2 ;
-(void)updatePanWithTranslation:(CGPoint)arg1 ;
-(void)stopPanningAtPoint:(CGPoint)arg1 ;
-(void)didStartPanningDeceleration;
-(void)startRotatingWithFocusPoint:(CGPoint)arg1 ;
-(void)updateRotationWithFocusPoint:(CGPoint)arg1 newValue:(double)arg2 ;
-(void)stopRotatingWithFocusPoint:(CGPoint)arg1 ;
-(void)startPitchingWithFocusPoint:(CGPoint)arg1 ;
-(void)updatePitchWithFocusPoint:(CGPoint)arg1 translation:(double)arg2 ;
-(void)stopPitchingWithFocusPoint:(CGPoint)arg1 ;
-(char)isPointValidForGesturing:(CGPoint)arg1 ;
-(void)stopSnappingAnimations;
-(void)setDisablePolygons:(char)arg1 ;
-(void)setDisableBuildingFootprints:(char)arg1 ;
-(void)setDisableRasters:(char)arg1 ;
-(void)setDisableRealisticRoads:(char)arg1 ;
-(void)setDisableRealisticLand:(char)arg1 ;
-(void)setDisableGrid:(char)arg1 ;
-(char)isFullyDrawn;
-(void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4 ;
-(void)puckAnimator:(id)arg1 updatedPosition:(SCD_Struct_VK24*)arg2 ;
-(void)puckAnimatorDidStop:(id)arg1 ;
-(void)puckAnimator:(id)arg1 updatedTargetPosition:(VKPoint)arg2 ;
-(char)debugDynamicMapModesEnabled;
-(void)setDebugDynamicMapModesEnabled:(char)arg1 ;
-(void)setUserZoomFocusStyleGroundspanMeters:(double)arg1 ;
-(double)userZoomFocusStyleGroundspanMeters;
-(void)setUserZoomFocusStyleMinGroundspanMeters:(double)arg1 ;
-(double)userZoomFocusStyleMinGroundspanMeters;
-(void)setUserZoomFocusStyleMaxGroundspanMeters:(double)arg1 ;
-(double)userZoomFocusStyleMaxGroundspanMeters;
-(void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3 ;
-(id<VKMapViewDelegate>)mapDelegate;
-(void)mapDidChangeVisibleRegion:(id)arg1 ;
-(void)mapDidBecomePartiallyDrawn:(id)arg1 ;
-(void)mapDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(char)arg2 ;
-(void)mapDidStartLoadingTiles:(id)arg1 ;
-(void)mapDidFinishLoadingTiles:(id)arg1 ;
-(void)mapDidFailLoadingTiles:(id)arg1 withError:(id)arg2 ;
-(void)mapDidFinishChangingMapDisplayStyle:(unsigned)arg1 ;
-(void)map:(id)arg1 willChangeRegionAnimated:(char)arg2 ;
-(void)map:(id)arg1 didChangeRegionAnimated:(char)arg2 ;
-(void)mapDidFinishInitialTrackingAnimation:(id)arg1 ;
-(id)map:(id)arg1 presentationForAnnotation:(id)arg2 ;
-(id)map:(id)arg1 painterForOverlay:(id)arg2 ;
-(void)map:(id)arg1 didBecomePitched:(char)arg2 ;
-(void)map:(id)arg1 canEnter3DModeDidChange:(char)arg2 ;
-(void)map:(id)arg1 canZoomInDidChange:(char)arg2 ;
-(void)map:(id)arg1 canZoomOutDidChange:(char)arg2 ;
-(void)map:(id)arg1 canShowFlyoverDidChange:(char)arg2 ;
-(void)map:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2 ;
-(void)map:(id)arg1 willTransitionFrom:(int)arg2 to:(int)arg3 duration:(double)arg4 ;
-(void)map:(id)arg1 didUpdateVerticalYawTo:(double)arg2 ;
-(void)map:(id)arg1 didUpdateContainsOverlay:(char)arg2 ;
-(void)mapControllerNeedsDisplay:(id)arg1 ;
-(void)mapController:(id)arg1 requestsDisplayRate:(int)arg2 ;
-(void)mapControllerNeedsInitialization:(id)arg1 ;
-(void)didDrawWithTimestamp:(double)arg1 ;
-(RenderQueue*)renderQueue;
-(char)isLabelMarkerSelectionEnabled;
-(id)secondaryCanvas;
-(void)forceFrame;
-(id)stylesheetName;
-(char)stylesheetIsDevResource;
-(int)displayRate;
-(void)setDisplayRate:(int)arg1 ;
-(void)didFinishSnapshotting;
-(void)flushTileLoads;
-(char)debugDrawContinuously;
-(void)setDebugDrawContinuously:(char)arg1 ;
-(char)debugLayoutContinuously;
-(void)setDebugLayoutContinuously:(char)arg1 ;
-(void)debugRunPerformanceTestWithOutputHeader:(id)arg1 ;
-(void)debugFlyoverTour:(unsigned)arg1 trip:(unsigned)arg2 ;
-(CADisplay *)hostDisplay;
-(void)setHostDisplay:(CADisplay *)arg1 ;
-(char)enableDebugLabelHighlighting;
-(char)supportsMapType:(int)arg1 ;
-(CGRect)mapRegionBounds;
-(void)setMapRegion:(GEOMapRegion *)arg1 ;
-(void)setCenterCoordinate:(VKPoint)arg1 ;
-(id)initWithGlobe:(char)arg1 shouldRasterize:(char)arg2 inBackground:(char)arg3 ;
-(SCD_Struct_VK23)convertPoint:(CGPoint)arg1 toCoordinateFromLayer:(id)arg2 ;
-(SCD_Struct_VK23)convertPoint:(CGPoint)arg1 toMapPointFromLayer:(id)arg2 ;
-(CGPoint)convertMapPoint:(SCD_Struct_VK23)arg1 toPointToLayer:(id)arg2 ;
-(CGPoint)convertCoordinate:(SCD_Struct_VK23)arg1 toPointToLayer:(id)arg2 ;
-(CGPoint)convertCoordinate:(SCD_Struct_VK23)arg1 toCameraModelPointToLayer:(id)arg2 ;
-(void)startFlyoverAnimation:(id)arg1 animateToStart:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)preloadNavigationSceneResources;
-(void)startPanningAtPoint:(CGPoint)arg1 ;
-(void)setDisableRoadClass:(char)arg1 forRoadClass:(int)arg2 ;
-(char)roadClassDisabled:(int)arg1 ;
-(char)roadsDisabled;
-(char)labelsDisabled;
-(char)polygonsDisabled;
-(char)buildingFootprintsDisabled;
-(char)rastersDisabled;
-(char)realisticRoadsDisabled;
-(char)realisticLandDisabled;
-(char)gridDisabled;
-(double)verticalYaw;
-(GEOResourceManifestConfiguration *)additionalManifestConfiguration;
@end

