/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:20:15 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/HomeSharing.framework/HomeSharing
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue, OS_dispatch_source;
@class HSConnectionConfiguration, HSConnectionStream, NSObject, NSURLSession, HSFairPlayInfo, NSString, NSURL;

@interface HSConnection : NSObject {

	HSConnectionConfiguration* _configuration;
	int _connectionState;
	HSConnectionStream* _connectionStream;
	int _connectionType;
	NSObject*<OS_dispatch_queue> _serialQueue;
	NSObject*<OS_dispatch_source> _activityTimerSource;
	NSURLSession* _connectionSession;
	char authenticationRequired;
	char tokenCheckRequired;
	char _tokenCheckRequred;
	unsigned basePlaylistContainerID;
	unsigned databaseID;
	unsigned databaseRevision;
	HSFairPlayInfo* fairPlayInfo;
	NSString* homeSharingGroupID;
	NSString* password;
	unsigned sessionID;
	NSString* username;
	unsigned _interfaceID;
	unsigned _controlKey;
	unsigned _controlPort;
	unsigned _promptID;

}

@property (readonly) NSURL * baseURL; 
@property (readonly) int connectionType;                                              //@synthesize connectionType=_connectionType - In the implementation block
@property (assign) int connectionState;                                               //@synthesize connectionState=_connectionState - In the implementation block
@property (getter=isAuthenticationRequired) char authenticationRequired; 
@property (getter=isTokenCheckRequired,readonly) char tokenCheckRequred;              //@synthesize tokenCheckRequred=_tokenCheckRequred - In the implementation block
@property (retain) HSFairPlayInfo * fairPlayInfo; 
@property (copy) NSString * homeSharingGroupID; 
@property (copy) NSString * username; 
@property (copy) NSString * password; 
@property (assign) unsigned databaseID; 
@property (assign) unsigned databaseRevision; 
@property (assign) unsigned basePlaylistContainerID; 
@property (assign) unsigned sessionID; 
@property (assign) unsigned interfaceID;                                              //@synthesize interfaceID=_interfaceID - In the implementation block
@property (assign) unsigned controlKey;                                               //@synthesize controlKey=_controlKey - In the implementation block
@property (assign) unsigned controlPort;                                              //@synthesize controlPort=_controlPort - In the implementation block
@property (assign,nonatomic) unsigned promptID;                                       //@synthesize promptID=_promptID - In the implementation block
@property (assign) char tokenCheckRequired; 
+(void)_scheduleDialogResetIfNeeded;
-(void)connectWithCompletionHandler:(/*^block*/id)arg1 ;
-(NSString *)homeSharingGroupID;
-(void)setHomeSharingGroupID:(NSString *)arg1 ;
-(int)connectionState;
-(unsigned)databaseID;
-(void)sendRequest:(id)arg1 withResponseHandler:(/*^block*/id)arg2 ;
-(id)signedRequestFromURLRequest:(id)arg1 ;
-(void)dealloc;
-(char)isAuthenticationRequired;
-(void)setAuthenticationRequired:(char)arg1 ;
-(NSURL *)baseURL;
-(void)disconnect;
-(NSString *)password;
-(void)setPassword:(NSString *)arg1 ;
-(void)setUsername:(NSString *)arg1 ;
-(id)initWithBaseURL:(id)arg1 ;
-(int)connectionType;
-(unsigned)sessionID;
-(void)setSessionID:(unsigned)arg1 ;
-(void)setPromptID:(unsigned)arg1 ;
-(unsigned)promptID;
-(id)initWithConfiguration:(id)arg1 connectionType:(int)arg2 ;
-(unsigned)interfaceID;
-(void)setDatabaseRevision:(unsigned)arg1 ;
-(unsigned)databaseRevision;
-(id)initWithBaseURL:(id)arg1 connectionType:(int)arg2 ;
-(void)setFairPlayInfo:(HSFairPlayInfo *)arg1 ;
-(void)setConnectionState:(int)arg1 ;
-(HSFairPlayInfo *)fairPlayInfo;
-(unsigned)_sapVersionForConnectionType;
-(void)_continueFPSetupNegotiationWithData:(id)arg1 internalConnectionCompletionHandler:(/*^block*/id)arg2 ;
-(void)_loadDatabaseWithInternalConnectionCompletionHandler:(/*^block*/id)arg1 ;
-(void)setTokenCheckRequired:(char)arg1 ;
-(void)_sendRequest:(id)arg1 withInternalResponseHandler:(/*^block*/id)arg2 ;
-(unsigned)controlPort;
-(unsigned)controlKey;
-(void)setBasePlaylistContainerID:(unsigned)arg1 ;
-(unsigned)basePlaylistContainerID;
-(void)checkForDatabaseUpdatesWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_setupControlConnectionWithInternalConnectionCompletionHandler:(/*^block*/id)arg1 ;
-(void)_onSerialQueue_sendRequest:(id)arg1 withInternalResponseHandler:(/*^block*/id)arg2 ;
-(id)_onSerialQueue_connectionSession;
-(void)setInterfaceID:(unsigned)arg1 ;
-(void)setControlPort:(unsigned)arg1 ;
-(void)setControlKey:(unsigned)arg1 ;
-(id)newControlConnection;
-(char)tokenCheckRequired;
-(char)isTokenCheckRequired;
-(NSString *)username;
-(void)setDatabaseID:(unsigned)arg1 ;
@end

