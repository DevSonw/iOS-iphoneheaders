/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:20:42 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PassKitCore/VRUIDelegate.h>

@protocol OS_dispatch_queue, PKAuthenticatorDelegate;
@class VRCredentialReference, NSObject, NSNumber;

@interface PKAuthenticator : NSObject <VRUIDelegate> {

	VRCredentialReference* _reference;
	NSObject*<OS_dispatch_queue> _referenceMutationQueue;
	char _passcodeRemoteViewControllerPresented;
	double _evaluationStartTime;
	double _lastFingerOffTimestamp;
	double _lastMatchTimestamp;
	char _fingerPresent;
	id<PKAuthenticatorDelegate> _delegate;
	NSNumber* _applicationProcessID;
	double _authenticationTimeout;

}

@property (assign,nonatomic) id<PKAuthenticatorDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) char fingerPresent;                                //@synthesize fingerPresent=_fingerPresent - In the implementation block
@property (assign,nonatomic) double authenticationTimeout;                      //@synthesize authenticationTimeout=_authenticationTimeout - In the implementation block
@property (nonatomic,retain) NSNumber * applicationProcessID;                   //@synthesize applicationProcessID=_applicationProcessID - In the implementation block
+(unsigned)currentStateForPreflightPolicy:(int)arg1 ;
+(void)_preflightPolicy:(int)arg1 completion:(/*^block*/id)arg2 ;
+(void)preheatAuthenticator;
-(void)dealloc;
-(void)setDelegate:(id<PKAuthenticatorDelegate>)arg1 ;
-(id)init;
-(id<PKAuthenticatorDelegate>)delegate;
-(void)event:(id)arg1 params:(id)arg2 reply:(/*^block*/id)arg3 ;
-(char)_delegateSupportsPasscodePresentation;
-(id)_credentialReference;
-(char)_credentialReferenceMatches:(id)arg1 ;
-(id)_swapCredentialReference:(id)arg1 ;
-(double)authenticationTimeout;
-(NSNumber *)applicationProcessID;
-(char)_delegateSupportsPasscodeDismissal;
-(id)_swapCredentialReferenceWithReference:(id)arg1 ifMatchesReference:(id)arg2 ;
-(void)evaluatePolicy:(int)arg1 completion:(/*^block*/id)arg2 ;
-(void)fallbackToSystemPasscodeUI;
-(void)cancelEvaluation;
-(char)fingerPresent;
-(void)setFingerPresent:(char)arg1 ;
-(void)setAuthenticationTimeout:(double)arg1 ;
-(void)setApplicationProcessID:(NSNumber *)arg1 ;
-(id)initWithDelegate:(id)arg1 ;
@end

