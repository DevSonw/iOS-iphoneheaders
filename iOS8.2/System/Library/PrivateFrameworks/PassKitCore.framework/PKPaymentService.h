/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:20:42 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PassKitCore/PKPaymentServiceExportedInterface.h>

@protocol PKPaymentServiceDelegate;
@class NSXPCConnection, NSLock, PKPaymentServiceExportedProxy, NSString, PKPaymentWebServiceContext;

@interface PKPaymentService : NSObject <PKPaymentServiceExportedInterface> {

	NSXPCConnection* _connection;
	NSLock* _connectionLock;
	PKPaymentServiceExportedProxy* _exportedProxy;
	unsigned _paymentInterfacePreventionCounter;
	id<PKPaymentServiceDelegate> _delegate;

}

@property (nonatomic,readonly) char paymentDeviceIsInField; 
@property (nonatomic,readonly) char paymentDeviceIsAvailable; 
@property (nonatomic,readonly) char paymentDeviceIsInRestrictedMode; 
@property (nonatomic,readonly) NSString * secureElementIdentifier; 
@property (nonatomic,retain) NSString * defaultPaymentPassUniqueIdentifier; 
@property (nonatomic,retain) PKPaymentWebServiceContext * sharedPaymentWebServiceContext; 
@property (assign,nonatomic) id<PKPaymentServiceDelegate> delegate;                                    //@synthesize delegate=_delegate - In the implementation block
+(char)paymentServiceIsAvailable;
-(void)dealloc;
-(void)setDelegate:(id<PKPaymentServiceDelegate>)arg1 ;
-(id)init;
-(id<PKPaymentServiceDelegate>)delegate;
-(id)_connection;
-(NSString *)secureElementIdentifier;
-(void)_registerForApplicationLifeCycleNotifications;
-(void)_unregisterForApplicationLifeCycleNotifications;
-(/*^block*/id)_errorHandlerWithCompletion:(/*^block*/id)arg1 ;
-(void)_sendResumed;
-(void)_sendSuspended;
-(void)_establishPaymentServiceConnection;
-(void)_tearDownPaymentServiceConnection;
-(void)_unregisterForPaymentServiceNotifications;
-(id)_connectionWithTeardownExisting:(char)arg1 createNewIfNecessary:(char)arg2 ;
-(void)paymentDeviceDidEnterField;
-(void)paymentDeviceDidLeaveField;
-(void)paymentDeviceDidBecomeAvailable;
-(void)paymentDeviceDidBecomeUnavailable;
-(void)paymentDeviceDidEnterRestrictedMode;
-(void)paymentDeviceDidLeaveRestrictedMode;
-(void)didUpdateDefaultPaymentPassWithUniqueIdentifier:(id)arg1 ;
-(void)paymentPassWithUniqueIdentifierDidActivate:(id)arg1 ;
-(void)paymentPassWithUniqueIdentifierDidAuthorize:(id)arg1 ;
-(void)paymentPassWithUniqueIdentifierDidDeauthorize:(id)arg1 ;
-(void)paymentPassWithUniqueIdentifierDidBeginTransaction:(id)arg1 ;
-(void)paymentPassWithUniqueIdentifierDidCompleteTransaction:(id)arg1 ;
-(void)paymentPassWithUniqueIdentifierDidFailTransaction:(id)arg1 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didReceiveMessage:(id)arg2 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didReceiveTransaction:(id)arg2 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didEnableMessageService:(char)arg2 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didEnableTransactionService:(char)arg2 ;
-(void)_registerForPaymentServiceNotifications;
-(void)_activationStateForPaymentPassWithUniqueIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forDPANIdentifier:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_deleteMessageWithIdentifier:(id)arg1 fromPassWithUniqueIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setNewAuthRandomIfNecessaryWithRetryCount:(unsigned)arg1 completion:(/*^block*/id)arg2 ;
-(void)_paymentDeviceIsInFieldWithCompletion:(/*^block*/id)arg1 ;
-(void)_paymentDeviceIsAvailableWithCompletion:(/*^block*/id)arg1 ;
-(void)_paymentDeviceIsInRestrictedModeWithCompletion:(/*^block*/id)arg1 ;
-(void)_secureElementIdentifierWithCompletion:(/*^block*/id)arg1 ;
-(void)_defaultPaymentPassUniqueIdentifier:(/*^block*/id)arg1 ;
-(void)_sharedPaymentWebServiceContextWithCompletion:(/*^block*/id)arg1 ;
-(int)activationStateForPaymentPassWithUniqueIdentifier:(id)arg1 ;
-(void)activatePaymentPassWithUniqueIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)authorizePaymentPassWithUniqueIdentifier:(id)arg1 authenticationCredential:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)deauthorizePaymentPassWithUniqueIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)authorizeInAppPaymentRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forDPANIdentifier:(id)arg3 ;
-(void)deleteMessageWithIdentifier:(id)arg1 fromPassWithUniqueIdentifier:(id)arg2 ;
-(void)insertOrUpdatePaymentTransaction:(id)arg1 forPassUniqueIdentifier:(id)arg2 paymentApplication:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)messagesForPaymentPassWithUniqueIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)presentPaymentInterfaceWithCompletion:(/*^block*/id)arg1 ;
-(void)beginPreventingPaymentInterfacePresentation;
-(void)endPreventingPaymentInterfacePresentation;
-(void)markAllPaymentApplicationsForDelete;
-(void)simulatePaymentPush;
-(void)downloadAllPaymentPasses;
-(void)setNewAuthRandom;
-(char)paymentDeviceIsInField;
-(char)paymentDeviceIsAvailable;
-(char)paymentDeviceIsInRestrictedMode;
-(void)setDefaultPaymentPassUniqueIdentifier:(NSString *)arg1 ;
-(NSString *)defaultPaymentPassUniqueIdentifier;
-(void)setSharedPaymentWebServiceContext:(PKPaymentWebServiceContext *)arg1 ;
-(PKPaymentWebServiceContext *)sharedPaymentWebServiceContext;
-(id)initWithDelegate:(id)arg1 ;
-(void)consistencyCheck;
@end

