/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:25:01 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <assistantd/assistantd-Structs.h>
#import <assistantd/AVVoiceControllerRecordDelegate.h>
#import <assistantd/ADPassthroughEndpointerDelegate.h>
#import <assistantd/ADAcousticFingerprinterDelegate.h>
#import <assistantd/ADAudioAnalyzerDelegate.h>
#import <assistantd/ADSpeechCapturing.h>

@protocol ADSpeechCapturingDelegate, OS_dispatch_queue, OS_dispatch_source, ADSpeechCapturingPowerDelegate;
@class NSObject, AVVoiceController, ADAudioAnalyzer, ADAudioActivationInfo, ADPassthroughEndpointer, ADAcousticFingerprinter, ADAudioFileWriter, NSString;

@interface ADSpeechRecorder : NSObject <AVVoiceControllerRecordDelegate, ADPassthroughEndpointerDelegate, ADAcousticFingerprinterDelegate, ADAudioAnalyzerDelegate, ADSpeechCapturing> {

	id<ADSpeechCapturingDelegate> _delegate;
	NSObject*<OS_dispatch_queue> _queue;
	AVVoiceController* _voiceController;
	NSObject*<OS_dispatch_source> _powerUpdateTimer;
	int _packetCount;
	int _mode;
	char _needsAlertsSet;
	NSObject*<OS_dispatch_source> _extendedEndpointTimer;
	ADAudioAnalyzer* _audioAnalyzer;
	ADAudioActivationInfo* _activationInfo;
	ADAudioActivationInfo* _pendingActivationInfo;
	ADPassthroughEndpointer* _passthroughEndpointer;
	AudioStreamBasicDescription _endpointerASBD;
	AudioStreamBasicDescription _lpcmASBD;
	char _fingerprintingEnabled;
	ADAcousticFingerprinter* _fingerprinter;
	int _audioFileType;
	ADAudioFileWriter* _audioFileWriter;
	ADAudioFileWriter* _audioLogggingFileWriter;
	char _willStartRecording;
	char _didDetectStartpoint;
	char _didDetectEndpoint;
	char _didEnterTwoShotMode;
	char _didFakeTwoShotWithAlert;
	char _serverDidRecognizeSpeech;
	char _didTimeout;
	char _wasCanceled;
	char _suppressRecordingStoppedAlert;
	char _useAutomaticEndpointing;
	char _isRecordingUsingBTRoute;
	double _twoShotStartTime;
	char _forceSuccessAlertOnStop;
	char _isDriving;
	char _isActivelyRecording;
	int _borealisBufferIsAvailableToken;
	id<ADSpeechCapturingPowerDelegate> _powerDelegate;

}

@property (assign,nonatomic,__weak) id<ADSpeechCapturingPowerDelegate> powerDelegate;              //@synthesize powerDelegate=_powerDelegate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)acousticFingerprinter:(id)arg1 hasFingerprint:(id)arg2 duration:(double)arg3 ;
-(void)cancelSpeechCaptureSuppressingAlert:(char)arg1 ;
-(void)setIsDriving:(char)arg1 ;
-(void)audioAnalyzer:(id)arg1 didDetectHardEndpointAtTime:(double)arg2 ;
-(void)setPowerDelegate:(id<ADSpeechCapturingPowerDelegate>)arg1 ;
-(void)setSpeechEvent:(int)arg1 useBorealisBuffer:(char)arg2 deviceIdentifier:(id)arg3 ;
-(void)eagerlyInitializeAudioRecording;
-(void)prepareSpeechCapture;
-(void)prepareForMode:(int)arg1 ;
-(id)currentRecordingInfo;
-(void)setFingerprintingEnabled:(char)arg1 ;
-(char)startSpeechCapture;
-(void)stopSpeechCaptureForEvent:(int)arg1 suppressAlert:(char)arg2 ;
-(void)setSpeechWasRecognizedForElapsedTime:(double)arg1 ;
-(void)forceSuccessAudioAlertOnStop;
-(id)_voiceController;
-(void)_updateRecordBufferDuration;
-(void)_resetVoiceController;
-(void)_cancelExtendedEndpointTimer;
-(void)_setCurrentDeviceContext;
-(void)_setEndpointStyle:(int)arg1 ;
-(char)_prepareVoiceController;
-(void)_setAlertsIfNeeded;
-(void)_stopRecordingForEndpoint;
-(void)_configurePassthroughEndpointerOnVoiceController:(id)arg1 ;
-(void)_playAudioAlert:(int)arg1 ;
-(void)_scheduleExtendedEndpointTimer;
-(void)_setActivationInfo:(id)arg1 ;
-(void)_voiceControllerDidStartRecording:(id)arg1 successfully:(char)arg2 ;
-(void)_voiceControllerDidStopRecording:(id)arg1 forReason:(int)arg2 errorCodeOverride:(int)arg3 ;
-(id)_currentRecordingInfo;
-(void)_setPendingContextIfNecessary;
-(void)_hardEndpointWasDetectedAtTime:(double)arg1 ;
-(char)_shouldUseTwoShotModeForEndpointTime:(double)arg1 ;
-(char)_shouldFakeTwoShotWithAlert;
-(void)_fakeTwoShotUsingAlert;
-(id)_fingerprinter;
-(void)passthroughEndpointer:(id)arg1 wasConfiguredWithASBD:(AudioStreamBasicDescription*)arg2 frameRate:(unsigned long)arg3 ;
-(void)passthroughEndpointer:(id)arg1 didReceivePCMData:(id)arg2 ;
-(void)updatePower;
-(id<ADSpeechCapturingPowerDelegate>)powerDelegate;
-(void)_stopRecording;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)initWithQueue:(id)arg1 ;
-(float)averagePower;
-(void)setUseAutomaticEndpointing:(char)arg1 ;
-(void)preheat;
-(void)_setMode:(int)arg1 ;
-(float)peakPower;
-(void)setAudioFileType:(int)arg1 ;
-(void)stopUpdatingPower;
-(void)voiceControllerDidDetectStartpoint:(id)arg1 ;
-(void)startUpdatingPower;
-(void)voiceControllerRecordBufferAvailable:(id)arg1 buffer:(id)arg2 ;
-(void)voiceControllerDidStopRecording:(id)arg1 forReason:(int)arg2 ;
-(void)voiceControllerDidStartRecording:(id)arg1 successfully:(char)arg2 ;
-(void)voiceControllerDidDetectEndpoint:(id)arg1 ofType:(int)arg2 atTime:(double)arg3 ;
-(void)voiceControllerRecordHardwareConfigurationDidChange:(id)arg1 toConfiguration:(int)arg2 ;
-(void)voiceControllerBeginRecordInterruption:(id)arg1 ;
-(void)voiceControllerEndRecordInterruption:(id)arg1 ;
-(void)voiceControllerLPCMRecordBufferAvailable:(id)arg1 buffer:(id)arg2 ;
-(void)releaseAudioSession;
@end

