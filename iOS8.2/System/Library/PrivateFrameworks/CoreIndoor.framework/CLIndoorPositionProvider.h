/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:19:50 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/PrivateFrameworks/CoreIndoor.framework/CoreIndoor
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <CoreIndoor/CoreIndoor-Structs.h>
@class NSXPCConnection, NSObject, ServiceState;

@interface CLIndoorPositionProvider : NSObject {

	NSXPCConnection* _indoorServiceConnection;
	NSObject*<OS_dispatch_queue> _frameworkQueue;
	optional<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > > > _lastCrashTime;
	ServiceState* _state;

}

@property (nonatomic,retain) ServiceState * state;              //@synthesize state=_state - In the implementation block
+(int)locationType:(id)arg1 ;
-(id)initWithEndpoint:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(ServiceState *)state;
-(void)invalidate;
-(void)setState:(ServiceState *)arg1 ;
-(void)withinQueueReinitializeRemoteState;
-(void)withinQueueInitializeConnection;
-(void)withinQueueInvalidate;
-(int)withinQueueShouldReinitializeRemote:(time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > >)arg1 ;
-(void)withinQueueScheduleDeferredReinitializeRemote:(time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000> > >)arg1 ;
-(void)withinQueueInterruptionHandler;
-(void)withinQueueReconnectInvalidatedConnectionDebounce;
-(void)withinQueueReconnectInvalidatedConnection;
-(void)setApiKey:(id)arg1 ;
-(unsigned)connectionOptions:(id)arg1 ;
-(void)setApiKey:(id)arg1 onServer:(id)arg2 ;
-(void)playbackDatarun:(id)arg1 ;
-(void)gpsEstimateAvailable:(id)arg1 ;
-(void)gpsSignalQualityAvailable:(id)arg1 ;
-(void)withinQueueSetDelegate:(id)arg1 ;
-(void)setVenues:(id)arg1 ;
-(/*^block*/id)defaultErrHandler;
-(id)initWithApiKey:(id)arg1 ;
-(id)initWithApiKey:(id)arg1 onServer:(id)arg2 ;
-(id)initWithConnection:(id)arg1 ;
-(void)startUpdatingLocation;
-(void)stopUpdatingLocation;
-(id)newConnection;
@end

