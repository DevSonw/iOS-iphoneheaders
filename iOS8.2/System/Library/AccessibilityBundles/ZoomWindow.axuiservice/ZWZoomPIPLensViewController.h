/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:22:38 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/AccessibilityBundles/ZoomWindow.axuiservice/ZoomWindow
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <ZoomWindow/ZoomWindow-Structs.h>
#import <ZoomWindow/ZWZoomLensViewController.h>

@class ZWLensChromeView, ZWLensChromeGrabberView, NSLayoutConstraint;

@interface ZWZoomPIPLensViewController : ZWZoomLensViewController {

	char _inLensResizingMode;
	ZWLensChromeView* _lensChromeView;
	int _activeResizeHandle;
	ZWLensChromeGrabberView* _topChromeGrabberView;
	ZWLensChromeGrabberView* _rightChromeGrabberView;
	ZWLensChromeGrabberView* _bottomChromeGrabberView;
	ZWLensChromeGrabberView* _leftChromeGrabberView;
	NSLayoutConstraint* _topChromeGrabberDragConstraint;
	NSLayoutConstraint* _rightChromeGrabberDragConstraint;
	NSLayoutConstraint* _bottomChromeGrabberDragConstraint;
	NSLayoutConstraint* _leftChromeGrabberDragConstraint;
	ZWLensChromeGrabberView* _activeGrabber;

}

@property (assign,nonatomic,__weak) id<ZWZoomPIPLensViewControllerDelegate> delegate; 
@property (assign,getter=isInLensResizingMode,nonatomic) char inLensResizingMode;                  //@synthesize inLensResizingMode=_inLensResizingMode - In the implementation block
@property (nonatomic,retain) ZWLensChromeView * lensChromeView;                                    //@synthesize lensChromeView=_lensChromeView - In the implementation block
@property (assign,nonatomic) int activeResizeHandle;                                               //@synthesize activeResizeHandle=_activeResizeHandle - In the implementation block
@property (nonatomic,retain) ZWLensChromeGrabberView * topChromeGrabberView;                       //@synthesize topChromeGrabberView=_topChromeGrabberView - In the implementation block
@property (nonatomic,retain) ZWLensChromeGrabberView * rightChromeGrabberView;                     //@synthesize rightChromeGrabberView=_rightChromeGrabberView - In the implementation block
@property (nonatomic,retain) ZWLensChromeGrabberView * bottomChromeGrabberView;                    //@synthesize bottomChromeGrabberView=_bottomChromeGrabberView - In the implementation block
@property (nonatomic,retain) ZWLensChromeGrabberView * leftChromeGrabberView;                      //@synthesize leftChromeGrabberView=_leftChromeGrabberView - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * topChromeGrabberDragConstraint;                  //@synthesize topChromeGrabberDragConstraint=_topChromeGrabberDragConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * rightChromeGrabberDragConstraint;                //@synthesize rightChromeGrabberDragConstraint=_rightChromeGrabberDragConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * bottomChromeGrabberDragConstraint;               //@synthesize bottomChromeGrabberDragConstraint=_bottomChromeGrabberDragConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * leftChromeGrabberDragConstraint;                 //@synthesize leftChromeGrabberDragConstraint=_leftChromeGrabberDragConstraint - In the implementation block
@property (nonatomic,retain) ZWLensChromeGrabberView * activeGrabber;                              //@synthesize activeGrabber=_activeGrabber - In the implementation block
-(id)grabberViews;
-(ZWLensChromeGrabberView *)activeGrabber;
-(ZWLensChromeView *)lensChromeView;
-(void)setLensChromeView:(ZWLensChromeView *)arg1 ;
-(void)setTopChromeGrabberView:(ZWLensChromeGrabberView *)arg1 ;
-(void)setRightChromeGrabberView:(ZWLensChromeGrabberView *)arg1 ;
-(void)setBottomChromeGrabberView:(ZWLensChromeGrabberView *)arg1 ;
-(void)setLeftChromeGrabberView:(ZWLensChromeGrabberView *)arg1 ;
-(void)updateVisibleGrabbersAnimated:(char)arg1 ;
-(void)_applyInitialLayoutConstraints;
-(ZWLensChromeGrabberView *)topChromeGrabberView;
-(ZWLensChromeGrabberView *)rightChromeGrabberView;
-(ZWLensChromeGrabberView *)bottomChromeGrabberView;
-(char)_shouldRoundLensCorners;
-(char)_shouldDisableLensEffectsForStandbyMode;
-(void)_updateLensChromeVisibility:(char)arg1 animated:(char)arg2 completion:(/*^block*/id)arg3 ;
-(CGPoint)maximumPanOffsetWithZoomFactor:(float)arg1 ;
-(CGPoint)_lensDragMultiplier;
-(ZWLensChromeGrabberView *)leftChromeGrabberView;
-(void)setTopChromeGrabberDragConstraint:(NSLayoutConstraint *)arg1 ;
-(NSLayoutConstraint *)topChromeGrabberDragConstraint;
-(void)setRightChromeGrabberDragConstraint:(NSLayoutConstraint *)arg1 ;
-(NSLayoutConstraint *)rightChromeGrabberDragConstraint;
-(void)setBottomChromeGrabberDragConstraint:(NSLayoutConstraint *)arg1 ;
-(NSLayoutConstraint *)bottomChromeGrabberDragConstraint;
-(void)setLeftChromeGrabberDragConstraint:(NSLayoutConstraint *)arg1 ;
-(NSLayoutConstraint *)leftChromeGrabberDragConstraint;
-(void)updateLensChromeAnimated:(char)arg1 ;
-(char)isInLensResizingMode;
-(int)lensEdgeForTouchAtLocation:(CGPoint)arg1 ;
-(void)setActiveResizeHandle:(int)arg1 ;
-(char)_sufficientSpaceExistsForGrabber:(id)arg1 ;
-(void)_updateActiveGrabberDragConstraintWithOffset:(CGPoint)arg1 ;
-(id)_defaultGrabberForAxis:(int)arg1 ;
-(id)_secondaryGrabberForAxis:(int)arg1 ;
-(void)_updateActiveResizeHandleForTouchOnChromeAtLocation:(CGPoint)arg1 ;
-(void)setActiveGrabber:(ZWLensChromeGrabberView *)arg1 ;
-(id)_activeGrabberForTouchAtLocation:(CGPoint)arg1 ;
-(void)_collapseNonactiveGrabbers;
-(void)_trackActiveGrabberWithTouchAtLocation:(CGPoint)arg1 ;
-(id)zoomRootview:(id)arg1 viewForHitTestAtPoint:(CGPoint)arg2 ;
-(void)setInLensResizingMode:(char)arg1 ;
-(int)activeResizeHandle;
-(void)_handleLongPress:(id)arg1 ;
-(void)_handleTap:(id)arg1 ;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(char)arg2 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(id)identifier;
-(void)loadView;
@end

