/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:18:16 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/Frameworks/CloudKit.framework/CloudKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CloudKit/CKOperation.h>

@class CKCommentQuery, CKCommentCursor, NSMutableArray;

@interface CKFetchShareCommentsOperation : CKOperation {

	CKCommentQuery* _query;
	CKCommentCursor* _cursor;
	unsigned _resultsLimit;
	/*^block*/id _fetchShareCommentsCompletionBlock;
	NSMutableArray* _resultComments;
	CKCommentCursor* _nextCursor;

}

@property (nonatomic,copy) CKCommentQuery * query;                            //@synthesize query=_query - In the implementation block
@property (nonatomic,copy) CKCommentCursor * cursor;                          //@synthesize cursor=_cursor - In the implementation block
@property (assign,nonatomic) unsigned resultsLimit;                           //@synthesize resultsLimit=_resultsLimit - In the implementation block
@property (nonatomic,copy) id fetchShareCommentsCompletionBlock;              //@synthesize fetchShareCommentsCompletionBlock=_fetchShareCommentsCompletionBlock - In the implementation block
@property (nonatomic,retain) NSMutableArray * resultComments;                 //@synthesize resultComments=_resultComments - In the implementation block
@property (nonatomic,retain) CKCommentCursor * nextCursor;                    //@synthesize nextCursor=_nextCursor - In the implementation block
-(void)fillOutOperationInfo:(id)arg1 ;
-(char)CKOperationShouldRun:(id*)arg1 ;
-(void)performCKOperation;
-(void)_handleProgressCallback:(id)arg1 ;
-(id)initWithShareCommentQuery:(id)arg1 ;
-(void)setFetchShareCommentsCompletionBlock:(id)arg1 ;
-(NSMutableArray *)resultComments;
-(void)setResultComments:(NSMutableArray *)arg1 ;
-(void)_handleCompletionCallback:(id)arg1 ;
-(id)fetchShareCommentsCompletionBlock;
-(id)initWithCursor:(id)arg1 ;
-(CKCommentQuery *)query;
-(void)setQuery:(CKCommentQuery *)arg1 ;
-(CKCommentCursor *)cursor;
-(void)setCursor:(CKCommentCursor *)arg1 ;
-(void)setResultsLimit:(unsigned)arg1 ;
-(void)_finishOnCallbackQueueWithError:(id)arg1 ;
-(unsigned)resultsLimit;
-(CKCommentCursor *)nextCursor;
-(void)setNextCursor:(CKCommentCursor *)arg1 ;
@end

