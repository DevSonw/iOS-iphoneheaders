/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, June 23, 2015 at 11:18:16 PM Japan Standard Time
* Operating System: Version 8.2 (Build 12D508)
* Image Source: /System/Library/Frameworks/CloudKit.framework/CloudKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <CloudKit/CloudKit-Structs.h>
@class NSString, NSMutableDictionary, NSDateFormatter;

@interface CKSQLite : NSObject {

	char _corrupt;
	NSString* _path;
	NSString* _schema;
	NSString* _schemaVersion;
	NSString* _objectClassPrefix;
	sqlite3Ref _db;
	unsigned _openCount;
	NSMutableDictionary* _statementsBySQL;
	NSDateFormatter* _dateFormatter;

}

@property (nonatomic,readonly) NSString * path;                                    //@synthesize path=_path - In the implementation block
@property (nonatomic,readonly) NSString * schema;                                  //@synthesize schema=_schema - In the implementation block
@property (nonatomic,readonly) NSString * schemaVersion;                           //@synthesize schemaVersion=_schemaVersion - In the implementation block
@property (nonatomic,retain) NSString * objectClassPrefix;                         //@synthesize objectClassPrefix=_objectClassPrefix - In the implementation block
@property (nonatomic,readonly) char isOpen; 
@property (assign,nonatomic) sqlite3Ref db;                                        //@synthesize db=_db - In the implementation block
@property (assign,nonatomic) unsigned openCount;                                   //@synthesize openCount=_openCount - In the implementation block
@property (assign,nonatomic) char corrupt;                                         //@synthesize corrupt=_corrupt - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * statementsBySQL;              //@synthesize statementsBySQL=_statementsBySQL - In the implementation block
@property (nonatomic,retain) NSDateFormatter * dateFormatter;                      //@synthesize dateFormatter=_dateFormatter - In the implementation block
-(id)_createSchemaHash;
-(NSString *)schema;
-(NSString *)schemaVersion;
-(void)removeAllStatements;
-(void)dropAllTables;
-(void)executeSQL:(id)arg1 arguments:(void*)arg2 ;
-(id)statementForSQL:(id)arg1 ;
-(id)allTableNames;
-(void)removePropertyForKey:(id)arg1 ;
-(id)_tableNameForClass:(Class)arg1 ;
-(id)selectAllFrom:(id)arg1 where:(id)arg2 bindings:(id)arg3 ;
-(id)_boxedPropertyDictionary:(id)arg1 forObjCClass:(id)arg2 ;
-(id)_boxedValue:(id)arg1 forObjcCProperty:(id)arg2 ;
-(void)analyze;
-(unsigned)selectCountFrom:(id)arg1 where:(id)arg2 bindings:(id)arg3 ;
-(NSString *)objectClassPrefix;
-(unsigned)openCount;
-(void)setOpenCount:(unsigned)arg1 ;
-(char)corrupt;
-(void)setCorrupt:(char)arg1 ;
-(NSMutableDictionary *)statementsBySQL;
-(void)setDateFormatter:(NSDateFormatter *)arg1 ;
-(NSDateFormatter *)dateFormatter;
-(void)dealloc;
-(NSString *)path;
-(void)begin;
-(void)end;
-(void)close;
-(void)remove;
-(sqlite3Ref)db;
-(char)openWithError:(id*)arg1 ;
-(void)open;
-(id)initWithPath:(id)arg1 schema:(id)arg2 ;
-(id)select:(id)arg1 from:(id)arg2 where:(id)arg3 bindings:(id)arg4 ;
-(long long)insertOrReplaceInto:(id)arg1 values:(id)arg2 ;
-(void)deleteFrom:(id)arg1 where:(id)arg2 bindings:(id)arg3 ;
-(void)executeSQL:(id)arg1 ;
-(long long)insertOrReplaceObject:(id)arg1 ;
-(long long)lastInsertRowID;
-(id)selectObjectOfClass:(Class)arg1 where:(id)arg2 bindings:(id)arg3 ;
-(id)selectAllObjectsOfClass:(Class)arg1 where:(id)arg2 bindings:(id)arg3 ;
-(void)setObjectClassPrefix:(NSString *)arg1 ;
-(id)propertyForKey:(id)arg1 ;
-(void)setProperty:(id)arg1 forKey:(id)arg2 ;
-(id)select:(id)arg1 from:(id)arg2 ;
-(id)datePropertyForKey:(id)arg1 ;
-(void)setDateProperty:(id)arg1 forKey:(id)arg2 ;
-(id)selectAllObjectsOfClass:(Class)arg1 ;
-(void)setDb:(sqlite3Ref)arg1 ;
-(char)isOpen;
-(void)raise:(id)arg1 ;
-(void)rollback;
-(id)creationDate;
-(void)vacuum;
@end

