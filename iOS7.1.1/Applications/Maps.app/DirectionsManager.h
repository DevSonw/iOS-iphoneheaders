/*
* This header is generated by classdump-dyld 0.2
* on Saturday, June 28, 2014 at 8:59:00 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <GeoServices/PBRequesterDelegate.h>
#import <Maps/MNNavigationSessionUIDelegate.h>
#import <MapKit/MKLocationManagerObserver.h>

@protocol DirectionsManagerDelegate;
@class NSMutableArray, DirectionsWaypoint, MapViewSearchInfo, MNRoute, MNTracePlayer, GEODirectionsRequestFeedback, NSInvocation, MNDirectionsSession, NSDictionary, MNRouteManager, MNRouteSet;

@interface DirectionsManager : NSObject <PBRequesterDelegate, MNNavigationSessionUIDelegate, MKLocationManagerObserver> {

	NSMutableArray* _observers;
	<DirectionsManagerDelegate>* _delegate;
	DirectionsWaypoint* _startWaypoint;
	DirectionsWaypoint* _endWaypoint;
	MapViewSearchInfo* _mapViewSearchInfo;
	MNRoute* _routeToUpdate;
	MNTracePlayer* _tracePlayer;
	GEODirectionsRequestFeedback* _feedback;
	NSInvocation* _readyToStartRouteInvocation;
	unsigned _isLoading : 1;
	unsigned _shouldStartRoute : 1;
	unsigned _needsSave : 1;
	unsigned _isUpdatingCurrentLocation : 1;
	unsigned _isResetting : 1;
	MNDirectionsSession* _directionsSession;
	int _directionsMode;
	NSDictionary* _userInfo;

}

@property (assign,nonatomic,__weak) <DirectionsManagerDelegate> * delegate;                                //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) BOOL needsSave;                                                             //@synthesize needsSave=_needsSave - In the implementation block
@property (nonatomic,readonly) MNDirectionsSession * directionsSession;                                    //@synthesize directionsSession=_directionsSession - In the implementation block
@property (nonatomic,readonly) MNRouteManager * currentRouteManager; 
@property (nonatomic,readonly) int currentStepIndex; 
@property (nonatomic,readonly) MNRouteSet * currentRouteSet; 
@property (nonatomic,readonly) DirectionsWaypoint * startWaypoint;                                         //@synthesize startWaypoint=_startWaypoint - In the implementation block
@property (nonatomic,readonly) DirectionsWaypoint * endWaypoint;                                           //@synthesize endWaypoint=_endWaypoint - In the implementation block
@property (assign,nonatomic) int directionsMode;                                                           //@synthesize directionsMode=_directionsMode - In the implementation block
@property (nonatomic,readonly) MNTracePlayer * tracePlayer;                                                //@synthesize tracePlayer=_tracePlayer - In the implementation block
@property (nonatomic,readonly) GEODirectionsRequestFeedback * feedback;                                    //@synthesize feedback=_feedback - In the implementation block
@property (getter=isLoadingRoutes,nonatomic,readonly) BOOL loadingRoutes; 
@property (getter=isUpdatingCurrentLocation,nonatomic,readonly) BOOL updatingCurrentLocation;              //@synthesize isUpdatingCurrentLocation=_isUpdatingCurrentLocation - In the implementation block
@property (nonatomic,readonly) BOOL canRunNavigationForSelectedRoute; 
@property (nonatomic,readonly) NSDictionary * userInfo;                                                    //@synthesize userInfo=_userInfo - In the implementation block
+(id)sharedDirectionsManager;
-(id)tracePlayer;
-(void)beginLoadingRoutesFromWaypoint:(id)arg1 toWaypoint:(id)arg2 mode:(int)arg3 context:(id)arg4 tracePlayer:(id)arg5 withFeedback:(id)arg6 withUserInfo:(id)arg7 ;
-(id)endWaypoint;
-(void)setDirectionsMode:(int)arg1 ;
-(int)directionsMode;
-(id)startWaypoint;
-(void)_performReset;
-(void)cancelLoadingRoutes;
-(BOOL)canRunNavigationForSelectedRoute;
-(id)currentRouteManager;
-(void)setTracePlayer:(id)arg1 ;
-(BOOL)canRunNavigationForRoute:(id)arg1 ;
-(BOOL)isLoadingRoutes;
-(id)_startLocation;
-(id)_endLocation;
-(void)_setUpdatingCurrentLocation:(BOOL)arg1 ;
-(void)_startLoad;
-(void)setStartWaypoint:(id)arg1 ;
-(void)setEndWaypoint:(id)arg1 ;
-(id)_currentNavigator;
-(id)currentRouteSet;
-(unsigned)numberOfRoutes;
-(id)directionsSession;
-(void)_setResponsesUpdated;
-(void)updateStartAndEndSearchResultsFromRouteSet:(id)arg1 ;
-(void)directionsSession:(id)arg1 failedWithError:(id)arg2 ;
-(void)navigationSession:(id)arg1 willStartForRoute:(id)arg2 ;
-(void)navigationSessionWillEnd:(id)arg1 ;
-(void)navigationSession:(id)arg1 failedWithErrorCode:(int)arg2 ;
-(void)navigationSessionWillPause:(id)arg1 ;
-(void)navigationSessionWillResumeFromPause:(id)arg1 ;
-(void)navigationSession:(id)arg1 didEnableGuidance:(BOOL)arg2 ;
-(void)navigationSession:(id)arg1 updatedMatchedLocation:(id)arg2 ;
-(void)navigationSession:(id)arg1 didChangeState:(int)arg2 ;
-(void)navigationSession:(id)arg1 startingStepIndex:(unsigned)arg2 ;
-(void)navigationSession:(id)arg1 updatePointOfInterest:(SCD_Struct_Se1)arg2 focusStyle:(int)arg3 ;
-(void)navigationSession:(id)arg1 proceedToRouteDistance:(double)arg2 displayString:(id)arg3 remainingTime:(double)arg4 remainingDistance:(double)arg5 closestStepIndex:(unsigned)arg6 ;
-(void)navigationSession:(id)arg1 remainingTime:(double)arg2 remainingDistance:(double)arg3 distanceUntilManeuver:(double)arg4 timeUntilManeuver:(double)arg5 ;
-(void)navigationSession:(id)arg1 displayPrimaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di8*)arg4 count:(unsigned long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 maneuverStepIndex:(unsigned)arg11 isSynthetic:(BOOL)arg12 ;
-(void)navigationSession:(id)arg1 displayManeuverAlertForAnnouncementStage:(int)arg2 ;
-(void)navigationSession:(id)arg1 displaySecondaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di8*)arg4 count:(unsigned long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 ;
-(void)navigationSessionHideSecondaryStep:(id)arg1 ;
-(void)navigationSessionHasArrived:(id)arg1 ;
-(void)navigationSessionDetectedNewTransportType:(id)arg1 newTransportType:(int)arg2 ;
-(void)navigationSessionTransportTypeChanged:(id)arg1 newTransportType:(int)arg2 ;
-(void)directionsSessionWillRequestRoute:(id)arg1 traceRecorderFailed:(BOOL)arg2 ;
-(void)directionsSession:(id)arg1 didReceiveRouteSet:(id)arg2 ;
-(void)directionsSessionDidFailToReceiveRoute:(id)arg1 error:(id)arg2 ;
-(void)directionsSessionWillRecalculateRoute:(id)arg1 ;
-(void)directionsSession:(id)arg1 didRecalculateNewRoute:(id)arg2 ;
-(void)directionsSessionDidCancelRoute:(id)arg1 ;
-(void)directionsSession:(id)arg1 didSwitchToNewRoute:(id)arg2 ;
-(void)directionsSession:(id)arg1 didChangeRoutePreloadSession:(id)arg2 ;
-(void)directionsSessionUpdatedETA:(id)arg1 ;
-(void)directionsSessionUpdatedTrafficIncidents:(id)arg1 ;
-(void)directionsSessionRecommendsNewRoute:(id)arg1 oldEstimatedTime:(unsigned)arg2 newEstimatedTime:(unsigned)arg3 finished:(/*^block*/ id)arg4 ;
-(void)loadFromPersistentDirections:(id)arg1 ;
-(id)persistentDirections;
-(unsigned)indexOfRoute:(id)arg1 ;
-(void)selectRouteAtIndex:(unsigned)arg1 forDirectionsMode:(int)arg2 ;
-(int)currentStepIndex;
-(void)startDirectionsToSelectedRouteWithOptions:(int)arg1 ;
-(BOOL)isUpdatingCurrentLocation;
-(void)locationManagerUpdatedLocation:(id)arg1 ;
-(void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2 ;
-(void)locationManagerDidReset:(id)arg1 ;
-(BOOL)locationManagerShouldPauseLocationUpdates:(id)arg1 ;
-(void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3 ;
-(void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(void)removeObserver:(id)arg1 ;
-(id)userInfo;
-(void)_reportError:(id)arg1 ;
-(void)reset;
-(void).cxx_destruct;
-(void)addObserver:(id)arg1 ;
-(BOOL)needsSave;
-(id)feedback;
-(id)routeAtIndex:(unsigned)arg1 ;
-(void)locationManagerDidPauseLocationUpdates:(id)arg1 ;
-(void)locationManagerDidResumeLocationUpdates:(id)arg1 ;
-(id)routes;
-(id)selectedRoute;
@end

