/*
* This header is generated by classdump-dyld 0.2
* on Saturday, June 28, 2014 at 8:59:01 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <Maps/VSSpeechSynthesizerDelegate.h>
#import <Maps/AVAudioPlayerDelegate.h>

@protocol OS_dispatch_queue, VSSpeechSynthesizerDelegate;
@class NSString, NSDictionary, MNNavigationAudioSession, NSHashTable, AVAudioPlayer, NSObject, VSSpeechSynthesizer;

@interface MNVoiceController : NSObject <VSSpeechSynthesizerDelegate, AVAudioPlayerDelegate> {

	NSString* _currentLanguage;
	BOOL _spokenLanguageIsUILanguage;
	NSDictionary* _localizableStrings;
	NSString* _languageLocale;
	NSString* _uiLanguage;
	BOOL _isPersistentConnectionOpen;
	BOOL _isActivatingAudioSession;
	BOOL _speechMuted;
	MNNavigationAudioSession* _activeNavigationSession;
	NSHashTable* _observers;
	/*^block*/ id _completionBlock;
	AVAudioPlayer* _leftTurnAudioPlayer;
	AVAudioPlayer* _rightTurnAudioPlayer;
	BOOL _shouldBePlayingPrompt;
	NSString* _queuedSpeech;
	/*^block*/ id _queuedCompletionBlock;
	NSObject<OS_dispatch_queue>* _audioQueue;
	int _currentLanguageSource;
	<VSSpeechSynthesizerDelegate>* delegate;
	VSSpeechSynthesizer* synthesizer;

}

@property (nonatomic,readonly) NSString * currentVoiceLanguage; 
@property (nonatomic,readonly) BOOL speechMuted;                                              //@synthesize speechMuted=_speechMuted - In the implementation block
@property (nonatomic,retain) MNNavigationAudioSession * activeNavigationSession;              //@synthesize activeNavigationSession=_activeNavigationSession - In the implementation block
@property (assign,nonatomic,__weak) <VSSpeechSynthesizerDelegate> * delegate; 
@property (nonatomic,retain) VSSpeechSynthesizer * synthesizer; 
@property (nonatomic,copy) id completionBlock;                                                //@synthesize completionBlock=_completionBlock - In the implementation block
@property (nonatomic,copy) NSString * queuedSpeech;                                           //@synthesize queuedSpeech=_queuedSpeech - In the implementation block
@property (nonatomic,copy) id queuedCompletionBlock;                                          //@synthesize queuedCompletionBlock=_queuedCompletionBlock - In the implementation block
+(void)setVolumeFromDefaults;
+(id)sharedInstance;
+(id)localizedStringForKey:(const char*)arg1 ;
-(id)currentVoiceLanguage;
-(id)_uiLanguage;
-(id)_vsPreferencesSpokenLanguageIdentifier;
-(id)_defaultVoiceLanguageWithSource:(int*)arg1 ;
-(void)_setGender;
-(void)_updateCurrentVoiceLanguage;
-(id)_localizedStringForKey:(const char*)arg1 ;
-(int)volumeContext;
-(id)synthesizer;
-(void)_setAudioSessionProperties;
-(void)_setVolumeFromDefaults;
-(void)setSynthesizer:(id)arg1 ;
-(BOOL)isPlayingAudio;
-(void)setQueuedSpeech:(id)arg1 ;
-(void)setQueuedCompletionBlock:(/*^block*/ id)arg1 ;
-(BOOL)speechMuted;
-(void)_handleFinishedSpeakingWithStatusCode:(int)arg1 ;
-(void)activateAudioSession:(BOOL)arg1 completionHandler:(/*^block*/ id)arg2 ;
-(id)queuedSpeech;
-(/*^block*/ id)queuedCompletionBlock;
-(void)speak:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)_speakQueued;
-(id)_rightTurnAudioPlayer;
-(id)_leftTurnAudioPlayer;
-(void)_handleFinishedPlayingBeep;
-(void)_audioInterruption:(id)arg1 ;
-(void)_setVolumeControlEnabled:(BOOL)arg1 ;
-(void)_setMaintainInactivePersistentConnection:(BOOL)arg1 ;
-(id)_uiLocaleIdentifier;
-(void)beepIfNecessaryForShortPromptType:(int)arg1 ;
-(void)setActiveNavigationSession:(id)arg1 ;
-(void)prepareToAnnounce;
-(void)endAnnounce;
-(id)activeNavigationSession;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(void)removeObserver:(id)arg1 ;
-(void)setCompletionBlock:(/*^block*/ id)arg1 ;
-(/*^block*/ id)completionBlock;
-(void).cxx_destruct;
-(void)stop;
-(void)addObserver:(id)arg1 ;
-(void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(BOOL)arg2 ;
-(void)speechSynthesizer:(id)arg1 didFinishSpeaking:(BOOL)arg2 withError:(id)arg3 ;
-(void)_mediaServicesWereReset:(id)arg1 ;
-(BOOL)isSpeaking;
@end

