/*
* This header is generated by classdump-dyld 0.2
* on Saturday, June 28, 2014 at 8:59:01 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <MapKit/MKLocationManagerObserver.h>
#import <Maps/MNGuidanceManagerDelegate.h>
#import <Maps/MNExternalGuidanceSource.h>
#import <Maps/MNRouteManagerDelegate.h>

@protocol MNNavigatorDelegate, MNNavigatorTestingDelegate;
@class MNRouteManager, NSTimer, MNMapMatcher, MNGuidanceManager, MNNavigationAudioSession, MNMotionContext, MNLocation, GEOMapRegion, GEOWaypointSearchResultRequest;

@interface MNNavigator : NSObject <MKLocationManagerObserver, MNGuidanceManagerDelegate, MNExternalGuidanceSource, MNRouteManagerDelegate> {

	<MNNavigatorDelegate>* _delegate;
	<MNNavigatorTestingDelegate>* _testingDelegate;
	MNRouteManager* _routeManager;
	NSTimer* _locationUpdateOverdueTimer;
	MNMapMatcher* _mapMatcher;
	MNGuidanceManager* _guidanceManager;
	MNNavigationAudioSession* _audioSession;
	BOOL _hasGuidanceManagerConfiguredCameraFocus;
	MNMotionContext* _motionContext;
	int _state;
	BOOL _guidanceEnabled;
	BOOL _shouldStopGuidanceOnReroute;
	int _detectedTransportType;
	SCD_Struct_Si13 _detectedTransportTypeOrigin;
	int _responseErrorCode;
	unsigned _responseErrorCount;
	MNLocation* _lastTrackedLocation;
	unsigned _sameLocationPushCounter;
	MNLocation* _lastLocationUsedForReroute;
	unsigned _reroutesOnFeature;
	double _firstPauseTime;
	unsigned _recalculationNetworkUnreachableCount;
	NSTimer* _recalculationRetryTimer;
	GEOMapRegion* _arrivalMapRegion;
	BOOL _paused;

}

@property (assign,nonatomic,__weak) <MNNavigatorDelegate> * delegate;                     //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) GEOWaypointSearchResultRequest * destination; 
@property (nonatomic,readonly) MNRouteManager * routeManager;                             //@synthesize routeManager=_routeManager - In the implementation block
@property (nonatomic,readonly) MNLocation * lastMatchedLocation; 
@property (assign,nonatomic) int state;                                                   //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) int transportType; 
@property (nonatomic,readonly) GEOMapRegion * arrivalMapRegion; 
@property (getter=isPaused,nonatomic,readonly) BOOL paused;                               //@synthesize paused=_paused - In the implementation block
@property (nonatomic,readonly) int responseErrorCode;                                     //@synthesize responseErrorCode=_responseErrorCode - In the implementation block
@property (nonatomic,readonly) unsigned responseErrorCount;                               //@synthesize responseErrorCount=_responseErrorCount - In the implementation block
@property (nonatomic,readonly) BOOL isNavigating; 
@property (assign,getter=isGuidanceEnabled,nonatomic) BOOL guidanceEnabled;               //@synthesize guidanceEnabled=_guidanceEnabled - In the implementation block
@property (nonatomic,retain) NSTimer * locationUpdateOverdueTimer;                        //@synthesize locationUpdateOverdueTimer=_locationUpdateOverdueTimer - In the implementation block
@property (nonatomic,retain) MNGuidanceManager * guidanceManager;                         //@synthesize guidanceManager=_guidanceManager - In the implementation block
@property (nonatomic,retain) MNMapMatcher * mapMatcher;                                   //@synthesize mapMatcher=_mapMatcher - In the implementation block
@property (nonatomic,retain) MNLocation * lastTrackedLocation;                            //@synthesize lastTrackedLocation=_lastTrackedLocation - In the implementation block
@property (nonatomic,retain) MNLocation * lastLocationUsedForReroute;                     //@synthesize lastLocationUsedForReroute=_lastLocationUsedForReroute - In the implementation block
@property (assign,nonatomic) unsigned reroutesOnFeature;                                  //@synthesize reroutesOnFeature=_reroutesOnFeature - In the implementation block
-(BOOL)isNavigating;
-(id)routeManager;
-(id)lastMatchedLocation;
-(void)setGuidanceEnabled:(BOOL)arg1 ;
-(void)guidanceManager:(id)arg1 updatePointOfInterest:(SCD_Struct_Si13)arg2 focusStyle:(int)arg3 ;
-(void)guidanceManagerProceedingToRoute:(id)arg1 proceedToRouteDistance:(double)arg2 displayString:(id)arg3 remainingTime:(double)arg4 remainingDistance:(double)arg5 closestStepIndex:(unsigned)arg6 ;
-(void)guidanceManagerHasArrived:(id)arg1 announce:(id)arg2 ;
-(void)guidanceManagerHasReachedEndOfTurnByTurn:(id)arg1 announce:(id)arg2 ;
-(void)guidanceManager:(id)arg1 displayManeuverAlertForAnnouncementStage:(int)arg2 ;
-(void)guidanceManagerDidUpdateProgress:(id)arg1 remainingTime:(double)arg2 remainingDistance:(double)arg3 distanceUntilManeuver:(double)arg4 timeUntilManeuver:(double)arg5 willAnnounceSoon:(BOOL)arg6 ;
-(BOOL)guidanceManagerIsOffRoute:(id)arg1 location:(id)arg2 stepIndex:(unsigned)arg3 ;
-(void)guidanceManagerHideSecondaryStep:(id)arg1 ;
-(void)guidanceManager:(id)arg1 announce:(id)arg2 shortPromptType:(int)arg3 stage:(int)arg4 hasSecondaryManeuver:(BOOL)arg5 completionBlock:(/*^block*/ id)arg6 ;
-(void)guidanceManager:(id)arg1 displayPrimaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di8*)arg4 count:(unsigned long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 maneuverStepIndex:(unsigned)arg11 isSynthetic:(BOOL)arg12 ;
-(void)guidanceManager:(id)arg1 displaySecondaryStepManeuverType:(int)arg2 junctionType:(int)arg3 junctionElements:(SCD_Struct_Di8*)arg4 count:(unsigned long)arg5 instructions:(id)arg6 shorterAlternativeInstructions:(id)arg7 shieldType:(int)arg8 shieldText:(id)arg9 drivingSide:(int)arg10 ;
-(BOOL)isGuidanceEnabled;
-(BOOL)repeatCurrentGuidance;
-(void)speak:(id)arg1 shortPromptType:(int)arg2 ;
-(void)routeManagerDidChangeState:(id)arg1 newRouteState:(int)arg2 ;
-(void)routeManager:(id)arg1 didChangeRoutePreloadSession:(id)arg2 ;
-(void)routeManager:(id)arg1 recordRouteRequest:(id)arg2 ;
-(void)routeManagerDidCancelRoute:(id)arg1 errorCode:(int)arg2 ;
-(void)routeManagerWillRequestRoute:(id)arg1 traceRecorderFailed:(BOOL)arg2 ;
-(void)routeManagerDidFailToRecalculateRoute:(id)arg1 previousRoute:(id)arg2 errorCode:(int)arg3 ;
-(void)routeManagerWillRecalculateRoute:(id)arg1 ;
-(void)routeManager:(id)arg1 didSwitchToNewRoute:(id)arg2 alreadyOnRoute:(BOOL)arg3 ;
-(void)routeManager:(id)arg1 recordRouteResponse:(id)arg2 ;
-(void)routeManager:(id)arg1 didReceiveRouteSet:(id)arg2 ;
-(void)routeManager:(id)arg1 didRecalculateNewRoute:(id)arg2 ;
-(id)testingDelegate;
-(void)routeManagerDidFailToReceiveRoute:(id)arg1 error:(id)arg2 ;
-(void)routeManager:(id)arg1 failedWithError:(id)arg2 ;
-(void)routeManagerUpdatedETA:(id)arg1 ;
-(void)routeManagerUpdatedTrafficIncidents:(id)arg1 ;
-(void)routeManager:(id)arg1 recommendsNewRoute:(id)arg2 etaRoute:(id)arg3 oldEstimatedTime:(unsigned)arg4 newEstimatedTime:(unsigned)arg5 ;
-(void)startNavigatorInMidRoute:(BOOL)arg1 withGuidance:(BOOL)arg2 ;
-(void)stopNavigator;
-(void)startNavigatorInMidRoute:(BOOL)arg1 ;
-(id)initWithNavigationSession:(id)arg1 ;
-(id)routeRepresentation;
-(id)_newMapMatcher;
-(id)locationUpdateOverdueTimer;
-(id)guidanceManager;
-(int)_clActivityType;
-(void)clearGuidanceManager;
-(void)_setUpGuidanceManagerWithAttributedRoute:(id)arg1 allowMidRouteStart:(BOOL)arg2 ;
-(void)_announceStart;
-(id)mapMatcher;
-(id)_filterLocationUpdateWithLocation:(id)arg1 navCourse:(double)arg2 ;
-(id)_currentDate;
-(void)speak:(id)arg1 shortPromptType:(int)arg2 ignorePromptStyle:(BOOL)arg3 ;
-(void)retryLastRouteRecalc;
-(void)_recalculationRetryTimerFired:(id)arg1 ;
-(void)setLastLocationUsedForReroute:(id)arg1 ;
-(void)setResponseErrorCode:(int)arg1 ;
-(void)setLocationUpdateOverdueTimer:(id)arg1 ;
-(void)_resetMapMatcherToLocation:(id)arg1 onRoute:(id)arg2 ;
-(id)lastTrackedLocation;
-(void)setGuidanceManager:(id)arg1 ;
-(void)_locationUpdateOverdueFireMethod:(id)arg1 ;
-(BOOL)_courseOverride:(id)arg1 courseOverride:(double*)arg2 courseAccuracy:(double*)arg3 ;
-(void)_resetLocationUpdateOverdueTimerWhenProjecting:(BOOL)arg1 ;
-(BOOL)_checkForArrival:(id)arg1 ;
-(double)_distanceToForceReroute;
-(id)lastLocationUsedForReroute;
-(BOOL)_allowNavigatorSwitchToTransportType:(int)arg1 atLocation:(id)arg2 ;
-(void)_updateStateForLocation:(id)arg1 ;
-(void)_updateNavigatorForDisabledGuidance:(id)arg1 ;
-(int)_checkForTransportTypeChange:(id)arg1 ;
-(BOOL)_exceedsReroutesThresholdsBetweenLocation:(id)arg1 andLocation:(id)arg2 ;
-(BOOL)_handleOffRouteFromLocation:(id)arg1 stepIndex:(unsigned)arg2 findContingencyOnly:(BOOL)arg3 forceRepeatedRecalc:(BOOL)arg4 ;
-(void)_updateDetectedMotionAtLocation:(id)arg1 ;
-(void)setLastTrackedLocation:(id)arg1 ;
-(void)_updateLocation:(id)arg1 withPreviousLocation:(id)arg2 ;
-(void)_triggerArrivalAndAnnounce:(id)arg1 ;
-(BOOL)_shouldMatchToRouteAfterRecalculateFrom:(id)arg1 ;
-(void)_resetToCurrentLocationOnRoute:(id)arg1 ;
-(unsigned)responseErrorCount;
-(Class)_guidanceManagerClass;
-(void)routeManagerForcedSwitchToNewRoute:(id)arg1 ;
-(void)restartNavigator;
-(void)forceRouteMatchAtLocation:(id)arg1 ;
-(void)traceForcedRerouteWithResponse:(id)arg1 request:(id)arg2 ;
-(void)traceForcedActiveTransportTypeChange:(int)arg1 ;
-(void)toggleTracePlaying:(BOOL)arg1 ;
-(void)switchToNewRoute:(id)arg1 etaRoute:(id)arg2 ;
-(void)setMapMatcher:(id)arg1 ;
-(int)responseErrorCode;
-(unsigned)reroutesOnFeature;
-(void)setReroutesOnFeature:(unsigned)arg1 ;
-(BOOL)isPaused;
-(void)locationManagerUpdatedLocation:(id)arg1 ;
-(void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2 ;
-(void)locationManagerDidReset:(id)arg1 ;
-(BOOL)locationManagerShouldPauseLocationUpdates:(id)arg1 ;
-(void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3 ;
-(void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3 ;
-(int)_transportType;
-(void)_startLocationUpdates;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(int)state;
-(void)setState:(int)arg1 ;
-(id)destination;
-(void).cxx_destruct;
-(id)arrivalMapRegion;
-(void)locationManagerDidPauseLocationUpdates:(id)arg1 ;
-(void)locationManagerDidResumeLocationUpdates:(id)arg1 ;
-(int)transportType;
-(void)stopSpeaking;
@end

