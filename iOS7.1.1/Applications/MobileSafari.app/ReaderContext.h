/*
* This header is generated by classdump-dyld 0.2
* on Saturday, June 28, 2014 at 8:59:11 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /Applications/MobileSafari.app/safarifetcherd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol ReaderControllerDelegate;
#import <safarifetcherd/safarifetcherd-Structs.h>
@class WebView, NSTimer;

@interface ReaderContext : NSObject {

	int _retainCount;
	ReaderController* _readerController;
	ReaderJSController* _readerJSController;
	WebView* _webView;
	NSTimer* _clearUnusedReaderResourcesTimer;
	<ReaderControllerDelegate>* _delegate;

}

@property (nonatomic,readonly) WebView * webView;                                //@synthesize webView=_webView - In the implementation block
@property (nonatomic,readonly) ReaderController* readerController;               //@synthesize readerController=_readerController - In the implementation block
@property (assign,nonatomic) <ReaderControllerDelegate> * delegate;              //@synthesize delegate=_delegate - In the implementation block
-(void)loadReaderDocument;
-(void)_clearReaderViewAndController;
-(void)cancelClearUnusedReaderResourcesTimer;
-(id)readerURL;
-(void)_clearUnusedReaderResources;
-(int)readerOperationMode;
-(BOOL)networkIsReachable;
-(void)initReaderJSController:(id)arg1 ;
-(void)createWebViewIfNeededWithPreferences:(id)arg1 ;
-(void)clearReaderWebView;
-(void)clearAvailability;
-(BOOL)hasMultiplePages;
-(BOOL)isLoadingNextPage;
-(void)stopLoadingNextPage;
-(BOOL)isReaderAvailable;
-(id)mailingAndPrintingFrame;
-(ReaderJSController*)_readerJSController;
-(void)loadNewArticle;
-(void)clearUnusedReaderResourcesSoon;
-(BOOL)shouldCreateArticleFinder;
-(void)createArticleFinder;
-(ReaderController*)readerController;
-(oneway void)release;
-(id)retain;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(unsigned)retainCount;
-(id)delegate;
-(BOOL)_tryRetain;
-(BOOL)_isDeallocating;
-(id)webView;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5 ;
-(id)initWithWebView:(id)arg1 ;
-(void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5 ;
-(id)webView:(id)arg1 connectionPropertiesForResource:(id)arg2 dataSource:(id)arg3 ;
-(void)webView:(id)arg1 didClearWindowObject:(id)arg2 forFrame:(id)arg3 ;
@end

