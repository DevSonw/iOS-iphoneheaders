/*
* This header is generated by classdump-dyld 0.2
* on Saturday, June 28, 2014 at 8:58:59 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /Applications/GameCenterUIService.app/GameCenterUIService
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <GameCenterUIService/GameCenterUIService-Structs.h>
#import <GameCenterUIService/GKServiceViewController.h>
#import <GameCenterUIService/GKGameProfileCollectionViewControllerServiceDelegate.h>
#import <GameCenterUI/GKGameCenterViewControllerDelegate.h>

@class NSString, NSArray, GKLeaderboard, GKGame;

@interface GameCenterUIServiceViewController : GKServiceViewController <GKGameProfileCollectionViewControllerServiceDelegate, GKGameCenterViewControllerDelegate> {

	int _viewState;
	NSString* _leaderboardIdentifier;
	int _leaderboardTimeScope;
	NSArray* _allLeaderboardIdentifiers;
	GKLeaderboard* _aggregateLeaderboard;
	GKLeaderboard* _currentLeaderboard;

}

@property (assign,nonatomic) int viewState;                                     //@synthesize viewState=_viewState - In the implementation block
@property (assign,nonatomic) int leaderboardTimeScope;                          //@synthesize leaderboardTimeScope=_leaderboardTimeScope - In the implementation block
@property (nonatomic,retain) NSString * leaderboardIdentifier;                  //@synthesize leaderboardIdentifier=_leaderboardIdentifier - In the implementation block
@property (nonatomic,retain) NSArray * allLeaderboardIdentifiers;               //@synthesize allLeaderboardIdentifiers=_allLeaderboardIdentifiers - In the implementation block
@property (nonatomic,retain) GKLeaderboard * aggregateLeaderboard;              //@synthesize aggregateLeaderboard=_aggregateLeaderboard - In the implementation block
@property (nonatomic,retain) GKLeaderboard * currentLeaderboard;                //@synthesize currentLeaderboard=_currentLeaderboard - In the implementation block
@property (nonatomic,retain) GKGame * game; 
+(id)_remoteViewControllerInterface;
+(id)_exportedInterface;
-(id)currentLeaderboard;
-(void)configureChildView;
-(id)allLeaderboardIdentifiers;
-(void)loadLeaderboardIdentifiers;
-(void)setAllLeaderboardIdentifiers:(id)arg1 ;
-(void)setAggregateLeaderboard:(id)arg1 ;
-(void)setCurrentLeaderboard:(id)arg1 ;
-(id)aggregateLeaderboard;
-(void)gameProfileCollectionViewController:(id)arg1 didChangeToViewState:(int)arg2 ;
-(void)gameProfileCollectionViewController:(id)arg1 didSelectLeaderboardIdentifier:(id)arg2 ;
-(void)setViewState:(int)arg1 ;
-(void)setLeaderboardIdentifier:(id)arg1 ;
-(id)leaderboardIdentifier;
-(id)observedKeyPaths;
-(void)setIntialState:(id)arg1 withReply:(/*^block*/ id)arg2 ;
-(void)setValue:(id)arg1 forKeyPath:(id)arg2 withReply:(/*^block*/ id)arg3 ;
-(int)viewState;
-(int)leaderboardTimeScope;
-(void)setLeaderboardTimeScope:(int)arg1 ;
-(void)setAPIControllerFlags:(SCD_Struct_Ga1)arg1 ;
-(void)dealloc;
-(id)init;
@end

