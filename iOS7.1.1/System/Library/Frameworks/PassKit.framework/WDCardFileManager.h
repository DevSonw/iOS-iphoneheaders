/*
* This header is generated by classdump-dyld 0.2
* on Saturday, June 28, 2014 at 2:29:06 AM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/Frameworks/PassKit.framework/passd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <passd/PDUbiquityManagerDelegate.h>
#import <PassKitCore/PKLocalPassFileAccessor.h>

@protocol WDCardFileManagerDelegate;
@class PDUbiquityManager;

@interface WDCardFileManager : NSObject <PDUbiquityManagerDelegate, PKLocalPassFileAccessor> {

	PDUbiquityManager* _ubiquityManager;
	<WDCardFileManagerDelegate>* _delegate;

}
+(void)deleteCardsDirectory;
-(void)startObservingUbiquityEvents;
-(void)startUbiquity;
-(id)cardWithUniqueID:(id)arg1 ;
-(id)cardUniqueIDs;
-(id)catalogOfRecord;
-(void)hookUpDatabaseCard:(id)arg1 ;
-(void)migrateImageArchives;
-(void)checkRevocationStatusForAllPasses;
-(void)writeCatalogOfRecord:(id)arg1 source:(int)arg2 ;
-(BOOL)writeCard:(id)arg1 source:(int)arg2 error:(id*)arg3 ;
-(id)contentForUniqueID:(id)arg1 ;
-(id)imageSet:(int)arg1 forCardUniqueID:(id)arg2 displayProfile:(id)arg3 ;
-(void)deleteCardWithUniqueID:(id)arg1 andTellUbiquity:(BOOL)arg2 ;
-(void)restartUbiquity;
-(void)nukeCards;
-(id)_ubiquityManager;
-(id)_queue_cardUniqueIDs;
-(id)_passIfExistsWithUniqueID:(id)arg1 ;
-(void)_deletePossibleInvalidCardWithUniqueID:(id)arg1 ;
-(id)_queue_contentFromPassURL:(id)arg1 ;
-(id)_queue_imageSet:(int)arg1 fromPassURL:(id)arg2 displayProfile:(id)arg3 ;
-(id)_queue_writeCard:(id)arg1 diff:(id*)arg2 ;
-(void)_checkRevocationStatusForPass:(id)arg1 withCompletion:(/*^block*/ id)arg2 ;
-(void)updateUbiquitousCatalog:(id)arg1 ;
-(BOOL)_queue_deleteCardWithUniqueID:(id)arg1 ;
-(id)_queue_cardWithUniqueID:(id)arg1 ;
-(id)existingCardUniqueIDs;
-(id)existingCardWithUniqueID:(id)arg1 ;
-(void)ubiquitousCardDidChange:(id)arg1 ;
-(void)ubiquitousCardWithUniqueIDRemoved:(id)arg1 ;
-(id)existingCatalog;
-(void)ubiquitousCatalogDidChange:(id)arg1 ;
-(id)localPasses;
-(void)dealloc;
-(BOOL)isValidPassWithURL:(id)arg1 error:(id*)arg2 warnings:(id*)arg3 ;
-(id)loadDictionaryFromPassURL:(id)arg1 ;
-(id)manifestHashFromPassURL:(id)arg1 ;
-(id)displayProfileWithPassDictionary:(id)arg1 passURL:(id)arg2 ;
-(BOOL)getResourceValue:(id*)arg1 forKey:(id)arg2 forPassAtURL:(id)arg3 error:(id*)arg4 ;
-(void)checkRevocationStatusForPassAtURL:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(id)loadContentFromPassURL:(id)arg1 ;
-(id)loadImageSet:(int)arg1 fromPassURL:(id)arg2 displayProfile:(id)arg3 ;
-(BOOL)copyPassAtURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3 ;
-(id)serializedFileWrapperFromPassURL:(id)arg1 ;
-(BOOL)movePassAtURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3 ;
-(BOOL)removePassAtURL:(id)arg1 error:(id*)arg2 ;
-(id)localizedString:(id)arg1 forPassAtURL:(id)arg2 ;
-(id)initWithDelegate:(id)arg1 ;
@end

