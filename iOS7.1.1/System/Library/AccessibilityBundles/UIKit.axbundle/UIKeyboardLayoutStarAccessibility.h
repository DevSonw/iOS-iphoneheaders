/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:19:49 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/AccessibilityBundles/UIKit.axbundle/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIKeyboardLayoutStarAccessibility_super.h>

@interface UIKeyboardLayoutStarAccessibility : UIKeyboardLayoutStarAccessibility_super
+(void)_accessibilityPerformValidations:(id)arg1 ;
+(void)_initializeSafeCategory;
+(id)_accessibilityTargetClassName;
+(id)_installSafeCategoryValidationMethod;
+(id)_initializeSafeCategoryFromValidationManager;
-(bool)_isCapitalLetterKeyplane:(id)arg1 ;
-(bool)_isSmallLetterKeyplane:(id)arg1 ;
-(id)_accessibilityKeys;
-(id)_accessibilityKeyElementForKey:(id)arg1 ;
-(bool)_accessibilityFingerIsDown;
-(id)_accessibilityInternalData;
-(void)_axClearReturnKeyLabel;
-(void)_accessibilityResetInternalData;
-(id)_accessibilityCreateElementForKey:(id)arg1 ;
-(id)_accessibilityGetRowForEmojiKey:(id)arg1 numEmojiCols:(int*)arg2 emojiKeyIndex:(unsigned long long*)arg3 ;
-(id)_accessibilityGetKeyboardRowsByRowNumber;
-(void)dealloc;
-(void)setLabel:(id)arg1 forKey:(id)arg2 ;
-(bool)canProduceString:(id)arg1 ;
-(void)setReturnKeyEnabled:(bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3 ;
-(void)touchDown:(id)arg1 executionContext:(id)arg2 ;
-(void)touchDragged:(id)arg1 executionContext:(id)arg2 ;
-(void)touchUp:(id)arg1 executionContext:(id)arg2 ;
-(unsigned long long)accessibilityTraits;
-(bool)isAccessibilityElement;
-(bool)accessibilityElementsHidden;
-(bool)accessibilityPerformEscape;
-(long long)accessibilityElementCount;
-(id)accessibilityElementAtIndex:(long long)arg1 ;
-(long long)indexOfAccessibilityElement:(id)arg1 ;
-(void)setKeyplaneName:(id)arg1 ;
-(void)setState:(int)arg1 forKey:(id)arg2 ;
-(void)showPopupVariantsForKey:(id)arg1 ;
-(void)showPopupView:(int)arg1 withKey:(id)arg2 popupInfo:(id)arg3 force:(bool)arg4 ;
-(void)activateCompositeKey:(id)arg1 direction:(int)arg2 flickString:(id)arg3 popupInfo:(id)arg4 ;
-(id)_accessibilityHitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(id)_accessibilityKeyboardKeyForString:(id)arg1 ;
-(id)_accessibilityUserTestingChildren;
-(id)_accessibiltyAvailableKeyplanes;
-(void)_accessibilityChangeToKeyplane:(id)arg1 ;
-(id)_accessibilityScannerGroupElements;
-(bool)_accessibilityIsScannerGroup;
-(int)_accessibilityScannerGroupTraits;
@end

