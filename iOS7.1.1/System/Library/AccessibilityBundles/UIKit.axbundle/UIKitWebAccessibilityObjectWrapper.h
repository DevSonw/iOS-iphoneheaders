/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:19:52 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/AccessibilityBundles/UIKit.axbundle/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIKitWebAccessibilityObjectWrapper_super.h>

@interface UIKitWebAccessibilityObjectWrapper : UIKitWebAccessibilityObjectWrapper_super
+(void)_accessibilityPerformValidations:(id)arg1 ;
+(void)_initializeSafeCategory;
+(id)_accessibilityTargetClassName;
+(id)_installSafeCategoryValidationMethod;
+(id)_initializeSafeCategoryFromValidationManager;
-(void)_repostWebSelectionChange;
-(void)_repostLoadCompleteNotification;
-(long long)_accessibilityChildElementCount;
-(void)_performLiveRegionUpdate;
-(void)_repostFocusChangeNotification;
-(void)_repostWebNotificaton:(id)arg1 ;
-(void)postScreenChangeNotification;
-(bool)isScreenReaderRunning;
-(id)screenReaderVersion;
-(bool)_isCheckBox;
-(void)_accessibilityDetermineIfShouldUseParentLinkLabel;
-(id)_accessibilityMathEquationRootObject;
-(bool)_accessibilitySiblingWithAncestor:(id)arg1 isFirst:(bool)arg2 isLast:(bool)arg3 sawAXElement:(bool*)arg4 ;
-(bool)_accessibilitySiblingWithAncestor:(id)arg1 isFirst:(bool)arg2 isLast:(bool)arg3 ;
-(id)_accessibilityConvertDataArrayToTextMarkerArray:(id)arg1 ;
-(id)_accessibilityConvertTextMarkersToDataArray:(id)arg1 ;
-(id)_accessibilityMarkerPosition:(bool)arg1 withMarker:(id)arg2 ;
-(id)_accessibilityLinePosition:(bool)arg1 withMarker:(id)arg2 ;
-(bool)_accessibilityUsesParentLinkLabel;
-(id)_accessibilityProcessRootEquation;
-(void)_accessibilityModifySelection:(id)arg1 increase:(bool)arg2 ;
-(CGRect)bounds;
-(id)description;
-(id)accessibilityLabel;
-(CGRect)accessibilityFrame;
-(id)accessibilityValue;
-(id)accessibilityHint;
-(CGPoint)accessibilityActivationPoint;
-(unsigned long long)accessibilityTraits;
-(bool)isAccessibilityElement;
-(id)accessibilityLanguage;
-(id)accessibilityPath;
-(id)accessibilityIdentifier;
-(void)accessibilityElementDidBecomeFocused;
-(bool)accessibilityActivate;
-(id)accessibilityElementAtIndex:(long long)arg1 ;
-(long long)indexOfAccessibilityElement:(id)arg1 ;
-(id)_accessibilityScrollAncestor;
-(id)_accessibilityUserTestingElementBaseType;
-(CGRect)accessibilityFrameForScrolling;
-(id)_accessibilityParentView;
-(id)_accessibilityNextElementsWithCount:(unsigned)arg1 originalElement:(id)arg2 ;
-(id)_accessibilityPreviousElementsWithCount:(unsigned)arg1 originalElement:(id)arg2 ;
-(bool)_accessibilitySupportsActivateAction;
-(NSRange)_accessibilityRangeForTextMarker:(id)arg1 ;
-(id)_accessibilityAttributedValueForRange:(NSRange*)arg1 ;
-(bool)_accessibilityIsFirstSiblingForTrait:(unsigned long long)arg1 ;
-(bool)_accessibilityIsLastSiblingForTrait:(unsigned long long)arg1 ;
-(id)_accessibilityAncestorForSiblingsWithTraits:(unsigned long long)arg1 ;
-(CGRect)_accessibilityBoundsForRange:(NSRange)arg1 ;
-(id)_accessibilityLineStartMarker:(id)arg1 ;
-(void)_accessibilityMoveSelectionToMarker:(id)arg1 ;
-(id)_accessibilityMarkerForPoint:(CGPoint)arg1 ;
-(id)_accessibilityLineEndMarker:(id)arg1 ;
-(id)_accessibilityNextMarker:(id)arg1 ;
-(id)_accessibilityPreviousMarker:(id)arg1 ;
-(id)accessibilityStringForTextMarkers:(id)arg1 ;
-(id)_accessibilityObjectForTextMarker:(id)arg1 ;
-(CGRect)accessibilityBoundsForTextMarkers:(id)arg1 ;
-(id)accessibilityArrayOfTextForTextMarkers:(id)arg1 ;
-(id)_accessibilityDataDetectorScheme:(CGPoint)arg1 ;
-(bool)_accessibilityIsScrollable;
-(id)_accessibilityDOMAttributes;
-(NSRange)_accessibilitySelectedTextRange;
-(id)accessibilityMathEquation;
-(bool)_accessibilityShouldSpeakMathEquationTrait;
-(id)_accessibilityTextMarkerRange;
-(id)_accessibilityTextMarkerRangeForSelection;
-(NSRange)_accessibilitySelectedNSRangeForObject;
-(bool)_accessibilityIsFirstSibling;
-(bool)_accessibilityIsLastSibling;
-(void)_accessibilitySetSelectedTextRange:(NSRange)arg1 ;
-(void)accessibilityZoomInAtPoint:(CGPoint)arg1 ;
-(void)accessibilityZoomOutAtPoint:(CGPoint)arg1 ;
-(id)_accessibilityTextViewTextOperationResponder;
-(bool)_accessibilityShouldReleaseAfterUnregistration;
-(id)_accessibilityTextMarkerForPosition:(long long)arg1 ;
-(bool)_accessibilityScrollToVisible;
-(void)_accessibilityDecreaseSelection:(id)arg1 ;
-(void)_accessibilityIncreaseSelection:(id)arg1 ;
-(void)postFocusChangeNotification;
-(void)postSelectedTextChangeNotification;
-(void)postLayoutChangeNotification;
-(void)postLiveRegionChangeNotification;
-(void)postChildrenChangedNotification;
-(void)postLoadCompleteNotification;
-(void)postInvalidStatusChangedNotification;
-(id)ariaLandmarkRoleDescription;
-(void)_accessibilityUnregister;
-(bool)accessibilityCanFuzzyHitTest;
-(id)accessibilityPostProcessHitTest:(CGPoint)arg1 ;
-(unsigned long long)_axLinkTrait;
-(unsigned long long)_axVisitedTrait;
-(unsigned long long)_axHeaderTrait;
-(unsigned long long)_axContainedByListTrait;
-(unsigned long long)_axContainedByTableTrait;
-(unsigned long long)_axContainedByLandmarkTrait;
-(unsigned long long)_axWebContentTrait;
-(unsigned long long)_axSecureTextFieldTrait;
-(unsigned long long)_axTextEntryTrait;
-(unsigned long long)_axHasTextCursorTrait;
-(unsigned long long)_axTextOperationsAvailableTrait;
-(unsigned long long)_axImageTrait;
-(unsigned long long)_axTabButtonTrait;
-(unsigned long long)_axButtonTrait;
-(unsigned long long)_axToggleTrait;
-(unsigned long long)_axPopupButtonTrait;
-(unsigned long long)_axRadioButtonTrait;
-(unsigned long long)_axStaticTextTrait;
-(unsigned long long)_axAdjustableTrait;
-(unsigned long long)_axMenuItemTrait;
-(unsigned long long)_axSelectedTrait;
-(unsigned long long)_axNotEnabledTrait;
-(id)_accessibilityWebDocumentView;
-(NSRange)accessibilityRowRange;
-(id)accessibilityPlaceholderValue;
-(id)accessibilityURL;
-(id)accessibilitySpeechHint;
-(id)accessibilityMathRootIndexObject;
-(id)accessibilityMathRadicandObject;
-(id)accessibilityMathNumeratorObject;
-(id)accessibilityMathDenominatorObject;
-(id)accessibilityMathBaseObject;
-(id)accessibilityMathSubscriptObject;
-(id)accessibilityMathSuperscriptObject;
-(id)accessibilityMathUnderObject;
-(id)accessibilityMathOverObject;
-(id)accessibilityMathPostscripts;
-(id)accessibilityMathPrescripts;
-(id)accessibilityMathFencedOpenString;
-(id)accessibilityMathFencedCloseString;
-(bool)accessibilityIsMathTopObject;
-(id)accessibilityMathType;
@end

