/*
* This header is generated by classdump-dyld 0.2
* on Saturday, June 28, 2014 at 1:57:54 AM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <SpringBoard/SBPresentingDelegate.h>
#import <SpringBoard/SBControlCenterObserver.h>
#import <SpringBoardUIServices/SBUIBiometricEventObserver.h>

@protocol SBCoordinatedPresenting;
@class SBLockScreenView, SBLockScreenHintTapGestureRecognizer, SBLockScreenHintLongPressGestureRecognizer, SBLockScreenHintPanGestureRecognizer, NSMutableSet, NSMapTable, NSDate;

@interface SBLockScreenHintManager : NSObject <UIGestureRecognizerDelegate, SBPresentingDelegate, SBControlCenterObserver, SBUIBiometricEventObserver> {

	BOOL _gestureHandlingEnabled;
	BOOL _guestGestureActive;
	BOOL _didEvaluatePressDelay;
	BOOL _fingerOnMesa;
	SBLockScreenView* _lockScreenView;
	SBLockScreenHintTapGestureRecognizer* _tapGesture;
	SBLockScreenHintLongPressGestureRecognizer* _longPressGesture;
	SBLockScreenHintPanGestureRecognizer* _panGesture;
	NSMutableSet* _gestures;
	NSMapTable* _controllersToGuestGestures;
	NSMapTable* _controllersToConflictingGuestGestures;
	int _gestureState;
	<SBCoordinatedPresenting>* _activeController;
	unsigned _activeHintEdge;
	NSDate* _initialTouchTimeStamp;
	CGPoint _initialPanLocationInViewSpace;

}

@property (nonatomic,retain) SBLockScreenView * lockScreenView;                                          //@synthesize lockScreenView=_lockScreenView - In the implementation block
@property (assign,getter=isGestureHandlingEnabled,nonatomic) BOOL gestureHandlingEnabled;                //@synthesize gestureHandlingEnabled=_gestureHandlingEnabled - In the implementation block
@property (nonatomic,retain) SBLockScreenHintTapGestureRecognizer * tapGesture;                          //@synthesize tapGesture=_tapGesture - In the implementation block
@property (nonatomic,retain) SBLockScreenHintLongPressGestureRecognizer * longPressGesture;              //@synthesize longPressGesture=_longPressGesture - In the implementation block
@property (nonatomic,retain) SBLockScreenHintPanGestureRecognizer * panGesture;                          //@synthesize panGesture=_panGesture - In the implementation block
@property (assign,nonatomic) CGPoint initialPanLocationInViewSpace;                                      //@synthesize initialPanLocationInViewSpace=_initialPanLocationInViewSpace - In the implementation block
@property (nonatomic,retain) NSMutableSet * gestures;                                                    //@synthesize gestures=_gestures - In the implementation block
@property (nonatomic,retain) NSMapTable * controllersToGuestGestures;                                    //@synthesize controllersToGuestGestures=_controllersToGuestGestures - In the implementation block
@property (nonatomic,retain) NSMapTable * controllersToConflictingGuestGestures;                         //@synthesize controllersToConflictingGuestGestures=_controllersToConflictingGuestGestures - In the implementation block
@property (assign,nonatomic) int gestureState;                                                           //@synthesize gestureState=_gestureState - In the implementation block
@property (nonatomic,retain) <SBCoordinatedPresenting> * activeController;                               //@synthesize activeController=_activeController - In the implementation block
@property (assign,nonatomic) unsigned activeHintEdge;                                                    //@synthesize activeHintEdge=_activeHintEdge - In the implementation block
@property (nonatomic,retain) NSDate * initialTouchTimeStamp;                                             //@synthesize initialTouchTimeStamp=_initialTouchTimeStamp - In the implementation block
@property (assign,getter=isGuestGestureActive,nonatomic) BOOL guestGestureActive;                        //@synthesize guestGestureActive=_guestGestureActive - In the implementation block
@property (assign,nonatomic) BOOL didEvaluatePressDelay;                                                 //@synthesize didEvaluatePressDelay=_didEvaluatePressDelay - In the implementation block
@property (assign,getter=isFingerOnMesa,nonatomic) BOOL fingerOnMesa;                                    //@synthesize fingerOnMesa=_fingerOnMesa - In the implementation block
-(id)lockScreenView;
-(id)_lockScreenViewController;
-(void)controlCenterWillPresent;
-(void)controlCenterDidDismiss;
-(void)setLockScreenView:(id)arg1 ;
-(void)removeCoordinatedPresentingController:(id)arg1 ;
-(void)addCoordinatedPresentingController:(id)arg1 ;
-(BOOL)presentingController:(id)arg1 gestureRecognizerShouldBegin:(id)arg2 ;
-(void)presentingControllerDidFinishPresentation:(id)arg1 ;
-(id)gestures;
-(BOOL)presentingController:(id)arg1 gestureRecognizer:(id)arg2 shouldReceiveTouch:(id)arg3 ;
-(void)presentingController:(id)arg1 willHandleGesture:(id)arg2 ;
-(void)presentingController:(id)arg1 conflictingGestureDidBegin:(id)arg2 ;
-(void)presentingController:(id)arg1 conflictingGestureDidEnd:(id)arg2 ;
-(void)controlCenterWillBeginTransition;
-(void)controlCenterDidFinishTransition;
-(void)notificationCenterDidDismiss:(id)arg1 ;
-(void)cameraDidShow:(id)arg1 ;
-(void)cameraDidHide:(id)arg1 ;
-(void)_handlePress:(id)arg1 ;
-(void)setGestureHandlingEnabled:(BOOL)arg1 ;
-(void)_installLocalGestures;
-(id)activeController;
-(void)_resetGestureSequence;
-(void)_removeAllGestures;
-(void)setFingerOnMesa:(BOOL)arg1 ;
-(BOOL)_hasCoordinatedPresentingController:(id)arg1 ;
-(id)_controller:(id)arg1 managedGestureLikeGesture:(id)arg2 ;
-(void)_resetInitialPanLocation;
-(void)_setLocalGesture:(id)arg1 enabled:(BOOL)arg2 ;
-(id)_lockScreenCameraController;
-(BOOL)_isCameraVisible;
-(id)_topPresentedViewControllerFromViewController:(id)arg1 ;
-(id)_viewForGestures;
-(CGRect)_cameraGrabberZone;
-(id)_lockScreenNotificationListController;
-(CGRect)_topGrabberZone;
-(CGRect)_bottomGrabberZone;
-(id)_lockScreenNotificationListView;
-(BOOL)_canControllerWithIdentifier:(int)arg1 becomeActiveWithTouchAtLocation:(CGPoint)arg2 ;
-(id)_coordinatedPresentingControllerWithIdentifier:(int)arg1 ;
-(BOOL)_isPresentationEnabledForController:(id)arg1 locationInWindow:(CGPoint)arg2 ;
-(BOOL)_isBounceEnabledForController:(id)arg1 locationInWindow:(CGPoint)arg2 ;
-(void)setInitialPanLocationInViewSpace:(CGPoint)arg1 ;
-(void)_tapPeriodElapsed;
-(void)setGestureState:(int)arg1 ;
-(void)setActiveController:(id)arg1 ;
-(void)setActiveHintEdge:(unsigned)arg1 ;
-(void)setInitialTouchTimeStamp:(id)arg1 ;
-(BOOL)isGestureHandlingEnabled;
-(void)_reenableGestures;
-(id)_controllerForGesture:(id)arg1 ;
-(int)_compareControllerWithIdentifier:(int)arg1 withControllerWithIdentifier:(int)arg2 ;
-(BOOL)_doesController:(id)arg1 manageGestureLikeGesture:(id)arg2 ;
-(BOOL)_isController:(id)arg1 excludingViewsUnderGesture:(id)arg2 ;
-(BOOL)isFingerOnMesa;
-(void)_initializeInitialTouchTimeStamp;
-(unsigned)activeHintEdge;
-(void)_abortCurrentAnimationForController:(id)arg1 ;
-(id)tapGesture;
-(void)_resetGestureSequenceAndReenableGestures;
-(void)_updateControllerPresentationForTapOrPress:(id)arg1 withAnimation:(/*^block*/ id)arg2 abortingCurrentAnimation:(BOOL)arg3 ;
-(double)_elapsedTapPeriod;
-(BOOL)isGuestGestureActive;
-(id)_tapGestureForActiveController;
-(BOOL)_hasTapPeriodElapsed;
-(void)_resetGesture:(id)arg1 ;
-(void)_cancelGuestGesturesExcludingController:(id)arg1 ;
-(void)_updateControllerPresentationForTap;
-(void)_updateControllerPresentationForPress:(BOOL)arg1 ;
-(void)_dismissControllerForPress:(BOOL)arg1 ;
-(void)_resetGesture:(id)arg1 forController:(id)arg2 ;
-(void)_updateGrabberStateForControllerIfNecessary:(id)arg1 ;
-(void)_beginControllerPresentationForPan;
-(void)_updateControllerPresentationForPan;
-(void)_endControllerPresentationForPan;
-(BOOL)_hintGestureShouldBegin:(id)arg1 ;
-(void)setGuestGestureActive:(BOOL)arg1 ;
-(void)_presentingController:(id)arg1 willHandleTap:(id)arg2 ;
-(void)_presentingController:(id)arg1 willHandlePan:(id)arg2 ;
-(void)setTapGesture:(id)arg1 ;
-(id)longPressGesture;
-(void)setLongPressGesture:(id)arg1 ;
-(id)panGesture;
-(void)setPanGesture:(id)arg1 ;
-(CGPoint)initialPanLocationInViewSpace;
-(void)setGestures:(id)arg1 ;
-(id)controllersToGuestGestures;
-(void)setControllersToGuestGestures:(id)arg1 ;
-(id)controllersToConflictingGuestGestures;
-(void)setControllersToConflictingGuestGestures:(id)arg1 ;
-(id)initialTouchTimeStamp;
-(BOOL)didEvaluatePressDelay;
-(void)setDidEvaluatePressDelay:(BOOL)arg1 ;
-(void)_handlePan:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)_handleTap:(id)arg1 ;
-(void)biometricEventMonitor:(id)arg1 handleBiometricEvent:(unsigned)arg2 ;
-(int)gestureState;
@end

