/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:51 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>
#import <iWorkImport/TSSPropertySource.h>
#import <iWorkImport/TSSStyleClient.h>
#import <iWorkImport/TSKDocumentObject.h>
#import <iWorkImport/TSDDrawableContainerInfo.h>
#import <iWorkImport/TSKTransformableObject.h>

@class KNSlideNode, KNSlideStyle, KNTransition, KNSlideBackgroundInfo, NSArray, KNTitlePlaceholderInfo, KNBodyPlaceholderInfo, KNObjectPlaceholderInfo, KNSlideNumberPlaceholderInfo, NSMutableArray, NSMutableDictionary, TSDGuideStorage, TSDFill, NSDictionary, TSDInfoGeometry;

@interface KNAbstractSlide : TSPObject <TSSPropertySource, TSSStyleClient, TSKDocumentObject, TSDDrawableContainerInfo, TSKTransformableObject> {

	KNSlideNode* mSlideNode;
	KNSlideStyle* mStyle;
	KNTransition* mTransition;
	KNSlideBackgroundInfo* mBackground;
	NSArray* mChildInfos;
	KNTitlePlaceholderInfo* mTitlePlaceholder;
	KNBodyPlaceholderInfo* mBodyPlaceholder;
	KNObjectPlaceholderInfo* mObjectPlaceholder;
	KNSlideNumberPlaceholderInfo* mSlideNumberPlaceholder;
	bool mInDocument;
	NSMutableArray* mStaticGuides;
	NSMutableDictionary* mPlaceholdersForTags;
	TSDGuideStorage* mUserDefinedGuideStorage;

}

@property (assign,nonatomic,@dynamic) KNSlideNode * slideNode; 
@property (nonatomic,retain) KNSlideStyle * style; 
@property (nonatomic,retain) KNTransition * transition; 
@property (nonatomic,readonly) TSDFill * backgroundFill; 
@property (nonatomic,retain) KNSlideBackgroundInfo * background; 
@property (nonatomic,retain) KNTitlePlaceholderInfo * titlePlaceholder; 
@property (nonatomic,retain) KNBodyPlaceholderInfo * bodyPlaceholder; 
@property (nonatomic,retain) KNObjectPlaceholderInfo * objectPlaceholder; 
@property (nonatomic,retain) KNSlideNumberPlaceholderInfo * slideNumberPlaceholder; 
@property (nonatomic,readonly) KNSlideNode * slideNode; 
@property (nonatomic,readonly) NSArray * infosToDisplay; 
@property (nonatomic,readonly) bool inDocument; 
@property (getter=isTitleVisible,nonatomic,readonly) bool titleVisible; 
@property (getter=isBodyVisible,nonatomic,readonly) bool bodyVisible; 
@property (getter=isObjectVisible,nonatomic,readonly) bool objectVisible; 
@property (getter=isSlideNumberVisible,nonatomic,readonly) bool slideNumberVisible; 
@property (nonatomic,copy) NSDictionary * placeholdersForTags; 
@property (nonatomic,readonly) NSArray * staticGuides; 
@property (nonatomic,retain) TSDGuideStorage * userDefinedGuideStorage; 
@property (nonatomic,readonly) NSArray * alignmentGuides; 
@property (nonatomic,readonly) NSArray * alignmentGuidesForEditing; 
@property (nonatomic,readonly) NSArray * builds; 
@property (nonatomic,readonly) NSArray * buildChunks; 
@property (assign,nonatomic) bool matchesObjectPlaceholderGeometry; 
@property (nonatomic,copy) TSDInfoGeometry * geometry; 
@property (assign,nonatomic) NSObject<TSDContainerInfo> * parentInfo; 
@property (assign,nonatomic) TSPObject<TSDOwningAttachment> * owningAttachment; 
@property (nonatomic,readonly) TSPObject<TSDOwningAttachment> * owningAttachmentNoRecurse; 
@property (getter=isFloatingAboveText,nonatomic,readonly) bool floatingAboveText; 
@property (getter=isAnchoredToText,nonatomic,readonly) bool anchoredToText; 
@property (getter=isInlineWithText,nonatomic,readonly) bool inlineWithText; 
@property (getter=isAttachedToBodyText,nonatomic,readonly) bool attachedToBodyText; 
+(id)newObjectForUnarchiver:(id)arg1 ;
+(id)parentSlideForInfo:(id)arg1 ;
-(void)saveToArchive:(SlideArchive*)arg1 archiver:(id)arg2 ;
-(void)loadFromArchive:(const SlideArchive*)arg1 unarchiver:(id)arg2 ;
-(void)p_updateBuildsReplacingPlaceholder:(id)arg1 withPlaceholder:(id)arg2 ;
-(void)setSlideNode:(id)arg1 ;
-(id)copyWithContext:(id)arg1 ;
-(id)referencedStyles;
-(void)replaceReferencedStylesUsingBlock:(/*^block*/ id)arg1 ;
-(int)intValueForProperty:(int)arg1 ;
-(bool)isThemeContent;
-(id)parentInfo;
-(id)boxedObjectForProperty:(int)arg1 ;
-(float)floatValueForProperty:(int)arg1 ;
-(bool)containsProperty:(int)arg1 ;
-(Class)repClass;
-(id)owningAttachment;
-(id)childInfos;
-(id)commandForTransformingByTransform:(CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(CGRect)arg4 ;
-(void)setParentInfo:(id)arg1 ;
-(void)setOwningAttachment:(id)arg1 ;
-(id)owningAttachmentNoRecurse;
-(bool)isFloatingAboveText;
-(bool)isAnchoredToText;
-(bool)isInlineWithText;
-(bool)isAttachedToBodyText;
-(id)objectForProperty:(int)arg1 ;
-(void)adoptStylesheet:(id)arg1 withMapper:(id)arg2 ;
-(void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2 ;
-(void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2 ;
-(void)willBeRemovedFromDocumentRoot:(id)arg1 ;
-(void)wasRemovedFromDocumentRoot:(id)arg1 ;
-(id)infosToDisplay;
-(void)setChildInfos:(id)arg1 ;
-(void)addChildInfo:(id)arg1 ;
-(void)insertChildInfo:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)insertChildInfo:(id)arg1 below:(id)arg2 ;
-(void)insertChildInfo:(id)arg1 above:(id)arg2 ;
-(void)moveChildren:(id)arg1 toIndexes:(id)arg2 ;
-(void)removeChildInfo:(id)arg1 ;
-(void)replaceChildInfo:(id)arg1 with:(id)arg2 ;
-(double)CGFloatValueForProperty:(int)arg1 ;
-(double)doubleValueForProperty:(int)arg1 ;
-(id)alignmentGuides;
-(id)alignmentGuidesForEditing;
-(id)backgroundFill;
-(void)insertDrawable:(id)arg1 atIndex:(unsigned long long)arg2 dolcContext:(id)arg3 ;
-(void)insertDrawables:(id)arg1 atIndex:(unsigned long long)arg2 dolcContext:(id)arg3 ;
-(id)titlePlaceholder;
-(id)bodyPlaceholder;
-(id)objectPlaceholder;
-(id)slideNode;
-(void)removeTagForDrawable:(id)arg1 ;
-(id)userDefinedGuideStorage;
-(id)defaultTitlePlaceholderWithContext:(id)arg1 ;
-(id)defaultBodyPlaceholderWithContext:(id)arg1 ;
-(id)defaultSlideNumberPlaceholderWithContext:(id)arg1 ;
-(id)placeholderWithPlaceholder:(id)arg1 context:(id)arg2 placeholderClass:(Class)arg3 ;
-(id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(long long)arg4 textPresetStyle:(id)arg5 listStyle:(id)arg6 layoutPropertyMap:(id)arg7 paragraphPropertyMap:(id)arg8 listPropertyMap:(id)arg9 context:(id)arg10 ;
-(bool)isBodyVisible;
-(bool)isObjectVisible;
-(bool)isSlideNumberVisible;
-(void)setPlaceholdersForTags:(id)arg1 ;
-(id)infoForTag:(id)arg1 ;
-(id)placeholdersForTags;
-(id)tagForInfo:(id)arg1 ;
-(void)setUserDefinedGuideStorage:(id)arg1 ;
-(id)initWithSlideNode:(id)arg1 context:(id)arg2 ;
-(void)addDrawable:(id)arg1 dolcContext:(id)arg2 ;
-(void)removeDrawable:(id)arg1 ;
-(bool)canMoveDrawables:(id)arg1 toIndexes:(id)arg2 ;
-(void)performBlockOnInfos:(/*^block*/ id)arg1 ;
-(id)staticGuides;
-(void)addStaticGuide:(id)arg1 ;
-(id)defaultTitlePlaceholder;
-(id)defaultBodyPlaceholder;
-(id)defaultSlideNumberPlaceholder;
-(id)placeholderWithPlaceholder:(id)arg1 context:(id)arg2 ;
-(id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(long long)arg4 textPresetIndex:(long long)arg5 layoutPropertyMap:(id)arg6 paragraphPropertyMap:(id)arg7 listPropertyMap:(id)arg8 context:(id)arg9 ;
-(id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(long long)arg4 textPresetStyle:(id)arg5 layoutPropertyMap:(id)arg6 paragraphPropertyMap:(id)arg7 listPropertyMap:(id)arg8 context:(id)arg9 ;
-(void)setTitlePlaceholder:(id)arg1 ;
-(void)setBodyPlaceholder:(id)arg1 ;
-(void)setObjectPlaceholder:(id)arg1 ;
-(void)setSlideNumberPlaceholder:(id)arg1 ;
-(void)setInfo:(id)arg1 forSageTag:(id)arg2 ;
-(bool)infoExistsForTag:(id)arg1 ;
-(bool)infoIsPlaceholder:(id)arg1 ;
-(id)builds;
-(id)buildChunks;
-(id)infoCorrespondingToInfo:(id)arg1 ;
-(void)dealloc;
-(void)setStyle:(id)arg1 ;
-(id)style;
-(void)setTransition:(id)arg1 ;
-(id)transition;
-(id)initWithContext:(id)arg1 ;
-(bool)inDocument;
-(id)background;
-(void)setBackground:(id)arg1 ;
-(id)geometry;
-(void)setGeometry:(id)arg1 ;
-(id)childEnumerator;
-(bool)isTitleVisible;
-(id)slideNumberPlaceholder;
-(Class)layoutClass;
@end

