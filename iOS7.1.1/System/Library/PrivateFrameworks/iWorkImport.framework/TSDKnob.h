/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:39 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <iWorkImport/iWorkImport-Structs.h>
@class TSDRep, CALayer, TSDBezierPath, CAShapeLayer;

@interface TSDKnob : NSObject {

	int mType;
	CGPoint mPosition;
	bool mOffsetValid;
	CGPoint mOffset;
	double mRadius;
	unsigned long long mTag;
	TSDRep* mRep;
	bool mWorksWhenRepLocked;
	bool mWorksWhenInVersionBrowsingMode;
	bool mShouldDisplayDirectlyOverRep;
	CALayer* mLayer;
	TSDBezierPath* mHitRegionPath;
	CAShapeLayer* mHitRegionLayer;

}

@property (assign,nonatomic) int type; 
@property (assign,nonatomic) CGPoint position; 
@property (assign,nonatomic) bool offsetValid; 
@property (assign,nonatomic) CGPoint offset; 
@property (assign,nonatomic) double radius; 
@property (assign,nonatomic) unsigned long long tag; 
@property (nonatomic,readonly) CALayer * layer; 
@property (nonatomic,copy) TSDBezierPath * hitRegionPath; 
@property (nonatomic,readonly) TSDRep * rep; 
@property (assign,nonatomic) bool worksWhenRepLocked; 
@property (assign,nonatomic) bool worksWhenInVersionBrowsingMode; 
@property (assign,nonatomic) bool shouldDisplayDirectlyOverRep; 
-(id)initWithType:(int)arg1 position:(CGPoint)arg2 radius:(double)arg3 tag:(unsigned long long)arg4 onRep:(id)arg5 ;
-(bool)isHitByUnscaledPoint:(CGPoint)arg1 andRep:(id)arg2 returningDistance:(double*)arg3 ;
-(void)updateHitRegionPathForRep:(id)arg1 ;
-(bool)overlapsWithKnob:(id)arg1 ;
-(bool)obscuresKnob:(id)arg1 ;
-(id)rep;
-(int)dragType;
-(void)setWorksWhenRepLocked:(bool)arg1 ;
-(void)setWorksWhenInVersionBrowsingMode:(bool)arg1 ;
-(void)setShouldDisplayDirectlyOverRep:(bool)arg1 ;
-(void)setHitRegionPath:(id)arg1 ;
-(bool)offsetValid;
-(void)setOffsetValid:(bool)arg1 ;
-(bool)shouldDisplayDirectlyOverRep;
-(double)i_rotationInDegreesForKnobOnRep:(id)arg1 ;
-(bool)worksWhenRepLocked;
-(bool)worksWhenInVersionBrowsingMode;
-(bool)isHitByUnscaledPoint:(CGPoint)arg1 andRep:(id)arg2 ;
-(id)hitRegionLayerForRep:(id)arg1 ;
-(CGRect)boundingBoxOfHitRegionForRep:(id)arg1 scale:(double)arg2 ;
-(id)hitRegionPath;
-(void)dealloc;
-(id)layer;
-(id)init;
-(id)description;
-(void)setType:(int)arg1 ;
-(int)type;
-(void)setTag:(unsigned long long)arg1 ;
-(void)setPosition:(CGPoint)arg1 ;
-(CGPoint)position;
-(unsigned long long)tag;
-(void)setOffset:(CGPoint)arg1 ;
-(CGPoint)offset;
-(id)knobImage;
-(void)setRadius:(double)arg1 ;
-(double)radius;
@end

