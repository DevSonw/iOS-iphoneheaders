/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:38 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDCanvasDelegate.h>
#import <iWorkImport/TSDErrorPresenter.h>
#import <iWorkImport/TSDModalOperationPresenter.h>
#import <iWorkImport/TSKChangeSourceObserver.h>
#import <CoreFoundation/NSCoding.h>
#import <iWorkImport/TSKScrollViewDelegate.h>
#import <iWorkImport/TSDBackgroundLayoutAndRenderStateDelegate.h>
#import <iWorkImport/TSDRepTrackerDelegateCreation.h>

@protocol TSDInteractiveCanvasControllerDelegate, TSDCanvasLayerHosting, TSDCanvasEditor, TSDRulerController, TSDEditor, TSDImageHUDController, TSDAnnotationHosting, TSDAnnotationPopoverController;
@class TSDCanvas, CALayer, TSDEditorController, TSDGuideController, TSDUserDefinedGuideController, NSObject, NSFormatter, NSMutableArray, TSDCanvasAnimation, TSDTrackerManipulatorCoordinator, TSDDynamicOperationController, TSDBackgroundLayoutAndRenderState, NSArray, TSDTileStorage, TSKDocumentRoot, TSPObjectContext, TSKCommandController, TSKChangeNotifier, TSKAccessController, TSDContainerRep, TSDCanvasView, TSDCanvasLayer, TSDGuideStorage, TSDLayoutController;

@interface TSDInteractiveCanvasController : NSObject <TSDCanvasDelegate, TSDErrorPresenter, TSDModalOperationPresenter, TSKChangeSourceObserver, NSCoding, TSKScrollViewDelegate, TSDBackgroundLayoutAndRenderStateDelegate, TSDRepTrackerDelegateCreation> {

	<TSDInteractiveCanvasControllerDelegate>* mDelegate;
	TSDCanvas* mCanvas;
	<TSDCanvasLayerHosting>* mLayerHost;
	CFDictionaryRef mContainerLayersByRep;
	CFDictionaryRef mRepLayersByRep;
	CFDictionaryRef mRepsByRepLayer;
	CFDictionaryRef mRepsByContainerLayer;
	CALayer* mRepContainerLayer;
	TSDEditorController* mEditorController;
	TSDGuideController* mGuideController;
	TSDUserDefinedGuideController* mUserDefinedGuideController;
	NSObject<TSDCanvasEditor>* mCanvasEditor;
	bool mHasBeenTornDown;
	bool mHadLayerHost;
	bool mLayerHostHasBeenTornDown;
	NSFormatter* mUnitFormatter;
	bool mResizeCanvasOnLayout;
	bool mCreateRepsForOffscreenLayouts;
	bool mShouldAutoscrollToSelectionAfterLayout;
	bool mSuppressAutozoomToSelectionAfterLayout;
	bool mShouldAnimateAutoscroll;
	bool mShouldCenterSelectionWhenAutoscrolling;
	CALayer* mOverlayLayer;
	bool mOverlayLayerSuppressed;
	CALayer* mPopoutLayer;
	NSMutableArray* mDecorators;
	bool mShowGrayOverlay;
	bool mInDynamicOperation;
	int mDynamicOperationCounter;
	bool mInReadMode;
	bool mInVersionBrowsingMode;
	CGColorRef mSelectionHighlightColor;
	bool mShowInvisibleObjects;
	TSDCanvasAnimation* mCurrentAnimation;
	TSDTrackerManipulatorCoordinator* mTMCoordinator;
	TSDDynamicOperationController* mDynOpController;
	NSObject<TSDRulerController>* mRulerController;
	bool mInspectorModeEnabled;
	NSMutableArray* mInspectorGestureRecognizersToReenable;
	/*^block*/ id mInspectorSingleTapBlock;
	CGPoint mLastTapPoint;
	CGRect mVisibleBoundsRectForTiling;
	CGRect mVisibleUnscaledRect;
	CGRect mUnobscuredScrollViewFrame;
	TSDBackgroundLayoutAndRenderState* mBackgroundLayoutAndRenderState;
	bool mLayoutAndRenderOnThreadDuringScroll;
	bool mTemporarilyDisabledLayoutAndRenderOnThreadDuringScroll;
	bool mCurrentlyScrolling;
	bool mAnimatingScroll;
	bool mSuppressedAutozoom;
	bool mTextGesturesInFlight;
	<TSDEditor>* mSelectionChangeNotificationDeferredEditor;
	bool mShouldAutoscrollToSelectionAfterGestures;
	bool mSuspendedLowPriorityThreadDispatcher;
	bool mCurrentlyWaitingOnThreadedLayoutAndRender;
	int mDisableThreadedLayoutAndRender;
	NSMutableArray* mHiddenTopLevelLayers;
	bool mShouldSuppressRendering;
	bool mSupportsBackgroundTileRendering;
	NSArray* mLayersWithZoomFadeAnimation;
	bool mDynamicallyZooming;
	double mDynamicViewScale;
	bool mUsesAlternateDrawableSelectionHighlight;
	double mTargetPointSize;
	bool mAnimatingViewScale;
	bool mSuppressingKeyboard;
	NSObject<TSDImageHUDController>* mImageHUDController;
	long long mImageHUDLock;
	NSObject<TSDImageHUDController>* mIAHUDController;
	long long mIAHUDLock;
	TSDTileStorage* mTileStorage;
	CGPoint mZoomCenterInBounds;
	NSMutableArray* mBackgroundRenderingObjects;
	<TSDAnnotationHosting>* mDisplayedAnnotation;
	<TSDAnnotationPopoverController>* mAnnotationPopoverController;
	bool mShouldClipThemeContentToCanvas;
	bool mShowUserDefinedGuides;
	bool mPreventSettingNilEditorOnTextResponder;
	bool mShowsComments;

}

@property (nonatomic,readonly) TSDCanvas * canvas; 
@property (assign,nonatomic) <TSDCanvasLayerHosting> * layerHost; 
@property (assign,nonatomic) <TSDInteractiveCanvasControllerDelegate> * delegate; 
@property (nonatomic,readonly) TSKDocumentRoot * documentRoot; 
@property (nonatomic,readonly) <TSKDocumentRootProvider> * documentRootProvider; 
@property (nonatomic,readonly) TSPObjectContext * objectContext; 
@property (nonatomic,readonly) TSKCommandController * commandController; 
@property (nonatomic,readonly) TSKChangeNotifier * changeNotifier; 
@property (nonatomic,readonly) TSKAccessController * accessController; 
@property (assign,nonatomic) bool resizeCanvasOnLayout; 
@property (nonatomic,readonly) CGSize defaultMinimumUnscaledCanvasSize; 
@property (assign,nonatomic) NSObject<TSDRulerController> * rulerController; 
@property (nonatomic,readonly) TSDContainerRep * topLevelContainerRepForEditing; 
@property (nonatomic,readonly) bool inspectorModeEnabled; 
@property (nonatomic,readonly) bool animatingViewScale; 
@property (nonatomic,readonly) TSDEditorController * editorController; 
@property (assign,nonatomic) bool preventSettingNilEditorOnTextResponder; 
@property (nonatomic,retain) NSObject<TSDCanvasEditor> * canvasEditor; 
@property (assign,nonatomic) bool createRepsForOffscreenLayouts; 
@property (assign,nonatomic) bool layoutAndRenderOnThreadDuringScroll; 
@property (nonatomic,readonly) bool currentlyWaitingOnThreadedLayoutAndRender; 
@property (nonatomic,readonly) bool currentlyScrolling; 
@property (assign,nonatomic) bool shouldAutoscrollToSelectionAfterLayout; 
@property (assign,nonatomic) bool suppressAutozoomToSelectionAfterLayout; 
@property (assign,nonatomic) bool textGesturesInFlight; 
@property (assign,nonatomic) bool shouldSuppressRendering; 
@property (nonatomic,readonly) TSDCanvasView * canvasView; 
@property (nonatomic,readonly) TSDCanvasLayer * canvasLayer; 
@property (nonatomic,readonly) double defaultViewScale; 
@property (assign,nonatomic) double viewScale; 
@property (nonatomic,readonly) double currentViewScale; 
@property (nonatomic,readonly) double fitWidthViewScale; 
@property (nonatomic,readonly) CGSize canvasScrollingOutset; 
@property (assign,nonatomic) CGRect unobscuredScrollViewFrame; 
@property (nonatomic,readonly) CGSize sizeOfScrollViewEnclosingCanvas; 
@property (assign,nonatomic) bool shouldClipThemeContentToCanvas; 
@property (nonatomic,readonly) TSDGuideController * guideController; 
@property (nonatomic,readonly) TSDUserDefinedGuideController * userDefinedGuideController; 
@property (assign,nonatomic) bool shouldShowUserDefinedGuides; 
@property (nonatomic,readonly) TSDGuideStorage * guideStorage; 
@property (nonatomic,copy) NSArray * infosToDisplay; 
@property (assign,nonatomic) CGColorRef selectionHighlightColor; 
@property (nonatomic,readonly) CGRect visibleBoundsRect; 
@property (nonatomic,readonly) CGRect visibleBoundsRectForTiling; 
@property (nonatomic,readonly) CGRect visibleBoundsRectUsingSizeOfEnclosingScrollView; 
@property (nonatomic,readonly) CGRect visibleUnscaledRect; 
@property (nonatomic,readonly) CGRect visibleUnscaledRectForCanvasUI; 
@property (nonatomic,readonly) CGRect visibleUnscaledRectForAutoscroll; 
@property (nonatomic,readonly) CGRect visibleUnscaledRectValidWhileZooming; 
@property (nonatomic,readonly) CGRect visibleUnscaledRectForScrollingAutomatically; 
@property (nonatomic,readonly) TSDLayoutController * layoutController; 
@property (nonatomic,readonly) CALayer * repContainerLayer; 
@property (nonatomic,readonly) NSArray * additionalLayersUnderRepLayers; 
@property (assign,nonatomic) bool usesAlternateDrawableSelectionHighlight; 
@property (nonatomic,readonly) CALayer * overlayLayer; 
@property (assign,nonatomic) bool overlayLayerSuppressed; 
@property (assign,nonatomic) bool showGrayOverlay; 
@property (assign,nonatomic) bool showInvisibleObjects; 
@property (assign,nonatomic) bool showsComments; 
@property (nonatomic,readonly) <TSDAnnotationHosting> * displayedAnnotation; 
@property (nonatomic,readonly) bool displayedAnnotationPresentedPinned; 
@property (nonatomic,readonly) CGSize annotationPopoverSize; 
@property (nonatomic,readonly) int annotationPreferredRectEdge; 
@property (nonatomic,readonly) TSDDynamicOperationController * dynamicOperationController; 
@property (nonatomic,readonly) TSDTrackerManipulatorCoordinator * tmCoordinator; 
@property (assign,nonatomic) bool inReadMode; 
@property (assign,nonatomic) bool inVersionBrowsingMode; 
@property (assign,nonatomic) bool supportsBackgroundTileRendering; 
@property (assign,nonatomic) CGPoint lastTapPoint; 
@property (nonatomic,readonly) id canvasReferenceController; 
@property (assign) CGRect p_visibleBoundsRectForTiling; 
@property (assign) CGRect p_visibleUnscaledRect; 
+(bool)selectorIsActionMethod:(SEL)arg1 ;
+(double)smallRepOutsetForHitTesting;
+(id)keyPathsForValuesAffectingDocumentRoot;
+(id)keyPathsForValuesAffectingEditorController;
+(id)keyPathsForValuesAffectingViewScale;
+(id)keyPathsForValuesAffectingCurrentViewScale;
-(id)guideStorage;
-(id)changeNotifier;
-(id)accessController;
-(double)viewScale;
-(bool)isCanvasInteractive;
-(CGPoint)convertBoundsToUnscaledPoint:(CGPoint)arg1 ;
-(void)invalidateLayers;
-(CGRect)visibleBoundsRectUsingSizeOfEnclosingScrollView;
-(CGRect)convertBoundsToUnscaledRect:(CGRect)arg1 ;
-(id)layerForRep:(id)arg1 ;
-(CGRect)convertUnscaledToBoundsRect:(CGRect)arg1 ;
-(bool)currentlyScrolling;
-(bool)isPrinting;
-(id)editorController;
-(bool)currentlyWaitingOnThreadedLayoutAndRender;
-(id)canvasEditor;
-(void)layoutInvalidated;
-(id)hitRep:(CGPoint)arg1 ;
-(id)commandController;
-(CGRect)visibleBoundsRect;
-(id)canvasView;
-(id)layoutController;
-(CGPoint)convertUnscaledToBoundsPoint:(CGPoint)arg1 ;
-(void)discardRepForClassChange:(id)arg1 ;
-(bool)shouldLayoutTilingLayer:(id)arg1 ;
-(CGRect)visibleBoundsForTilingLayer:(id)arg1 ;
-(bool)isInDynamicOperation;
-(void)beginDynamicOperation;
-(void)endDynamicOperation;
-(id)layoutForInfo:(id)arg1 ;
-(void)deselectAll:(id)arg1 ;
-(id)repForInfo:(id)arg1 createIfNeeded:(bool)arg2 ;
-(id)repsForInfo:(id)arg1 ;
-(id)layoutsForInfo:(id)arg1 ;
-(id)imageHUDController;
-(id)repForInfo:(id)arg1 ;
-(void)backgroundLayoutAndRenderState:(id)arg1 performWorkInBackgroundTilingOnly:(bool)arg2 ;
-(void)backgroundLayoutAndRenderStateDidPerformBackgroundWork:(id)arg1 ;
-(void)p_rulerUnitsDidChangeNotification:(id)arg1 ;
-(void)p_annotationAuthorNameDidChange:(id)arg1 ;
-(void)p_willEnterForeground:(id)arg1 ;
-(void)addCommonObservers;
-(void)setP_visibleBoundsRectForTiling:(CGRect)arg1 ;
-(void)setP_visibleUnscaledRect:(CGRect)arg1 ;
-(void)removeCommonObservers;
-(void)teardownBackgroundRendering;
-(void)teardownCanvasEditor;
-(id)layerHost;
-(id)canvasLayer;
-(bool)resizeCanvasOnLayout;
-(void)p_updateCanvasSizeFromLayouts;
-(void)p_updateLayersFromReps;
-(id)dynamicOperationController;
-(void)presentError:(id)arg1 completionHandler:(/*^block*/ id)arg2 ;
-(void)presentErrors:(id)arg1 withLocalizedDescription:(id)arg2 completionHandler:(/*^block*/ id)arg3 ;
-(void)beginModalOperationWithLocalizedMessage:(id)arg1 progress:(id)arg2 cancelHandler:(/*^block*/ id)arg3 ;
-(void)endModalOperation;
-(void)p_editorControllerDidChangeTextInputEditor:(id)arg1 ;
-(void)p_editorControllerDidChangeCurrentEditors:(id)arg1 ;
-(void)p_editorControllerSelectionDidChange:(id)arg1 ;
-(void)p_editorControllerSelectionDidChangeAndWantsKeyboard:(id)arg1 ;
-(id)newCanvasEditor;
-(void)p_layoutWithReadLock;
-(id)beginEditingRep:(id)arg1 ;
-(bool)p_endEditingToBeginEditingRep:(id)arg1 ;
-(id)beginEditingRep:(id)arg1 clearingSelection:(bool)arg2 withEditorProvider:(/*^block*/ id)arg3 ;
-(void)zoomWithAnimationToUnscaledRect:(CGRect)arg1 ;
-(CGRect)visibleUnscaledRect;
-(id)beginEditingRepForInfo:(id)arg1 ;
-(id)infoForModel:(id)arg1 withSelection:(id)arg2 ;
-(void)scrollToSelection:(id)arg1 onModel:(id)arg2 ;
-(void)p_scrollModelToVisible:(id)arg1 withSelection:(id)arg2 ;
-(id)infoToScrollToForModel:(id)arg1 withSelection:(id)arg2 ;
-(id)layoutForInfoNearestVisibleRect:(id)arg1 intersectingSelection:(id)arg2 ;
-(id)validatedLayoutForInfo:(id)arg1 ;
-(void)scrollRectToVisibleWithSelectionOutset:(CGRect)arg1 animated:(bool)arg2 ;
-(id)p_setSelection:(id)arg1 onInfo:(id)arg2 withFlags:(unsigned long long)arg3 ;
-(void)scrollToSelection:(id)arg1 onModel:(id)arg2 scrollImmediately:(bool)arg3 ;
-(CGRect)scrollFocusRectForModel:(id)arg1 withSelection:(id)arg2 ;
-(void)p_autoscrollToSelection:(id)arg1 withInfo:(id)arg2 isInitialSelection:(bool)arg3 focusRect:(CGRect)arg4 scrollImmediately:(bool)arg5 skipZoom:(bool)arg6 ;
-(void)p_scrollToPrimarySelectionForEditor:(id)arg1 skipZoom:(bool)arg2 ;
-(void)scrollToPrimarySelectionForEditor:(id)arg1 ;
-(void)p_syncWithLayoutThread;
-(void)invalidateReps;
-(void)invalidateVisibleBounds;
-(void)p_editorDidChangeSelection:(id)arg1 withSelectionFlags:(unsigned long long)arg2 ;
-(void)p_editorDoneChangingSelection:(id)arg1 withFlags:(unsigned long long)arg2 ;
-(void)p_editorDoneChangingSelection:(id)arg1 ;
-(bool)shouldResizeCanvasToScrollView;
-(CGPoint)clampedUnscaledContentOffset:(CGPoint)arg1 forViewScale:(double)arg2 ;
-(void)animateToViewScale:(double)arg1 contentOffset:(CGPoint)arg2 duration:(double)arg3 orientation:(long long)arg4 ;
-(CGRect)unobscuredScrollViewFrame;
-(void)setViewScale:(double)arg1 andScrollViewFrame:(CGRect)arg2 maintainPosition:(bool)arg3 animated:(bool)arg4 ;
-(id)displayedAnnotation;
-(CGRect)annotationRectInParentView;
-(CGRect)unobscuredFrameOfView:(id)arg1 ;
-(void)setUnobscuredScrollViewFrame:(CGRect)arg1 ;
-(CGRect)visibleUnscaledRectForScrollingAutomatically;
-(CGRect)p_outsetSelectionRect:(CGRect)arg1 ;
-(CGSize)sizeOfScrollViewEnclosingCanvas;
-(CGColorRef)newDefaultSelectionHighlightColor;
-(void)i_invalidateSelectionHighlightLayers;
-(id)rulerController;
-(bool)spellCheckingSupported;
-(bool)spellCheckingSuppressed;
-(bool)isPrintingCanvas;
-(bool)shouldShowTextOverflowGlyphs;
-(bool)shouldShowInstructionalText;
-(id)userDefinedGuideController;
-(bool)shouldShowUserDefinedGuides;
-(void)setShouldShowUserDefinedGuides:(bool)arg1 ;
-(id)infosToDisplay;
-(bool)p_shouldLayoutAndRenderOnThread;
-(void)p_accquireLockAndPerformAction:(/*^block*/ id)arg1 ;
-(id)p_backgroundLayoutAndRenderState;
-(id)repForLayout:(id)arg1 ;
-(void)i_layout;
-(id)p_repForLayout:(id)arg1 createIfNeeded:(bool)arg2 ;
-(void)recreateAllLayoutsAndReps;
-(CGRect)p_visibleBoundsRectUsingSizeOfEnclosingScrollView:(bool)arg1 ;
-(CGRect)p_visibleBoundsRectForTiling;
-(CGRect)p_calculateVisibleBoundsRectForTiling;
-(CGRect)p_visibleUnscaledRect;
-(CGRect)p_calculateVisibleUnscaledRect;
-(id)unitFormatter;
-(id)unitStringForAngle:(double)arg1 ;
-(id)topLevelRepsForHitTesting;
-(id)topLevelContainerRepForEditing;
-(id)hitRep:(CGPoint)arg1 passingTest:(/*^block*/ id)arg2 ;
-(void)p_recursiveHitKnobAtPoint:(CGPoint)arg1 inRep:(id)arg2 minDistance:(double*)arg3 hitKnob:(id*)arg4 hitRep:(id*)arg5 ;
-(id)layoutsForModel:(id)arg1 withSelection:(id)arg2 ;
-(id)layoutsForInfo:(id)arg1 intersectingSelection:(id)arg2 ;
-(bool)shouldPopKnobsOutsideEnclosingScrollView;
-(id)objectContext;
-(void)invalidateComments;
-(bool)showsComments;
-(void)setShowsComments:(bool)arg1 ;
-(bool)i_inPrintPreviewMode;
-(void)hideDisplayedAnnotation;
-(bool)displayedAnnotationPresentedPinned;
-(CGSize)annotationPopoverSize;
-(bool)selectionContainsOnlyInfosOnCanvas:(id)arg1 model:(id)arg2 ;
-(void)showAnnotation:(id)arg1 model:(id)arg2 selection:(id)arg3 beginEditing:(bool)arg4 pinned:(bool)arg5 ;
-(void)nextAnnotation:(id)arg1 ;
-(void)previousAnnotation:(id)arg1 ;
-(id)p_decorators;
-(void)updateSelectionForTapOnSelectedRep:(id)arg1 ;
-(bool)handleSingleTapAtPoint:(CGPoint)arg1 ;
-(void)updateSelectionForTapAtPoint:(CGPoint)arg1 extendingSelection:(bool)arg2 ;
-(bool)handleDoubleTapAtPoint:(CGPoint)arg1 ;
-(void)p_drawLayerWithReadLock:(id)arg1 ;
-(CGRect)visibleBoundsRectForTiling;
-(bool)supportsBackgroundTileRendering;
-(bool)canDrawTilingLayerInBackground:(id)arg1 ;
-(void)i_viewScrollDidChange;
-(void)p_viewScrollingEnded;
-(void)beginScrollingOperation;
-(void)makeEditorPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)setAnimation:(id)arg1 forLayer:(id)arg2 forKey:(id)arg3 ;
-(void)p_beginZoomingOperation;
-(void)p_endZoomingOperation;
-(void)endScrollingOperation;
-(void)p_setTargetPointSize:(double)arg1 ;
-(void)setNeedsDisplayOnLayer:(id)arg1 ;
-(void)setNeedsDisplayInRect:(CGRect)arg1 onLayer:(id)arg2 ;
-(CGSize)defaultMinimumUnscaledCanvasSize;
-(CGSize)canvasScrollingOutset;
-(id)additionalLayersUnderRepLayers;
-(void)p_recursivelyUpdateLayerForRep:(id)arg1 accumulatingLayers:(id)arg2 andReps:(id)arg3 ;
-(bool)shouldClipThemeContentToCanvas;
-(void)p_discardLayer:(id)arg1 forRep:(id)arg2 ;
-(void)p_setupPopoutLayerForReps:(id)arg1 ;
-(bool)overlayLayerSuppressed;
-(id)p_overlayLayerForReps:(id)arg1 ;
-(void)i_drawRepWithReadLock:(id)arg1 inContext:(CGContextRef)arg2 forLayer:(id)arg3 ;
-(void)i_viewScrollingEnded;
-(void)scrollToPrimarySelection;
-(bool)p_shouldSuppressAutozoomForEditor:(id)arg1 ;
-(id)layoutForInfoNearestVisibleRect:(id)arg1 ;
-(bool)shouldZoomOnSelectionChange;
-(double)p_targetPointSize;
-(double)fitWidthViewScale;
-(CGRect)visibleUnscaledRectForAutoscroll;
-(bool)p_centerOnInitialSelection;
-(void)setViewScale:(double)arg1 contentOffset:(CGPoint)arg2 animated:(bool)arg3 ;
-(void)scrollRectToVisibleCenter:(CGRect)arg1 animated:(bool)arg2 onlyScrollNecessaryAxes:(bool)arg3 ;
-(void)i_viewWillBeginZooming;
-(void)viewDidEndZooming;
-(void)doubleTappedCanvasBackgroundAtPoint:(CGPoint)arg1 ;
-(id)repContainerLayer;
-(void)canvasLayoutInvalidated:(id)arg1 ;
-(void)canvasWillLayout:(id)arg1 ;
-(void)canvasDidValidateLayouts:(id)arg1 ;
-(void)canvasDidLayout:(id)arg1 ;
-(void)canvasDidValidateLayoutsWithDependencies:(id)arg1 ;
-(void)canvasDidUpdateVisibleBounds:(id)arg1 ;
-(void)canvasWillUpdateRepsFromLayouts:(id)arg1 ;
-(void)canvasDidUpdateRepsFromLayouts:(id)arg1 ;
-(CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(id)arg1 ;
-(id)additionalVisibleInfosForCanvas:(id)arg1 ;
-(void)canvas:(id)arg1 createdRep:(id)arg2 ;
-(void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2 ;
-(void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2 ;
-(void)i_layerHostHasBeenTornDown;
-(void)setLayerHost:(id)arg1 ;
-(void)addBackgroundRenderingObject:(id)arg1 ;
-(void)removeBackgroundRenderingObject:(id)arg1 ;
-(id)documentRootProvider;
-(bool)canZoomToCurrentSelection;
-(CGPoint)smartZoomCenterForNoSelection;
-(void)zoomToCurrentSelection;
-(void)scrollCurrentSelectionToVisible;
-(void)scrollSearchReferenceToVisible:(id)arg1 ;
-(void)setSelection:(id)arg1 onModel:(id)arg2 withFlags:(unsigned long long)arg3 ;
-(void)setShouldSuppressRendering:(bool)arg1 ;
-(void)setLayoutAndRenderOnThreadDuringScroll:(bool)arg1 ;
-(void)resumeEditing;
-(double)defaultViewScale;
-(double)currentViewScale;
-(void)setViewScale:(double)arg1 andScrollViewFrame:(CGRect)arg2 animated:(bool)arg3 ;
-(void)unobscuredFrameDidChange;
-(void)displayRulerWithSlowFade:(bool)arg1 ;
-(void)displayRulerForRect:(CGRect)arg1 ;
-(void)hideRuler;
-(id)replaceImageController;
-(CGRect)visibleUnscaledRectForCanvasUI;
-(void)toggleShouldShowUserDefinedGuides;
-(void)makeUserDefinedGuidesVisible;
-(id)guideController;
-(id)infosForGuides;
-(CGRect)boundingRectForActiveGuidesForRect:(CGRect)arg1 ;
-(id)provideDynamicGuides;
-(id)provideUserDefinedGuides;
-(id)localizedPercentStringForAlignmentGuide:(id)arg1 ;
-(void)setInfosToDisplay:(id)arg1 ;
-(id)topLevelZOrderedSiblingsOfInfos:(id)arg1 ;
-(CGRect)visibleUnscaledRectValidWhileZooming;
-(bool)allowAutoscroll;
-(bool)allowNegativeAutoscroll;
-(CGSize)convertUnscaledToBoundsSize:(CGSize)arg1 ;
-(CGSize)convertBoundsToUnscaledSize:(CGSize)arg1 ;
-(CGSize)growUnscaledCanvasLayerSize:(CGSize)arg1 ;
-(id)unitStringForPoint:(CGPoint)arg1 ;
-(id)unitStringForSize:(CGSize)arg1 ;
-(id)unitStringForNumber:(double)arg1 ;
-(id)unitStringForAngle:(double)arg1 andLength:(double)arg2 ;
-(id)topLevelRepsForDragSelecting;
-(id)hitRepsAtPoint:(CGPoint)arg1 withSlop:(CGSize)arg2 ;
-(id)hitKnobAtPoint:(CGPoint)arg1 returningRep:(id*)arg2 ;
-(id)layoutForModel:(id)arg1 withSelection:(id)arg2 ;
-(bool)shouldEverShowPathHighlightOnInvisibleShapes;
-(bool)shouldShowPathHighlightOnUnselectedInvisibleShapes;
-(int)defaultKnobTypeForRep:(id)arg1 ;
-(bool)shouldShowOnRepHyperlinkUI;
-(id)actionGhostKnobForRep:(id)arg1 ;
-(void)setOverlayLayerSuppressed:(bool)arg1 ;
-(void)closeOverlays;
-(void)addDecorator:(id)arg1 ;
-(void)removeDecorator:(id)arg1 ;
-(void)getCurrentAnnotationAuthorCreatingIfNecessaryWithCompletionHandler:(/*^block*/ id)arg1 ;
-(void)getCurrentAnnotationAuthor:(id*)arg1 commandToCreateIfNecessary:(id*)arg2 ;
-(void)showOrHideComments:(id)arg1 ;
-(bool)shouldDisplayCommentUIForInfo:(id)arg1 ;
-(void)setAnnotationAuthorColor:(id)arg1 ;
-(int)annotationPreferredRectEdge;
-(void)annotationChanged:(id)arg1 model:(id)arg2 selection:(id)arg3 beginEditing:(bool)arg4 ;
-(void)toggleAnnotationVisibility:(id)arg1 model:(id)arg2 selection:(id)arg3 beginEditing:(bool)arg4 ;
-(bool)attachedCommentsAllowedForDrawable:(id)arg1 ;
-(void)toggleHyperlinkUIForRep:(id)arg1 ;
-(void)actionGhostKnobHitForRep:(id)arg1 ;
-(void)beginPossiblyParallelInspectorDynamicOperation;
-(void)endPossiblyParallelInspectorDynamicOperation;
-(bool)isInInspectorDynamicOperation;
-(void)setInReadMode:(bool)arg1 ;
-(bool)usesAlternateDrawableSelectionHighlight;
-(void)setUsesAlternateDrawableSelectionHighlight:(bool)arg1 ;
-(void)setShowInvisibleObjects:(bool)arg1 ;
-(id)tmCoordinator;
-(id)hitRepChromeAtUnscaledPoint:(CGPoint)arg1 ;
-(void)tappedCanvasBackgroundAtPoint:(CGPoint)arg1 ;
-(bool)shouldBeginDrawingTilingLayerInBackground:(id)arg1 returningToken:(id*)arg2 andQueue:(id*)arg3 ;
-(void)didEndDrawingTilingLayerInBackground:(id)arg1 withToken:(id)arg2 ;
-(bool)mustDrawTilingLayerOnMainThread:(id)arg1 ;
-(id)queueForDrawingTilingLayerInBackground:(id)arg1 ;
-(id)iaHUDController;
-(bool)canPerformInteractiveAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)setAnimationCompletionBlock:(/*^block*/ id)arg1 ;
-(void)i_layoutRegistered:(id)arg1 ;
-(void)i_layoutUnregistered:(id)arg1 ;
-(void)i_viewIsZoomingAtPoint:(CGPoint)arg1 ;
-(void)i_viewDidZoomToViewScale:(double)arg1 ;
-(void)i_canvasContentsScaleDidChange;
-(void)i_viewScaleDidChange;
-(double)i_viewScaleForProposedViewScale:(double)arg1 originalViewScale:(double)arg2 ;
-(CGSize)i_canvasCenterOffsetForProposedViewScale:(double)arg1 originalViewScale:(double)arg2 ;
-(double)i_nextCanvasViewScaleDetentForProposedViewScale:(double)arg1 greater:(bool)arg2 ;
-(void)i_recordUserViewScale;
-(void)i_repNeedsDisplay:(id)arg1 ;
-(void)i_repNeedsDisplay:(id)arg1 inRect:(CGRect)arg2 ;
-(id)i_tileStorage;
-(id)i_currentAnimation;
-(id)i_descriptionForViewScale:(double)arg1 ;
-(void)i_disableThreadedLayoutAndRender;
-(void)i_enableThreadedLayoutAndRender;
-(bool)i_temporarilyDisabledLayoutAndRenderOnThreadDuringScroll;
-(void)p_textGesturesWillBeginNotification:(id)arg1 ;
-(void)p_textGesturesDidEndNotification:(id)arg1 ;
-(void)p_autoscrollToSelection:(id)arg1 withInfo:(id)arg2 isInitialSelection:(bool)arg3 focusRect:(CGRect)arg4 ;
-(id)viewWithTransferredLayers;
-(CGPoint)lastTapPoint;
-(id)canvasReferenceController;
-(void)setLastTapPoint:(CGPoint)arg1 ;
-(bool)inspectorModeEnabled;
-(bool)shouldSuppressRendering;
-(bool)animatingViewScale;
-(bool)textGesturesInFlight;
-(void)setTextGesturesInFlight:(bool)arg1 ;
-(void)setRulerController:(id)arg1 ;
-(void)setResizeCanvasOnLayout:(bool)arg1 ;
-(void)setCanvasEditor:(id)arg1 ;
-(bool)preventSettingNilEditorOnTextResponder;
-(void)setPreventSettingNilEditorOnTextResponder:(bool)arg1 ;
-(bool)createRepsForOffscreenLayouts;
-(void)setCreateRepsForOffscreenLayouts:(bool)arg1 ;
-(bool)layoutAndRenderOnThreadDuringScroll;
-(bool)shouldAutoscrollToSelectionAfterLayout;
-(void)setShouldAutoscrollToSelectionAfterLayout:(bool)arg1 ;
-(bool)suppressAutozoomToSelectionAfterLayout;
-(void)setSuppressAutozoomToSelectionAfterLayout:(bool)arg1 ;
-(void)setShouldClipThemeContentToCanvas:(bool)arg1 ;
-(bool)showGrayOverlay;
-(void)setShowGrayOverlay:(bool)arg1 ;
-(bool)inVersionBrowsingMode;
-(void)setInVersionBrowsingMode:(bool)arg1 ;
-(bool)inReadMode;
-(bool)showInvisibleObjects;
-(void)setSupportsBackgroundTileRendering:(bool)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(bool)respondsToSelector:(SEL)arg1 ;
-(id)init;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(bool)arg2 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(id)delegate;
-(void)setAnimationDuration:(double)arg1 ;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(void)setAnimationDelay:(double)arg1 ;
-(void)beginAnimations:(id)arg1 context:(void*)arg2 ;
-(void)setAnimationDidStopSelector:(SEL)arg1 ;
-(void)setAnimationDelegate:(id)arg1 ;
-(void)layoutIfNeeded;
-(CGPoint)contentOffset;
-(void)setAnimationRepeatAutoreverses:(bool)arg1 ;
-(void)commitAnimations;
-(void)setAnimationStartDate:(id)arg1 ;
-(void)setAnimationRepeatCount:(float)arg1 ;
-(void)setAnimationWillStartSelector:(SEL)arg1 ;
-(void)drawLayer:(id)arg1 inContext:(CGContextRef)arg2 ;
-(id)actionForLayer:(id)arg1 forKey:(id)arg2 ;
-(void)setContentOffset:(CGPoint)arg1 animated:(bool)arg2 ;
-(void)scrollRectToVisible:(CGRect)arg1 animated:(bool)arg2 ;
-(void)endEditing;
-(void)forwardInvocation:(id)arg1 ;
-(CGColorRef)selectionHighlightColor;
-(void)setSelectionHighlightColor:(CGColorRef)arg1 ;
-(void)setAnimationTimingFunction:(id)arg1 ;
-(id)annotationController;
-(void)teardown;
-(id)documentRoot;
-(bool)hasAnnotations;
-(void)p_commonInit;
-(id)canvas;
-(id)overlayLayer;
-(void)setViewScale:(double)arg1 ;
@end

