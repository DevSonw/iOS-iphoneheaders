/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:51 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>

@class KNUIState, KNTheme, KNSlideTree, TSSStylesheet, KNRecording, KNSoundtrack;

@interface KNShow : TSPObject {

	KNUIState* mUIState;
	KNTheme* mTheme;
	KNSlideTree* mSlideTree;
	TSSStylesheet* mStylesheet;
	KNRecording* mRecording;
	CGSize mSize;
	double mAutoplayTransitionDelay;
	double mAutoplayBuildDelay;
	double mIdleTimerDelay;
	int mMode;
	bool mLoopPresentation;
	bool mIdleTimerActive;
	bool mAutomaticallyPlaysUponOpen;
	bool mNeedsToUpdateThumbnails;
	KNSoundtrack* mSoundtrack;

}

@property (assign,nonatomic) CGSize size; 
@property (nonatomic,retain) KNUIState * uiState; 
@property (nonatomic,retain) KNTheme * theme; 
@property (nonatomic,retain) KNSlideTree * slideTree; 
@property (nonatomic,readonly) TSSStylesheet * stylesheet; 
@property (assign,nonatomic) double autoplayTransitionDelay; 
@property (assign,nonatomic) double autoplayBuildDelay; 
@property (assign,nonatomic) double idleTimerDelay; 
@property (assign,nonatomic) int mode; 
@property (nonatomic,retain) KNSoundtrack * soundtrack; 
@property (nonatomic,retain) KNRecording * recording; 
@property (assign,nonatomic) bool loopPresentation; 
@property (assign,nonatomic) bool idleTimerActive; 
@property (assign,nonatomic) bool automaticallyPlaysUponOpen; 
@property (nonatomic,readonly) bool slideNumbersVisible; 
@property (nonatomic,readonly) bool needsToUpdateThumbnails; 
+(id)showWithSize:(CGSize)arg1 context:(id)arg2 ;
-(id)initFromUnarchiver:(id)arg1 ;
-(void)saveToArchiver:(id)arg1 ;
-(void)saveToArchive:(ShowArchive*)arg1 archiver:(id)arg2 ;
-(void)loadFromArchive:(const ShowArchive*)arg1 unarchiver:(id)arg2 ;
-(void)willModify;
-(id)slideTree;
-(id)uiState;
-(id)initWithSize:(CGSize)arg1 context:(id)arg2 ;
-(unsigned long long)indexOfSlideNode:(id)arg1 ;
-(void)setSlideTree:(id)arg1 ;
-(double)autoplayTransitionDelay;
-(void)setAutoplayTransitionDelay:(double)arg1 ;
-(double)autoplayBuildDelay;
-(void)setAutoplayBuildDelay:(double)arg1 ;
-(double)idleTimerDelay;
-(void)setIdleTimerDelay:(double)arg1 ;
-(bool)loopPresentation;
-(void)setLoopPresentation:(bool)arg1 ;
-(bool)idleTimerActive;
-(void)setIdleTimerActive:(bool)arg1 ;
-(bool)automaticallyPlaysUponOpen;
-(void)setAutomaticallyPlaysUponOpen:(bool)arg1 ;
-(id)soundtrack;
-(void)setSoundtrack:(id)arg1 ;
-(bool)slideNumbersVisible;
-(id)slideNodeAtIndex:(unsigned long long)arg1 ;
-(void)setUiState:(id)arg1 ;
-(bool)needsToUpdateThumbnails;
-(void)dealloc;
-(CGSize)size;
-(void)setSize:(CGSize)arg1 ;
-(CGPoint)center;
-(void)setMode:(int)arg1 ;
-(int)mode;
-(id)theme;
-(void)setTheme:(id)arg1 ;
-(id)stylesheet;
-(void)setRecording:(id)arg1 ;
-(id)recording;
@end

