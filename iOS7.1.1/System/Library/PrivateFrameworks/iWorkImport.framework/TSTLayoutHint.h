/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:47 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDHint.h>

@class NSNumber, TSTLayout;

@interface TSTLayoutHint : NSObject <TSDHint> {

	bool mIsValid;
	bool mHorizontal;
	SCD_Struct_TS500 mCellRange;
	SCD_Struct_TS267 mCacheHintID;
	NSNumber* mPartitioningPass;
	unsigned mPartitionPosition;
	CGSize mMaximumSize;
	CGSize mEffectiveSize;
	TSTLayout* mLayout;

}

@property (assign,nonatomic) bool isValid; 
@property (assign,nonatomic) SCD_Struct_TS501 cellRange; 
@property (assign,nonatomic) SCD_Struct_TS267 cacheHintID; 
@property (nonatomic,retain) NSNumber * partitioningPass; 
@property (assign,nonatomic) unsigned partitionPosition; 
@property (assign,nonatomic) CGSize maximumSize; 
@property (assign,nonatomic) CGSize effectiveSize; 
@property (assign,nonatomic) TSTLayout * layout; 
@property (assign,nonatomic) bool horizontal; 
+(Class)archivedHintClass;
-(void)saveToArchive:(LayoutHintArchive*)arg1 ;
-(bool)overlapsWithSelection:(id)arg1 ;
-(void)offsetByDelta:(int)arg1 ;
-(id)firstChildHint;
-(id)lastChildHint;
-(bool)isFirstHint;
-(SCD_Struct_TS501)cellRange;
-(SCD_Struct_TS267)cacheHintID;
-(unsigned)partitionPosition;
-(void)setCellRange:(SCD_Struct_TS501)arg1 ;
-(void)setCacheHintID:(SCD_Struct_TS267)arg1 ;
-(void)setPartitionPosition:(unsigned)arg1 ;
-(id)initWithRange:(SCD_Struct_TS501)arg1 hintId:(SCD_Struct_TS267)arg2 partitionPosition:(unsigned)arg3 maximumSize:(CGSize)arg4 effectiveSize:(CGSize)arg5 layout:(id)arg6 validity:(bool)arg7 horizontal:(bool)arg8 ;
-(void)setPartitioningPass:(id)arg1 ;
-(void)setEffectiveSize:(CGSize)arg1 ;
-(id)partitioningPass;
-(oneway void)release;
-(void)dealloc;
-(id)init;
-(id)description;
-(void)invalidate;
-(bool)isValid;
-(id)layout;
-(void)setLayout:(id)arg1 ;
-(id).cxx_construct;
-(void)setHorizontal:(bool)arg1 ;
-(bool)horizontal;
-(CGSize)effectiveSize;
-(void)setIsValid:(bool)arg1 ;
-(CGSize)maximumSize;
-(id)initWithArchive:(const LayoutHintArchive*)arg1 ;
-(void)setMaximumSize:(CGSize)arg1 ;
@end

