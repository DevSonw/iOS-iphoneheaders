/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:46 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <CoreFoundation/NSCopying.h>

@class TSTExpressionNode, TSCECalculationEngine, TSTTableInfo, NSString;

@interface TSTFormula : NSObject <NSCopying> {

	TSTExpressionNode* mExpressionTree;
	TSCECalculationEngine* mCalculationEngine;
	TSTTableInfo* mHostInfo;
	NSString* mInitialWhitespace;
	SCD_Struct_TS267 mHostCell;
	bool mSyntaxError;
	bool mFixupFormulas;
	bool mFormulaWasFixable;
	bool mFormulaFixupsShouldStick;
	bool mEmpty;
	bool mRequireEqualsToken;

}

@property (nonatomic,readonly) TSCEFormula* formula; 
@property (nonatomic,copy) NSString * initialWhitespace; 
@property (assign,getter=isSyntaxError,nonatomic) bool syntaxError; 
@property (assign,nonatomic) bool fixupFormulas; 
@property (nonatomic,readonly) bool formulaWasFixable; 
@property (nonatomic,readonly) bool formulaFixupsShouldStick; 
@property (assign,nonatomic) bool requireEqualsToken; 
@property (nonatomic,retain) TSTExpressionNode * expressionTree; 
@property (assign,getter=isEmpty,nonatomic) bool empty; 
@property (nonatomic,retain) TSCECalculationEngine * calculationEngine; 
+(id)singleQuoteCharacters;
+(id)doubleQuoteCharacters;
+(id)leftParenCharacters;
+(id)rightParenCharacters;
+(id)p_charactersToTemporarilyChopOffEndToFixSyntaxError;
+(id)leadingSingleQuoteEscapeCharacters;
+(id)equalsCharacters;
+(int)formulaQuoteContextAtCharIndex:(unsigned long long)arg1 inStorage:(id)arg2 ;
-(void)setCalculationEngine:(id)arg1 ;
-(bool)isSyntaxError;
-(id)calculationEngine;
-(void)insertFormulaText:(id)arg1 includeWhitespace:(bool)arg2 ;
-(id)initWithCalculationEngine:(id)arg1 expressionTree:(id)arg2 hostCell:(SCD_Struct_TS267)arg3 hostTable:(id)arg4 ;
-(void)setExpressionTree:(id)arg1 ;
-(void)setInitialWhitespace:(id)arg1 ;
-(void)setSyntaxError:(bool)arg1 ;
-(id)nodesToCheckForBareArgumentPlaceholders;
-(void)reparseWithStorage:(id)arg1 adjustExpressionTree:(/*^block*/ id)arg2 ;
-(id)p_fixFormula:(id)arg1 ;
-(id)expressionTree;
-(id)initWithContext:(id)arg1 calculationEngine:(id)arg2 hostCell:(SCD_Struct_TS267)arg3 TSCEFormula:(const TSCEFormula*)arg4 ownerID:(CFUUIDRef)arg5 ;
-(id)initWithCalculationEngine:(id)arg1 hostCell:(SCD_Struct_TS267)arg2 hostTable:(id)arg3 ;
-(bool)hasBareArgumentPlaceholders;
-(void)reparseWithStorage:(id)arg1 ;
-(bool)fixupFormulas;
-(void)setFixupFormulas:(bool)arg1 ;
-(bool)formulaWasFixable;
-(bool)formulaFixupsShouldStick;
-(id)initialWhitespace;
-(bool)requireEqualsToken;
-(void)setRequireEqualsToken:(bool)arg1 ;
-(void)setEmpty:(bool)arg1 ;
-(void)dealloc;
-(id)copyWithZone:(NSZone)arg1 ;
-(bool)isEmpty;
-(id).cxx_construct;
-(void)reset;
-(TSCEFormula*)formula;
@end

