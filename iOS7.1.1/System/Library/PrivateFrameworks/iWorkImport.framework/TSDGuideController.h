/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:40 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDDecorator.h>

@class TSDInteractiveCanvasController, NSMutableDictionary, NSMutableArray, NSSet, NSMutableSet;

@interface TSDGuideController : NSObject <TSDDecorator> {

	TSDInteractiveCanvasController* mICC;
	NSMutableDictionary* mVerticalSpacings;
	NSMutableDictionary* mHorizontalSpacings;
	NSMutableArray* mVerticalSizingGuides;
	NSMutableArray* mHorizontalSizingGuides;
	NSMutableArray* mGuidesForSnappingY;
	NSMutableArray* mGuidesForSnappingX;
	NSMutableArray* mSpacingGuidesForSnappingX;
	NSMutableArray* mSpacingGuidesForSnappingY;
	NSMutableArray* mSpacingCenterGuidesForSnappingX;
	NSMutableArray* mSpacingCenterGuidesForSnappingY;
	NSSet* mCurrentGuides;
	NSMutableSet* mCurrentSizingGuideUILayers;

}

@property (nonatomic,readonly) TSDInteractiveCanvasController * interactiveCanvasController; 
+(id)defaultGuideColor;
+(bool)shouldAlignToSizingGuides;
+(bool)shouldAlignCenters;
+(bool)shouldAlignEdges;
+(bool)shouldAlignToSpacingGuides;
+(void)setShouldAlignEdges:(bool)arg1 ;
+(void)setShouldAlignToSpacingGuides:(bool)arg1 ;
+(void)setShouldAlignToSizingGuides:(bool)arg1 ;
+(void)setGuideColor:(id)arg1 ;
+(void)setShouldAlignCenters:(bool)arg1 ;
+(void)setShouldAlignEdgesToMasterGuides:(bool)arg1 ;
+(bool)shouldAlignEdgesToMasterGuides;
+(id)guideColor;
+(void)initialize;
-(id)interactiveCanvasController;
-(id)initWithInteractiveCanvasController:(id)arg1 ;
-(id)decoratorOverlayLayers;
-(void)beginAlignmentOperationForRep:(id)arg1 ;
-(void)hideSizingGuides;
-(void)showSizingGuideUIForRep:(id)arg1 matchingWidth:(bool)arg2 matchingHeight:(bool)arg3 ;
-(void)endAlignmentOperation;
-(CGPoint)snapRectToGuides:(CGRect)arg1 forKnobTag:(unsigned long long)arg2 ;
-(void)showGuidesAlignedWithRect:(CGRect)arg1 forKnobTag:(unsigned long long)arg2 ;
-(void)hideAlignmentGuides;
-(void)beginAlignmentOperationForReps:(id)arg1 ;
-(void)p_addGuidesForLayout:(id)arg1 ;
-(void)p_addGuide:(id)arg1 toSortedArray:(id)arg2 ;
-(void)p_addSpacingGuidesForFrame:(CGRect)arg1 spacing:(id)arg2 isVerticalSpacing:(bool)arg3 ;
-(CGPoint)snapRectToGuides:(CGRect)arg1 forKnobTag:(unsigned long long)arg2 snapSize:(bool)arg3 ;
-(double)p_maxSnap;
-(bool)p_guidesAreRelevantForEdge:(int)arg1 whileDraggingKnobTag:(unsigned long long)arg2 ;
-(id)p_guideClosestToEdge:(int)arg1 ofFrame:(CGRect)arg2 ;
-(id)p_closestGuideForOffset:(double)arg1 predicate:(id)arg2 inArray:(id)arg3 ;
-(bool)p_sizingGuidesAreRelevantForOrientation:(int)arg1 whileDraggingKnobTag:(unsigned long long)arg2 ;
-(void)showGuidesAlignedWithRect:(CGRect)arg1 forKnobTag:(unsigned long long)arg2 shouldRenderX:(bool)arg3 shouldRenderY:(bool)arg4 shouldRenderSizeGuides:(bool)arg5 ;
-(id)p_guidesForEdge:(int)arg1 ofFrame:(CGRect)arg2 ;
-(float)p_spacingForCenterOrSpacingGuide:(id)arg1 ;
-(id)p_guidesForOffset:(double)arg1 predicate:(id)arg2 inArray:(id)arg3 ;
-(void)p_getOffset:(double*)arg1 andGuidesArray:(id*)arg2 forEdge:(int)arg3 ofFrame:(CGRect)arg4 ;
-(CGPoint)snapRectToGuides:(CGRect)arg1 ;
-(void)showGuidesAlignedWithRect:(CGRect)arg1 shouldRenderX:(bool)arg2 shouldRenderY:(bool)arg3 ;
-(void)showSizingGuidesAlignedWithLayout:(id)arg1 forKnobTag:(unsigned long long)arg2 ;
@end

