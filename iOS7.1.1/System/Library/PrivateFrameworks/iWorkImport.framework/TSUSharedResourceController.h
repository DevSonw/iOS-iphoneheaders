/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:18 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol TSUSharedResourceControllerDelegate, OS_dispatch_group;
#import <iWorkImport/iWorkImport-Structs.h>
@class NSString, NSCondition, NSObject;

@interface TSUSharedResourceController : NSObject {

	int _acquirerCount;
	<TSUSharedResourceControllerDelegate>* _delegate;
	NSString* _resourceForThreadKey;
	NSString* _hasResourceForThreadKey;
	NSCondition* _resourceLock;
	id _resource;
	struct {
		unsigned canWaitOnMainThread : 1;
		unsigned acquiresResourceAsynchronously : 1;
		unsigned hasResource : 1;
	}  _flags;
	int _threadsAcquiringResourceCount;
	NSCondition* _waitLock;
	int _waitCount;
	NSObject<OS_dispatch_group>* _accessInProgressGroup;
	NSObject<OS_dispatch_group>* _willEndAccessGroup;
	NSString* _UUID;

}

@property (nonatomic,readonly) NSString * UUID;                     //@synthesize UUID=_UUID - In the implementation block
@property (assign,nonatomic) bool canWaitOnMainThread; 
-(void)didBeginAccessToResource:(id)arg1 isFromThreadWaitingToAcquireResource:(bool)arg2 ;
-(void)willEndAccessToResourceForcingToWaitForPendingAccesses:(bool)arg1 ;
-(void)wakeUpAllThreadsWaitingForResourceWithLock;
-(bool)performSynchronousAccessIfResourceIsAvailable:(bool)arg1 usingBlock:(/*^block*/ id)arg2 ;
-(void)acquireResourceWithLockAndPerformSynchronousAccessUsingBlock:(/*^block*/ id)arg1 ;
-(void)waitForResourceWithLockAndPerformSynchronousAccessUsingBlock:(/*^block*/ id)arg1 ;
-(void)willEndAccessToResource;
-(id)initWithName:(id)arg1 delegate:(id)arg2 ;
-(bool)canWaitOnMainThread;
-(void)setCanWaitOnMainThread:(bool)arg1 ;
-(void)didBeginAccessToResource:(id)arg1 ;
-(void)performSynchronousAccessUsingBlock:(/*^block*/ id)arg1 ;
-(bool)performSynchronousAccessIfResourceIsAvailableUsingBlock:(/*^block*/ id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)description;
-(id)UUID;
-(void).cxx_destruct;
@end

