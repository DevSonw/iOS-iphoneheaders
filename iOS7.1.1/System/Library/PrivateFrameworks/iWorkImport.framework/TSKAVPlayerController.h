/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:45 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol TSKAVPlayerControllerDelegate;
@class AVPlayer;

@interface TSKAVPlayerController : NSObject {

	AVPlayer* mPlayer;
	<TSKAVPlayerControllerDelegate>* mDelegate;
	long long mRepeatMode;
	float mVolume;
	float mRateBeforeScrubbing;
	unsigned long long mScrubbingCount;
	bool mCanPlay;
	bool mPlaying;
	bool mFastReversing;
	bool mFastForwarding;
	bool mIsObservingStatus;
	double _absoluteCurrentTime;

}

@property (nonatomic,readonly) AVPlayer * player; 
@property (nonatomic,readonly) <TSKAVPlayerControllerDelegate> * delegate; 
@property (nonatomic,readonly) bool canPlay; 
@property (assign,getter=isPlaying,nonatomic) bool playing; 
@property (nonatomic,readonly) double absoluteDuration; 
@property (nonatomic,readonly) double duration; 
@property (assign,nonatomic) double startTime; 
@property (assign,nonatomic) double endTime; 
@property (assign,nonatomic) long long repeatMode; 
@property (assign,nonatomic) float volume; 
@property (assign,nonatomic) double absoluteCurrentTime;                                //@synthesize absoluteCurrentTime=_absoluteCurrentTime - In the implementation block
@property (nonatomic,readonly) double currentTime; 
@property (nonatomic,readonly) double remainingTime; 
@property (getter=isScrubbing,nonatomic,readonly) bool scrubbing; 
@property (assign,getter=isFastReversing,nonatomic) bool fastReversing; 
@property (assign,getter=isFastForwarding,nonatomic) bool fastForwarding; 
+(id)keyPathsForValuesAffectingDuration;
+(id)keyPathsForValuesAffectingAbsoluteDuration;
+(bool)automaticallyNotifiesObserversOfStartTime;
+(id)keyPathsForValuesAffectingStartTime;
+(bool)automaticallyNotifiesObserversOfEndTime;
+(id)keyPathsForValuesAffectingEndTime;
-(id)initWithPlayer:(id)arg1 delegate:(id)arg2 ;
-(double)absoluteCurrentTime;
-(void)scrubToTime:(double)arg1 withTolerance:(double)arg2 completionHandler:(/*^block*/ id)arg3 ;
-(void)p_startObservingClosedCaptionDisplayEnabled;
-(bool)isFastReversing;
-(bool)isFastForwarding;
-(void)p_stopObservingClosedCaptionDisplayEnabled;
-(void)p_applyVolumeToPlayerItem;
-(void)playerItemDidPlayToEndTimeAtRate:(float)arg1 ;
-(void)setFastReversing:(bool)arg1 ;
-(void)setFastForwarding:(bool)arg1 ;
-(bool)p_canFastReverse;
-(bool)p_canFastForward;
-(void)p_closedCaptioningStatusDidChange:(id)arg1 ;
-(void)p_updateClosedCaptionDisplayEnabled;
-(void)p_playerItemDidPlayToEndTime:(id)arg1 ;
-(void)p_playbackDidFailWithError:(id)arg1 ;
-(double)absoluteDuration;
-(void)scrubToTime:(double)arg1 withTolerance:(double)arg2 ;
-(void)seekForwardByOneFrame;
-(void)seekBackwardByOneFrame;
-(void)seekToBeginning;
-(void)seekToEnd;
-(void)setAbsoluteCurrentTime:(double)arg1 ;
-(bool)canPlay;
-(long long)repeatMode;
-(void)setRepeatMode:(long long)arg1 ;
-(double)currentTime;
-(bool)isPlaying;
-(bool)isScrubbing;
-(void)beginScrubbing;
-(void)endScrubbing;
-(void)dealloc;
-(id)init;
-(id)delegate;
-(double)duration;
-(void)setStartTime:(double)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(double)startTime;
-(void)setEndTime:(double)arg1 ;
-(double)remainingTime;
-(void)teardown;
-(double)endTime;
-(void)setPlaying:(bool)arg1 ;
-(float)volume;
-(void)setVolume:(float)arg1 ;
-(id)player;
@end

