/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:21 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <CoreFoundation/NSCopying.h>

@protocol TSPLazyReferenceDelegate;
@class TSPObject, TSPComponent;

@interface TSPLazyReference : NSObject <NSCopying> {

	TSPObject* _strongObject;
	TSPObject* _weakObject;
	bool _isWeak;
	bool _allowUnknownObject;
	<TSPLazyReferenceDelegate>* _delegate;
	long long _identifier;
	TSPComponent* _component;

}

@property (nonatomic,readonly) id object; 
@property (nonatomic,readonly) id objectIfLoaded; 
@property (assign,nonatomic,__weak) <TSPLazyReferenceDelegate> * delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) long long identifier;                                    //@synthesize identifier=_identifier - In the implementation block
@property (assign,nonatomic,__weak) TSPComponent * component;                           //@synthesize component=_component - In the implementation block
@property (nonatomic,readonly) TSPObject * weakObject; 
@property (nonatomic,retain) TSPObject * strongObject; 
@property (nonatomic,readonly) bool isWeak;                                             //@synthesize isWeak=_isWeak - In the implementation block
+(id)referenceForObject:(id)arg1 ;
-(id)weakObject;
-(id)objectIfLoaded;
-(id)initWithDelegate:(id)arg1 identifier:(long long)arg2 isWeak:(bool)arg3 allowUnknownObject:(bool)arg4 ;
-(void)setStrongObject:(id)arg1 ;
-(bool)isEqualToLazyReference:(id)arg1 ;
-(bool)referencesObject:(id)arg1 ;
-(void)addLoadObserver:(id)arg1 action:(SEL)arg2 ;
-(id)strongObject;
-(bool)discardStrongObjectIfPossible;
-(void)resetIdentifier;
-(bool)isWeak;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)debugDescription;
-(id)delegate;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)object;
-(long long)identifier;
-(void).cxx_destruct;
-(id)initWithObject:(id)arg1 ;
-(void)setComponent:(id)arg1 ;
-(id)component;
@end

