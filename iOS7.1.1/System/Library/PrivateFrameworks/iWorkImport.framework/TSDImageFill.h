/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:40 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDFill.h>
#import <iWorkImport/TSDMixing.h>
#import <iWorkImport/TSSPreset.h>
#import <iWorkImport/TSSPresetSource.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSMutableCopying.h>

@protocol OS_dispatch_queue;
@class TSPData, TSUColor, TSUFlushableCachedImage, NSObject, NSString;

@interface TSDImageFill : TSDFill <TSDMixing, TSSPreset, TSSPresetSource, NSCopying, NSMutableCopying> {

	TSPData* mImageData;
	TSPData* mOriginalImageData;
	int mTechnique;
	TSUColor* mTintColor;
	TSUFlushableCachedImage* mStandardSizeTintedImage;
	TSUFlushableCachedImage* mHalfSizeTintedImage;
	TSUFlushableCachedImage* mQuarterSizeTintedImage;
	TSUColor* mReferenceColor;
	CGSize mFillSize;
	bool mHasIndicatedInterestInProvider;
	NSObject<OS_dispatch_queue>* mTempRenderLock;
	CGImageRef mTempRenderCopy;
	CGImageRef mSourceOfTempRenderCopy;
	long long mTempRenderCount;

}

@property (nonatomic,readonly) TSPData * imageData; 
@property (nonatomic,readonly) TSPData * originalImageData; 
@property (assign,nonatomic) int technique; 
@property (nonatomic,readonly) CGSize fillSize; 
@property (nonatomic,readonly) TSUColor * tintColor; 
@property (nonatomic,readonly) double scale; 
@property (nonatomic,readonly) NSString * presetKind; 
+(id)instanceWithArchive:(const FillArchive*)arg1 unarchiver:(id)arg2 ;
+(id)presetKinds;
+(void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 ;
-(void)saveToArchive:(FillArchive*)arg1 archiver:(id)arg2 ;
-(id)initWithArchive:(const FillArchive*)arg1 unarchiver:(id)arg2 ;
-(bool)p_shouldPersistFillSizeForData:(id)arg1 ;
-(void)drawSwatchInRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(id)presetKind;
-(SEL)mapThemeAssetSelector;
-(CGSize)fillSize;
-(id)initWithImageData:(id)arg1 technique:(int)arg2 tintColor:(id)arg3 size:(CGSize)arg4 originalImageData:(id)arg5 ;
-(void)paintPath:(CGPathRef)arg1 naturalBounds:(CGRect)arg2 inContext:(CGContextRef)arg3 isPDF:(bool)arg4 ;
-(id)originalImageData;
-(long long)mixingTypeWithObject:(id)arg1 ;
-(id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2 ;
-(void)p_paintPath:(CGPathRef)arg1 inContext:(CGContextRef)arg2 ;
-(bool)drawsInOneStep;
-(CGSize)renderedImageSizeForObjectSize:(CGSize)arg1 ;
-(void)addBitmapsToRenderingQualityInfo:(id)arg1 forShapeRep:(id)arg2 inContext:(CGContextRef)arg3 ;
-(void)applyToCALayer:(id)arg1 withScale:(double)arg2 ;
-(bool)canApplyToCALayer;
-(id)p_validatedImageProvider;
-(void)p_setFillSizeForApplicationData;
-(id)p_standardSizeCachedImage;
-(bool)p_shouldApplyTintedImage;
-(id)p_quarterSizeCachedImage;
-(id)p_halfSizeCachedImage;
-(bool)canApplyToCALayerByAddingSublayers;
-(id)p_cachedImageForSize:(CGSize)arg1 inContext:(CGContextRef)arg2 orLayer:(id)arg3 ;
-(CGRect)p_drawnRectForImageSize:(CGSize)arg1 destRect:(CGRect)arg2 inContext:(CGContextRef)arg3 ;
-(CGSize)p_sizeOfFillImageForDestRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(void)p_drawBitmapImage:(CGImageRef)arg1 withOrientation:(long long)arg2 inContext:(CGContextRef)arg3 bounds:(CGRect)arg4 ;
-(void)p_drawPDFWithProvider:(id)arg1 inContext:(CGContextRef)arg2 bounds:(CGRect)arg3 ;
-(CGImageRef)p_newTintedImageWithScale:(double)arg1 ;
-(CGImageRef)p_newStandardSizeImage;
-(CGImageRef)p_newHalfSizeImage;
-(CGImageRef)p_newQuarterSizeImage;
-(id)imageDataAtFillSize;
-(bool)shouldBeReappliedToCALayer:(id)arg1 ;
-(void)dealloc;
-(bool)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(double)scale;
-(id)copyWithZone:(NSZone)arg1 ;
-(bool)isOpaque;
-(id)tintColor;
-(id)referenceColor;
-(id)mutableCopyWithZone:(NSZone)arg1 ;
-(id)imageData;
-(int)technique;
-(void)setTechnique:(int)arg1 ;
-(int)fillType;
-(void)paintPath:(CGPathRef)arg1 inContext:(CGContextRef)arg2 ;
@end

