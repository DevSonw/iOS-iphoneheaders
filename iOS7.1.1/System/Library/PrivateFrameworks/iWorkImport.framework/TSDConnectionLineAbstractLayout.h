/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:43 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDShapeLayout.h>

@class TSDBezierPath, TSDConnectionLinePathSource, TSDInfoGeometry, TSDLayout;

@interface TSDConnectionLineAbstractLayout : TSDShapeLayout {

	TSDBezierPath* mClippedBezierPath;
	TSDConnectionLinePathSource* mOriginalPathSource;
	TSDConnectionLinePathSource* mConnectedPathSource;
	TSDInfoGeometry* mConnectedInfoGeometry;
	TSDLayout* mConnectedFrom;
	TSDLayout* mConnectedTo;
	TSDBezierPath* mCachedFromWrapPath;
	TSDBezierPath* mCachedToWrapPath;
	double mCachedFromOutset;
	double mCachedToOutset;
	TSDBezierPath* mCachedFromOutsetWrapPath;
	TSDBezierPath* mCachedToOutsetWrapPath;
	TSDLayout* mOldConnectedFrom;
	TSDLayout* mOldConnectedTo;
	bool mValidConnections;
	bool mVisibleLine;
	bool mValidLine;
	CGPoint mLooseEndPosition;
	CGPoint mAcumulatedDrag;
	bool mUseResizePoints[3];
	CGPoint mResizeControlPoints[3];
	bool mUseDynamicOutsets;
	double mDynamicOutsetFrom;
	double mDynamicOutsetTo;

}

@property (assign,nonatomic) TSDLayout * connectedFrom; 
@property (assign,nonatomic) TSDLayout * connectedTo; 
@property (nonatomic,readonly) bool validLine; 
@property (nonatomic,readonly) TSDConnectionLinePathSource * connectedPathSource; 
@property (assign,nonatomic) bool useDynamicOutsets; 
@property (assign,nonatomic) double dynamicOutsetFrom; 
@property (assign,nonatomic) double dynamicOutsetTo; 
@property (nonatomic,readonly) double outsetFrom; 
@property (nonatomic,readonly) double outsetTo; 
-(CGRect)boundsForStandardKnobs;
-(void)beginDynamicOperation;
-(void)endDynamicOperation;
-(void)processChangedProperty:(int)arg1 ;
-(bool)supportsRotation;
-(void)invalidatePosition;
-(void)parentDidChange;
-(void)connectedLayoutInvalidated:(id)arg1 ;
-(bool)shouldValidate;
-(void)pauseDynamicTransformation;
-(id)reliedOnLayouts;
-(id)additionalLayoutsForRepCreation;
-(bool)shouldDisplayGuides;
-(bool)supportsResize;
-(bool)supportsFlipping;
-(CGPoint)getControlKnobPosition:(unsigned long long)arg1 ;
-(id)pathSource;
-(bool)pathIsOpen;
-(bool)pathIsLineSegment;
-(void)dynamicallyMovedSmartShapeKnobTo:(CGPoint)arg1 withTracker:(id)arg2 ;
-(id)layoutInfoGeometry;
-(bool)canBeIntersected;
-(bool)canResetTextAndObjectHandles;
-(CGPoint)unclippedHeadPoint;
-(CGPoint)unclippedTailPoint;
-(double)outsetFrom;
-(double)outsetTo;
-(bool)isStraightLine;
-(void)beginDynamicOutsetChange;
-(void)setDynamicOutsetFrom:(double)arg1 ;
-(void)setDynamicOutsetTo:(double)arg1 ;
-(void)endDynamicOutsetChange;
-(void)invalidateConnections;
-(void)checkConnections;
-(id)connectedTo;
-(id)connectedFrom;
-(void)setConnectedFrom:(id)arg1 ;
-(void)setConnectedTo:(id)arg1 ;
-(id)clipPath:(id)arg1 onLayout:(id)arg2 outset:(double)arg3 reversed:(bool)arg4 isValid:(bool*)arg5 ;
-(id)connectedPathSource;
-(id)createConnectedPathFrom:(id)arg1 to:(id)arg2 withControlPoints:(CGPoint)arg3 ;
-(CGPoint)controlPointForPointA:(CGPoint)arg1 pointB:(CGPoint)arg2 andOriginalA:(CGPoint)arg3 originalB:(CGPoint)arg4 ;
-(bool)validLine;
-(CGPoint)i_accumulatedDrag;
-(id)connectionLineInfo;
-(void)removeConnections;
-(void)updateRepPath;
-(id)p_infoForConnectingToInfo:(id)arg1 ;
-(bool)canEndpointsCoincide;
-(void)updateConnectedPath;
-(void)setUseDynamicOutsets:(bool)arg1 ;
-(double)dynamicOutsetFrom;
-(double)dynamicOutsetTo;
-(bool)useDynamicOutsets;
-(void)validate;
-(void)invalidatePath;
-(void)dealloc;
-(id)path;
-(bool)canFlip;
-(int)connectionType;
-(bool)isInvisible;
-(int)wrapType;
@end

