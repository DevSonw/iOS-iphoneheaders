/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:26 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSCH3DRenderPipeline.h>

@class TSCH3DScene, TSCH3DGLFramebuffer, TSCH3DSceneRenderSetup, TSCH3DCamera, NSNumber;

@interface TSCH3DSceneRenderPipeline : TSCH3DRenderPipeline {

	TSCH3DSceneRenderPipeline* mOriginal;
	TSCH3DScene* mScene;
	TSCH3DGLFramebuffer* mFramebuffer;
	TSCH3DSceneRenderSetup* mSetup;
	TSCH3DCamera* mCamera;
	NSNumber* mScale;
	NSNumber* mSamples;
	NSNumber* mSuperSamples;
	NSNumber* mPreserveFramebufferContent;

}

@property (nonatomic,readonly) TSCH3DCamera * camera; 
@property (nonatomic,retain) TSCH3DScene * scene; 
@property (nonatomic,retain) TSCH3DGLFramebuffer * framebuffer; 
@property (nonatomic,retain) TSCH3DSceneRenderSetup * setup; 
@property (assign,nonatomic) float scale; 
@property (nonatomic,readonly) float renderScale; 
@property (assign,nonatomic) float samples; 
@property (assign,nonatomic) float superSamples; 
@property (assign,nonatomic) bool preserveFramebufferContent; 
@property (nonatomic,retain) TSCH3DSceneRenderPipeline * original; 
+(id)pipelineWithProcessor:(id)arg1 session:(id)arg2 scene:(id)arg3 ;
-(Class)labelsMeshRendererClassForLabelsRenderer:(id)arg1 ;
-(id)labelsMeshRendererForLabelsRenderer:(id)arg1 ;
-(bool)shouldSkipLabelsIfHidden;
-(id)processor;
-(void)setOriginal:(id)arg1 ;
-(id)original;
-(void)setFramebuffer:(id)arg1 ;
-(id)initWithProcessor:(id)arg1 session:(id)arg2 scene:(id)arg3 ;
-(id)cloneWithProcessor:(id)arg1 scene:(id)arg2 ;
-(bool)preserveFramebufferContent;
-(void)setPreserveFramebufferContent:(bool)arg1 ;
-(bool)activateFramebuffer:(id)arg1 ;
-(void)setScene:(id)arg1 ;
-(id)baseRecloneWithRetargetProcessor:(id)arg1 scene:(id)arg2 ;
-(bool)renderWithFramebuffer:(id)arg1 ;
-(id)baseRecloneWithProcessor:(id)arg1 scene:(id)arg2 ;
-(id)recloneWithPipelineClass:(Class)arg1 processor:(id)arg2 scene:(id)arg3 ;
-(id)recloneWithPipelineClass:(Class)arg1 retargetProcessor:(id)arg2 scene:(id)arg3 ;
-(float)superSamples;
-(id)concreteSetup;
-(tvec4<float>)backgroundClearColor;
-(void)setupCamera:(id)arg1 ;
-(void)renderSelector:(SEL)arg1 ;
-(void)setupRendering;
-(id)cloneWithRetargetProcessor:(id)arg1 scene:(id)arg2 ;
-(void)setSetup:(id)arg1 ;
-(void)setSuperSamples:(float)arg1 ;
-(void)setObjectRenderMode:(int)arg1 ;
-(void)clearCamera;
-(void)clearFramebuffer;
-(float)renderScale;
-(id)session;
-(bool)render;
-(id)scene;
-(void)dealloc;
-(float)scale;
-(void)setScale:(float)arg1 ;
-(bool)run;
-(id)camera;
-(float)samples;
-(void)setSamples:(float)arg1 ;
-(id)setup;
-(id)framebuffer;
@end

