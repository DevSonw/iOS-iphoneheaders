/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:41 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDGLDataBufferAccessor.h>

@class NSMutableArray, NSMutableDictionary, NSArray;

@interface TSDGLDataBuffer : NSObject <TSDGLDataBufferAccessor> {

	unsigned long long mCurrentBufferIndex;
	NSMutableArray* mArrayBuffers;
	NSMutableDictionary* mAttributeToArrayBuffersDictionary;
	unsigned long long mElementArrayCount;
	unsigned short* mGLElementData;
	bool mGLElementDataBufferWasSetup;
	unsigned mGLElementDataBuffer;
	CGSize mGLElementMeshSize;
	unsigned long long mGLElementQuadParticleCount;
	unsigned mGLVertexArrayObjects[2];
	bool _isUpdatingRawDataBuffer;
	bool _didTeardown;
	bool _isDoubleBuffered;
	unsigned _drawMode;
	unsigned long long _vertexCount;
	NSArray* _vertexAttributes;

}

@property (readonly) unsigned long long vertexCount;              //@synthesize vertexCount=_vertexCount - In the implementation block
@property (readonly) NSArray * vertexAttributes;                  //@synthesize vertexAttributes=_vertexAttributes - In the implementation block
@property (assign,nonatomic) unsigned drawMode;                   //@synthesize drawMode=_drawMode - In the implementation block
@property (readonly) bool isDoubleBuffered;                       //@synthesize isDoubleBuffered=_isDoubleBuffered - In the implementation block
-(void)setGLfloat:(float)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(float)GLfloatForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)setCGFloat:(double)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(SCD_Struct_TS479)GLPoint2DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)setGLPoint2D:(SCD_Struct_TS479)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(SCD_Struct_TS481)GLPoint3DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)setGLPoint3D:(SCD_Struct_TS481)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(tquat<float>)GLPoint4DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)setGLPoint4D:(tquat<float>)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3 ;
-(void)setGLushort:(unsigned short)arg1 forIndexElement:(unsigned long long)arg2 ;
-(id)initWithVertexAttributes:(id)arg1 vertexCount:(unsigned long long)arg2 indexElementCount:(unsigned long long)arg3 doubleBuffered:(bool)arg4 ;
-(id)initWithVertexAttributes:(id)arg1 meshSize:(CGSize)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 textureFlipped:(bool)arg4 includeCenterAttribute:(bool)arg5 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 textureFlipped:(bool)arg4 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 ;
-(bool)isDoubleBuffered;
-(void)p_setupGLElementArrayBufferIfNecessary;
-(void)drawWithShader:(id)arg1 range:(NSRange)arg2 ;
-(void)enableElementArrayBuffer;
-(id)vertexAttributes;
-(bool)p_setAttributeUpdateData:(SCD_Struct_TS482*)arg1 fromAttribute:(id)arg2 ;
-(id)initWithVertexAttributes:(id)arg1 quadParticleCount:(unsigned long long)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 textureFlipped:(bool)arg3 ;
-(unsigned short)GLushortForIndexElement:(unsigned long long)arg1 ;
-(void)disableElementArrayBuffer;
-(void)drawWithShader:(id)arg1 ;
-(void)setDataForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 fromAttribute:(id)arg3 dataBuffer:(id)arg4 index:(unsigned long long)arg5 ;
-(id)vertexAttributeNamed:(id)arg1 ;
-(void)updateDataBufferAttributes:(id)arg1 withBlock:(/*^block*/ id)arg2 ;
-(void)dealloc;
-(id)description;
-(unsigned)drawMode;
-(void)setDrawMode:(unsigned)arg1 ;
-(void)teardown;
-(unsigned long long)vertexCount;
@end

