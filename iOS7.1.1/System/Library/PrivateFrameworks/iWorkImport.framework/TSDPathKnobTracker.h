/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:42 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDKnobTracker.h>
#import <iWorkImport/TSDDecorator.h>

@class TSDEditableBezierPathSourceMorphInfo;

@interface TSDPathKnobTracker : TSDKnobTracker <TSDDecorator> {

	int mInitialReflectState;
	int mPrevInitialReflectState;
	bool mConstrain;
	bool mToggleMirrored;
	bool mToggleMirrorMagnitude;
	bool mToggleNodeType;
	bool mIsCreatingNode;
	bool mCreateBezierNode;
	bool mDidOpenGroup;
	TSDEditableBezierPathSourceMorphInfo* mMorphInfo;
	int mNodeOriginalType;
	int mPrevNodeOriginalType;
	int mNextNodeOriginalType;
	CGPoint mOriginalUnscaledKnobPosition;

}

@property (nonatomic,readonly) int initialReflectState; 
@property (assign,nonatomic) bool constrain; 
@property (assign,nonatomic) bool toggleMirrored; 
@property (assign,nonatomic) bool toggleMirrorMagnitude; 
@property (assign,nonatomic) bool toggleNodeType; 
@property (assign,nonatomic) bool isCreatingNode; 
@property (nonatomic,readonly) bool createdNode; 
@property (assign,nonatomic) bool createBezierNode; 
@property (assign,nonatomic) bool didOpenGroup; 
-(id)initWithRep:(id)arg1 knob:(id)arg2 ;
-(void)beginMovingKnob;
-(void)endMovingKnob;
-(void)updateKnobs;
-(void)moveKnobToRepPosition:(CGPoint)arg1 ;
-(bool)shouldHideOtherKnobs;
-(id)decoratorOverlayLayers;
-(id)editablePathSource;
-(bool)isCreatingNode;
-(bool)toggleNodeType;
-(id)pathKnob;
-(void)startWithNodeCreationBlock:(/*^block*/ id)arg1 ;
-(void)setIsCreatingNode:(bool)arg1 ;
-(id)pathRep;
-(void)setDidOpenGroup:(bool)arg1 ;
-(bool)didOpenGroup;
-(bool)createBezierNode;
-(int)reflectionStateForBendingNodeType:(int)arg1 originalReflectionState:(int)arg2 ;
-(bool)constrain;
-(bool)toggleMirrored;
-(int)initialReflectState;
-(bool)toggleMirrorMagnitude;
-(void)moveSmoothControlKnob:(id)arg1 to:(CGPoint)arg2 ;
-(id)initWithRep:(id)arg1 creatingKnobAtPoint:(CGPoint)arg2 initialPoint:(bool)arg3 reversed:(bool)arg4 ;
-(bool)createdNode;
-(void)setConstrain:(bool)arg1 ;
-(void)setToggleMirrored:(bool)arg1 ;
-(void)setToggleMirrorMagnitude:(bool)arg1 ;
-(void)setToggleNodeType:(bool)arg1 ;
-(void)setCreateBezierNode:(bool)arg1 ;
-(double)delay;
-(id).cxx_construct;
@end

