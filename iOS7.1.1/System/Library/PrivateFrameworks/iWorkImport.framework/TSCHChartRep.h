/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:33 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSWPTextHostRep.h>
#import <iWorkImport/TSCHChartRepPlatformProtocols.h>
#import <iWorkImport/TSCHSupportsRendering.h>

@class NSArray, TSCHSelectionPath, TSCHRendererLayer, TSCHChartLayout, TSCHMessageView, CAShapeLayer, CALayer, TSCHLegendMoveKnob, TSCHChartDrawableInfo, TSCHSearchSelection, NSString;

@interface TSCHChartRep : TSWPTextHostRep <TSCHChartRepPlatformProtocols, TSCHSupportsRendering> {

	NSArray* mRenderers;
	bool mBuildingChunks;
	int mChunkPhase;
	long long mCurrentChunk;
	bool mBuildingFinalBackground;
	bool mBuildingFinalElements;
	bool mChunkTexturesValid;
	bool mInZoom;
	unsigned long long mInDynamicStandinOperation;
	unsigned long long mInDynamicStandinLayoutOperation;
	bool mIsKPFExportForMultiData;
	TSCHSelectionPath* mActiveTextEditingPath;
	TSCHRendererLayer* mLegendLayer;
	bool mForceSeparateLegendLayer;
	bool mIsLayerBasedRep;
	bool mInvalidateLegendLayerForLayerBasedRep;
	TSCHChartLayout* mChartLayout;
	bool mWantsPreviewLayout;
	bool mEditorIsEditingInfo;
	TSCHMessageView* mMessageView;
	bool mMessageViewValid;
	bool mMediatorEditingHaloLayerPathValid;
	CAShapeLayer* mMediatorEditingHaloLayer;
	bool mLegendBorderHaloLayerPathValid;
	CAShapeLayer* mLegendBorderHaloLayer;
	bool mChartRepGoingAway;
	bool mCDEIsEditingInfo;
	bool mCDECausedSetNeedsDisplay;
	bool mDrawingSearchReference;
	CALayer* mSubselectionKnobLayer;
	bool mFinishedBecomingSelected;
	TSCHLegendMoveKnob* mDynamicLegendKnob;
	/*^block*/ id mDrawingOpStartBlock;
	/*^block*/ id mDrawingOpEndBlock;
	int mRenderPassChunkPhase;

}

@property (nonatomic,readonly) long long currentChunk; 
@property (nonatomic,readonly) TSCHChartDrawableInfo * chartInfo; 
@property (nonatomic,readonly) TSCHChartLayout * chartLayout; 
@property (nonatomic,readonly) unsigned long long chartDeliveryStyle; 
@property (nonatomic,readonly) TSCHSearchSelection * selection; 
@property (nonatomic,readonly) bool forceRenderBlankBackground; 
@property (assign,nonatomic) bool chunkTexturesValid; 
@property (nonatomic,readonly) TSCHSelectionPath * activeTextEditingPath; 
@property (nonatomic,readonly) bool drawingSearchReference; 
@property (nonatomic,readonly) NSString * animationFilter; 
@property (nonatomic,readonly) double viewScale; 
@property (nonatomic,readonly) double contentsScale; 
@property (nonatomic,readonly) bool chartRepGoingAway; 
@property (nonatomic,copy) id drawingOpStartBlock; 
@property (nonatomic,copy) id drawingOpEndBlock; 
@property (nonatomic,retain) TSCHLegendMoveKnob * dynamicLegendKnob; 
@property (assign,nonatomic) bool forceSeparateLegendLayer; 
+(double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2 ;
-(double)viewScale;
-(id)renderSeriesIndexSetForFinalElements:(bool)arg1 ;
-(id)renderValueIndexSetForSeries:(unsigned long long)arg1 finalElements:(bool)arg2 ;
-(int)planeState:(int)arg1 finalElements:(bool)arg2 ;
-(id)chartInfo;
-(id)renderSeriesIndexSetForFinalElements:(bool)arg1 currentChunk:(long long)arg2 ;
-(id)renderValueIndexSetForSeries:(unsigned long long)arg1 finalElements:(bool)arg2 currentChunk:(long long)arg3 ;
-(long long)currentChunk;
-(unsigned long long)chartDeliveryStyle;
-(id)animationFilter;
-(void)processChanges:(id)arg1 ;
-(id)chartLayout;
-(void)renderIntoContext:(CGContextRef)arg1 visible:(CGRect)arg2 ;
-(void)knobTrackingDidBegin:(id)arg1 ;
-(void)knobTrackingDidEnd:(id)arg1 ;
-(id)initWithLayout:(id)arg1 canvas:(id)arg2 ;
-(bool)isLayerBasedRep;
-(void)clearRenderers;
-(bool)chartRepGoingAway;
-(void)willBeRemoved;
-(id)renderers;
-(CGRect)geometryFrame;
-(CGRect)outerShadowFrame;
-(bool)renderLegendIntoSeparateLayer;
-(CGRect)frameInUnscaledCanvas;
-(CGRect)convertUnscaledToBoundsRect:(CGRect)arg1 ;
-(void)willUpdateLayer:(id)arg1 ;
-(id)p_legendRenderer;
-(void)didUpdateLayer:(id)arg1 ;
-(id)legendLayerForLayerBasedRep;
-(bool)isCanvasTextEditing;
-(void)didDrawInLayer:(id)arg1 context:(CGContextRef)arg2 ;
-(bool)isDrawingIntoPDF;
-(id)drawableLayout;
-(void)invalidateLegendLayerForLayerBasedRep;
-(void)becameSelected;
-(void)becameNotSelected;
-(bool)shouldShowSelectionHighlight;
-(bool)shouldShowLegendHighlight;
-(bool)shouldShowKnobs;
-(void)editorIsSelectingInfos:(id)arg1 ;
-(void)editorIsDeselectingInfo;
-(void)dynamicDragDidBegin;
-(id)dynamicResizeDidBegin;
-(void)dynamicResizeDidEndWithTracker:(id)arg1 ;
-(void)willBeginZooming;
-(void)didEndZooming;
-(void)viewScaleDidChange;
-(void)setTextureStage:(unsigned long long)arg1 ;
-(bool)isLegendOn;
-(id)legendLayer;
-(id)knobForDynamicStyleChangeKey:(id)arg1 ;
-(void)addChartKnobsToArray:(id)arg1 ;
-(void)updatePositionsOfKnobs:(id)arg1 ;
-(id)newTrackerForKnob:(id)arg1 ;
-(void)endCanvasTextEditing;
-(void)invalidateSubselectionKnobs;
-(id)hitChartElements:(CGPoint)arg1 passingTest:(/*^block*/ id)arg2 ;
-(void)tswpTextEditingDidEndEditing:(id)arg1 ;
-(void)invalidateKnobPositions;
-(void)willAnimateIntoCDE;
-(void)didAnimateFromCDE;
-(void)protected_dynamicStyleChangeWillBegin:(id)arg1 ;
-(void)protected_dynamicStyleChangeDidEnd:(id)arg1 ;
-(bool)shouldApplyFractionalTranslationInRootForLegendLayer;
-(bool)shouldUseLegendLayerForLayerBasedRep;
-(bool)directlyManagesLayerContent;
-(bool)frameInUnscaledCanvasNeedsPaddingForShadows;
-(void)addAdditionalChildLayersToArray:(id)arg1 ;
-(bool)canDrawInBackgroundDuringScroll;
-(bool)canDrawInParallel;
-(id)textureForContext:(id)arg1 ;
-(bool)rotationKnobHitByNaturalPoint:(CGPoint)arg1 ;
-(id)commandController;
-(bool)forceRenderBlankBackground;
-(bool)renderElementsShadowOnly;
-(bool)renderElementsWithoutShadows;
-(id)renderSeriesIndexSet;
-(id)renderValueIndexSetForSeries:(unsigned long long)arg1 ;
-(bool)renderElements;
-(bool)renderLabels;
-(id)activeTextEditingPath;
-(bool)drawingSearchReference;
-(void)protected_dynamicStyleLayoutChangeWillBegin:(id)arg1 ;
-(void)protected_dynamicStyleLayoutChangeDidEnd:(id)arg1 ;
-(void)p_findUIStateChanged:(id)arg1 ;
-(void)releaseLegendLayer;
-(void)p_deleteMessageView;
-(void)dismissMessageOverlayNowWithAnimation:(bool)arg1 ;
-(void)p_invalidateLegendSelectionHalo;
-(void)p_invalidateMediatorEditingHaloLayer;
-(void)updateFromLayout;
-(bool)p_usingSeparateLegendLayerForLayerBasedRep;
-(id)subselectionLayer;
-(void)p_invalidateMessageOverlay;
-(void)p_removeOrShowAndPositionMessageOverlay;
-(bool)p_textEditingInLegend;
-(id)overlayLayers;
-(void)p_validateLegendSelectionHalo;
-(void)p_validateMediatorEditingHaloLayer;
-(CGPoint)scaledSubpixelOffsetFromLayerFrameInScaledCanvas;
-(void)setupForDrawingInLayer:(id)arg1 context:(CGContextRef)arg2 ;
-(bool)inPrintPreviewMode;
-(bool)buildShouldUseRenderer:(id)arg1 ;
-(bool)shouldUseRenderer:(id)arg1 ;
-(bool)messageIsVisible;
-(void)p_positionMessageView;
-(void)p_topBarsShowedUp:(id)arg1 ;
-(void)p_messageAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void*)arg3 ;
-(bool)p_hasAnySubselection;
-(id)itemsToAddToEditMenu;
-(bool)planeIsVisible:(int)arg1 ;
-(bool)chunkTexturesValid;
-(void)protected_renderChunkInBounds:(CGRect)arg1 textureSet:(id)arg2 ;
-(void)setChunkTexturesValid:(bool)arg1 ;
-(int)planeState:(int)arg1 finalElements:(bool)arg2 chunkStage:(long long)arg3 ;
-(int)p_backgroundLikePlaneStateForEffectiveStage:(long long)arg1 ;
-(bool)p_hasBackgroundLayerForPieChart;
-(void)p_forceDismissTransientMessage;
-(void)dynamicallyResizingWithTracker:(id)arg1 ;
-(void)setDynamicLegendKnob:(id)arg1 ;
-(id)dynamicLegendKnob;
-(bool)p_legendIsSelected;
-(int)dragTypeAtCanvasPoint:(CGPoint)arg1 ;
-(bool)legendHitByUnscaledPoint:(CGPoint)arg1 distanceFromCenter:(CGPoint*)arg2 ;
-(bool)p_legendHitByLayoutPoint:(CGPoint)arg1 ;
-(void)addKnobsToArray:(id)arg1 ;
-(void)invalidateKnobs;
-(void)p_centerToLegendFrameForNonactiveLegendMoveKnob:(id)arg1 legendDrawingFrameInNaturalSpace:(CGRect)arg2 ;
-(void)p_updateLegendLayerPositionForLegendMoveKnobUsingUnscaledPosition:(id)arg1 ;
-(void)p_updatePositionForLegendMoveKnob:(id)arg1 ;
-(void)p_updateLegendLayerPositionForLegendMoveKnobUsingRelativePosition:(id)arg1 ;
-(void)p_updatePositionOfLegendResizeKnob:(id)arg1 ;
-(void)p_centerToLegendFrameEdgeForNonactiveLegendResizeKnob:(id)arg1 legendFrameInNaturalSpace:(CGRect)arg2 ;
-(void)p_updatePositionOfLegendKnob:(id)arg1 ;
-(void)p_updatePositionsOfLegendKnobs:(id)arg1 ;
-(void)p_createLegendLayer;
-(void)setCurrentKnobTracker:(id)arg1 ;
-(void)setForceSeparateLegendLayer:(bool)arg1 ;
-(id)p_currentChartEditor;
-(id)p_primaryChartEditor;
-(id)p_findRendererForSelectionPath:(id)arg1 ;
-(bool)beginCanvasTextEditingForSelectionPath:(id)arg1 ;
-(CGPathRef)p_newPathForSearchSelection:(id)arg1 ;
-(CGPathRef)newPathForSearchReference:(id)arg1 ;
-(id)p_textImageForPath:(CGPathRef)arg1 renderer:(id)arg2 selection:(id)arg3 shouldPulsate:(bool)arg4 ;
-(void)p_validateChartTitleSelection;
-(bool)p_legendIsBeingMoved;
-(bool)p_legendIsBeingResized;
-(bool)shouldLayoutTilingLayer:(id)arg1 ;
-(bool)forceSeparateLegendLayer;
-(CGRect)visibleBoundsForTilingLayer:(id)arg1 ;
-(bool)hasSubselection;
-(id)subselectionHaloPositionsForSelections:(id)arg1 ;
-(id)subselectionKnobPositionsForSelection:(id)arg1 ;
-(id)protected_haloLayersForHaloPositions:(id)arg1 ;
-(id)protected_knobLayersForKnobPositions:(id)arg1 ;
-(void)beginDrawingOperation;
-(/*^block*/ id)drawingOpStartBlock;
-(/*^block*/ id)drawingOpEndBlock;
-(bool)renderTrendLinesForSeriesIndex:(unsigned long long)arg1 ;
-(CGRect)snapRectForDynamicDragWithOffset:(CGPoint)arg1 ;
-(bool)p_hasBackgroundFill;
-(bool)p_chartShouldDisplayMessage;
-(void)displayMessage:(id)arg1 zPosition:(double)arg2 style:(int)arg3 ;
-(void)updateMessageOverlayNow;
-(id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2 ;
-(void)updateKnobs;
-(unsigned long long)adjustedKnobForComputingResizeGeometry:(unsigned long long)arg1 ;
-(bool)canEditWithEditor:(id)arg1 ;
-(id)p_findRendererForTextEditingSelectionPath:(id)arg1 ;
-(id)currentTextEditingSupporter;
-(void)beginCanvasTextEditingForSearchSelection:(id)arg1 ;
-(void)selectAllEditedText;
-(id)imageForSearchReference:(id)arg1 forPath:(CGPathRef)arg2 shouldPulsate:(bool)arg3 ;
-(void)beginChartDataEditing;
-(void)endChartDataEditing;
-(id)hitChartElements:(CGPoint)arg1 ;
-(void)endDrawingOperation;
-(void)setDrawingOpStartBlock:(/*^block*/ id)arg1 ;
-(void)setDrawingOpEndBlock:(/*^block*/ id)arg1 ;
-(bool)shadowsEnabled;
-(void)dealloc;
-(void)setNeedsDisplay;
-(bool)containsPoint:(CGPoint)arg1 ;
-(double)contentsScale;
-(id)actionForLayer:(id)arg1 forKey:(id)arg2 ;
-(bool)isEditing;
-(id)selection;
-(id)beginEditing;
-(CGRect)rectForSelection:(id)arg1 ;
-(id)geometry;
-(bool)isDraggable;
-(void)drawInContext:(CGContextRef)arg1 ;
-(int)tilingMode;
@end

