/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:42 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDKnob.h>

@class TSDBezierNode, CAShapeLayer;

@interface TSDPathKnob : TSDKnob {

	TSDBezierNode* mNode;
	TSDBezierNode* mNextNode;
	TSDBezierNode* mPrevNode;
	unsigned long long mSubpathIndex;
	unsigned long long mNodeIndex;
	double mParametricT;
	double mBendParameter;
	bool mHovering;
	bool mHoveringSharp;
	CAShapeLayer* mHandleLine;

}

@property (nonatomic,retain) TSDBezierNode * node; 
@property (nonatomic,retain) TSDBezierNode * nextNode; 
@property (nonatomic,retain) TSDBezierNode * prevNode; 
@property (assign,nonatomic) unsigned long long subpathIndex; 
@property (assign,nonatomic) unsigned long long nodeIndex; 
@property (assign,nonatomic) double tValue; 
@property (assign,nonatomic) double bendParameter; 
@property (assign,nonatomic) bool hovering; 
@property (assign,nonatomic) bool hoveringSharp; 
-(bool)isHitByUnscaledPoint:(CGPoint)arg1 andRep:(id)arg2 returningDistance:(double*)arg3 ;
-(bool)overlapsWithKnob:(id)arg1 ;
-(bool)obscuresKnob:(id)arg1 ;
-(int)dragType;
-(id)underlayLayerForRep:(id)arg1 ;
-(id)initWithNode:(id)arg1 onRep:(id)arg2 ;
-(void)setNodeIndex:(unsigned long long)arg1 ;
-(void)setSubpathIndex:(unsigned long long)arg1 ;
-(id)initWithInControlForNode:(id)arg1 onRep:(id)arg2 ;
-(id)initWithOutControlForNode:(id)arg1 onRep:(id)arg2 ;
-(void)updatePositionWithTransform:(CGAffineTransform)arg1 ;
-(id)pathEditableRep;
-(unsigned long long)subpathIndex;
-(unsigned long long)nodeIndex;
-(id)p_knobHitPath;
-(void)setTValue:(double)arg1 ;
-(void)setBendParameter:(double)arg1 ;
-(bool)hovering;
-(bool)hoveringSharp;
-(id)initBendKnobOnRep:(id)arg1 ;
-(void)setHovering:(bool)arg1 ;
-(void)setHoveringSharp:(bool)arg1 ;
-(double)tValue;
-(double)bendParameter;
-(void)setNextNode:(id)arg1 ;
-(id)prevNode;
-(void)setPrevNode:(id)arg1 ;
-(void)dealloc;
-(id)node;
-(id)nextNode;
-(void)setNode:(id)arg1 ;
-(void)updateImage;
-(id)knobImage;
@end

