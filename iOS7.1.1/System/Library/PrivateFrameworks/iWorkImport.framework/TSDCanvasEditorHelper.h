/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:43 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSKChangeSourceObserver.h>

@protocol TSDCanvasEditor;
@class TSDKeyboardMovementManipulator;

@interface TSDCanvasEditorHelper : NSObject <TSKChangeSourceObserver> {

	<TSDCanvasEditor>* mCanvasEditor;
	bool mTornDown;
	TSDKeyboardMovementManipulator* mKeyboardManipulator;

}
+(id)canvasSelectionWithInfos:(id)arg1 ;
+(id)canvasSelectionWithInfos:(id)arg1 andContainer:(id)arg2 ;
+(bool)physicalKeyboardIsSender:(id)arg1 ;
+(Class)selectionClass;
-(id)interactiveCanvasController;
-(id)canvasEditor;
-(int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2 ;
-(id)canvasSelectionWithInfos:(id)arg1 ;
-(void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2 ;
-(bool)isRepSelectable:(id)arg1 ;
-(id)canvasSelectionWithInfos:(id)arg1 andContainer:(id)arg2 ;
-(void)lock:(id)arg1 ;
-(void)unlock:(id)arg1 ;
-(void)duplicate:(id)arg1 ;
-(bool)canPerformMaskWithShapeWithSender:(id)arg1 ;
-(void)unmask;
-(void)maskWithShape;
-(void)maskWithShapeType:(int)arg1 ;
-(void)reduceDocumentFileSize:(id)arg1 ;
-(void)reduceFileSizeForSelectedImages:(id)arg1 ;
-(void)alignDrawablesByEdge:(int)arg1 ;
-(void)distributeDrawablesByEdge:(int)arg1 ;
-(void)distributeDrawablesEvenly;
-(void)bringToFront:(id)arg1 ;
-(void)bringForward:(id)arg1 ;
-(void)sendBackward:(id)arg1 ;
-(void)sendToBack:(id)arg1 ;
-(void)arrowKeyReceivedInDirection:(int)arg1 withModifierKeys:(int)arg2 ;
-(bool)canDeleteComment;
-(void)deleteGuide:(id)arg1 ;
-(void)clearGuides:(id)arg1 ;
-(void)copyUserDefinedGuides:(id)arg1 ;
-(void)pasteUserDefinedGuides:(id)arg1 ;
-(id)initWithCanvasEditor:(id)arg1 ;
-(Class)editorClassForSelection:(id)arg1 ;
-(id)editorToPopToOnEndEditingForSelection:(id)arg1 ;
-(void)notifyRepsForSelectionChangeFrom:(id)arg1 to:(id)arg2 ;
-(void)pushNewEditorForSelection:(id)arg1 ;
-(id)canvasSelectionFromRep:(id)arg1 ;
-(id)pasteboardController;
-(bool)canPasteWithSender:(id)arg1 withPasteboard:(id)arg2 ;
-(bool)canUngroupWithSelection:(id)arg1 ;
-(void)insertFloatingComment;
-(void)pasteValues:(id)arg1 ;
-(void)ungroup:(id)arg1 ;
-(void)prepareGeometryForInsertingDrawables:(id)arg1 withInsertionContext:(id)arg2 ;
-(Class)p_editorClassForSelection:(id)arg1 shouldIgnoreLockedState:(bool)arg2 ;
-(Class)editorClassForSelectionIgnoringLockedState:(id)arg1 ;
-(id)newEditorForEditorClass:(Class)arg1 ;
-(id)infosFromCanvasSelection:(id)arg1 ;
-(id)layoutsForAlignAndDistribute;
-(int)canvasEditorCanPerformCutAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformCopyAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformCopyStyleAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformDeleteAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformPasteAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformDuplicateAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformPasteAsPlainTextAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformPasteValuesAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformSelectAllAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformGroupAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformUngroupAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformConnectWithConnectionLineAction:(SEL)arg1 withSender:(id)arg2 ;
-(bool)p_canCopyUserDefinedGuides;
-(bool)p_canPasteUserDefinedGuides;
-(int)canvasEditorCanPerformAlignAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformDistributeAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformBringDrawablesForwardAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)canvasEditorCanPerformSendDrawablesBackwardAction:(SEL)arg1 withSender:(id)arg2 ;
-(bool)p_canReduceFileSizeForSelectedImages;
-(bool)canPerformMaskWithSender:(id)arg1 ;
-(bool)canPerformUnmaskWithSender:(id)arg1 ;
-(bool)canPerformMaskWithShapeTypeWithSender:(id)arg1 ;
-(int)canvasEditorCanPerformLockAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)p_delete:(id)arg1 ;
-(void)p_copy:(id)arg1 ;
-(void)p_setLockStatusOfSelectedDrawables:(bool)arg1 ;
-(void)maskImage:(id)arg1 withShape:(id)arg2 shouldOpenGroup:(bool)arg3 ;
-(void)maskImage:(id)arg1 withShapeType:(int)arg2 ;
-(CGRect)p_boundingBoxForLayouts:(id)arg1 ;
-(CGPoint)p_offsetToMoveLayout:(id)arg1 edge:(int)arg2 toOffset:(double)arg3 ;
-(CGPoint)p_offsetToMoveCenterOfLayout:(id)arg1 toPoint:(CGPoint)arg2 ;
-(id)keyboardMovementManipulator;
-(void)p_copyUserDefinedGuides:(id)arg1 ;
-(id)commandForReplacingImagePlaceholderInSelection:(id)arg1 withDrawables:(id)arg2 withSender:(id)arg3 ;
-(id)commandForReplacingDrawable:(id)arg1 withDrawable:(id)arg2 ;
-(id)commandForInsertingDrawablesIntoTopLevelContainer:(id)arg1 below:(id)arg2 ;
-(id)commandForDeletingDrawablesFromTopLevelContainer:(id)arg1 ;
-(id)commandsToSwapConnectionsFromRep:(id)arg1 toInfo:(id)arg2 ;
-(void)group:(id)arg1 ;
-(void)dealloc;
-(void)mask;
-(void)cut:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)delete:(id)arg1 ;
-(void)teardown;
-(id)documentRoot;
-(void)deleteComment:(id)arg1 ;
-(void)pasteAsPlainText:(id)arg1 ;
@end

