/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:40 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDImageProvider.h>

@protocol OS_dispatch_semaphore;
@class NSObject;

@interface TSDBitmapImageProvider : TSDImageProvider {

	CGImageSourceRef mImageSource;
	CGImageRef mImage;
	CGSize mNaturalSize;
	long long mOrientation;
	bool mIsOpaque;
	bool mIsValid;
	unsigned long long mDPI;
	NSObject<OS_dispatch_semaphore>* mImageLock;
	long long mCheckIfValidToken;
	CGImageRef mHalfSizeImage;
	CGImageRef mQuarterSizeImage;

}
+(CGImageRef)CGImageForImageData:(id)arg1 ;
+(CGImageSourceRef)p_newImageSourceFromCacheForData:(id)arg1 withFilenameSuffix:(id)arg2 ;
+(id)p_cacheStringForData:(id)arg1 ;
+(CGImageSourceRef)p_newImageSourceFromFilePath:(id)arg1 ;
+(id)TSUImageForImageData:(id)arg1 ;
+(CGSize)naturalSizeForImageData:(id)arg1 ;
+(void)clearCacheForData:(id)arg1 ;
+(void)initialize;
-(bool)hasFlushableContent;
-(void)drawImageInContext:(CGContextRef)arg1 rect:(CGRect)arg2 ;
-(CGImageRef)CGImageForSize:(CGSize)arg1 inContext:(CGContextRef)arg2 orLayer:(id)arg3 ;
-(CGImageRef)CGImageForNaturalSize;
-(CGSize)dpiAdjustedNaturalSize;
-(CGSize)dpiAdjustedFillSize;
-(void)i_commonInit;
-(void)p_loadImageMetadata;
-(void)p_loadSourceRefIfNecessary;
-(CGImageRef)p_newImageFromSource:(CGImageSourceRef)arg1 ;
-(void)p_loadFullSizedImageIfNecessary;
-(CGImageSourceRef)p_newImageOfSize:(CGSize)arg1 andWriteToCacheWithSuffix:(id)arg2 ;
-(CGImageRef)p_loadOrCreateResampledImageWithScale:(unsigned long long)arg1 andCGImage:(CGImage*)arg2 ;
-(CGImageSourceRef)p_newCGImageSourceForTemporaryUse;
-(unsigned long long)imageDPI;
-(CGImageSourceRef)p_newCGImageSource;
-(void)p_configureOrientationAndSizeFromImageSource:(CGImageSourceRef)arg1 andImage:(CGImageRef)arg2 ;
-(CGImageRef)CGImageForSize:(CGSize)arg1 lowQuality:(bool)arg2 ;
-(CGImageRef)p_resampledImageOfSizeType:(int)arg1 ;
-(CGImageSourceRef)CGImageSource;
-(void)dealloc;
-(void)flush;
-(long long)orientation;
-(bool)isValid;
-(bool)isOpaque;
-(CGSize)naturalSize;
@end

