/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:51 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSWPShapeRep.h>

@class TSDFloatingCommentControlKnob, TSDFloatingCommentDeleteKnob, CALayer;

@interface TSWPCommentRep : TSWPShapeRep {

	bool _shouldShowNavigationKnobs;
	TSDFloatingCommentControlKnob* _previousKnob;
	TSDFloatingCommentControlKnob* _nextKnob;
	TSDFloatingCommentDeleteKnob* _deleteKnob;
	bool _didNavigate;
	CALayer* _headerLayer;
	CALayer* _dateLayer;
	CALayer* _authorLayer;
	bool _needsAuthorOrDateUpdate;

}
-(id)initWithLayout:(id)arg1 canvas:(id)arg2 ;
-(void)didUpdateLayer:(id)arg1 ;
-(bool)shouldShowKnobs;
-(void)didEndZooming;
-(void)viewScaleDidChange;
-(void)updatePositionsOfKnobs:(id)arg1 ;
-(id)newTrackerForKnob:(id)arg1 ;
-(void)addKnobsToArray:(id)arg1 ;
-(bool)directlyManagesVisibilityOfKnob:(id)arg1 ;
-(void)invalidateComments;
-(void)invalidateAnnotationColor;
-(void)screenScaleDidChange;
-(id)additionalLayersOverLayer;
-(void)recursivelyDrawChildrenInContext:(CGContextRef)arg1 ;
-(unsigned long long)enabledKnobMask;
-(id)newSelectionKnobForType:(int)arg1 tag:(unsigned long long)arg2 ;
-(double)selectionHighlightWidth;
-(bool)forcesPlacementOnTop;
-(void)dynamicOperationDidBegin;
-(bool)providesGuidesWhileAligning;
-(bool)exclusivelyProvidesGuidesWhileAligning;
-(bool)shouldHideSelectionHighlightDueToRectangularPath;
-(bool)shouldShowSmartShapeKnobs;
-(bool)canMakePathEditable;
-(bool)canBeUsedForImageMask;
-(bool)p_shouldDraw;
-(void)p_deleteComment;
-(void)p_previousAnnotation;
-(void)p_nextAnnotation;
-(id)p_imageForString:(id)arg1 ofSize:(CGSize)arg2 baselineOffsetFromBottom:(double)arg3 backgroundColor:(CGColorRef)arg4 foregroundColor:(CGColorRef)arg5 useSystemFontWeight:(bool)arg6 ;
-(void)willEndEditingContainedRep;
-(void)willBeginEditingContainedRep;
-(void)dealloc;
-(void)drawInContext:(CGContextRef)arg1 ;
@end

