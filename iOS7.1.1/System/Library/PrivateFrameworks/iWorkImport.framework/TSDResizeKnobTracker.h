/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:39 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDKnobTracker.h>
#import <iWorkImport/TSDDecorator.h>
#import <iWorkImport/TSDRepTracker.h>

@protocol TSDRepTrackerDelegate;
@class TSDRep, TSDLayout, TSUPointerKeyDictionary, CALayer, TSDHUDViewController;

@interface TSDResizeKnobTracker : TSDKnobTracker <TSDDecorator, TSDRepTracker> {

	bool mSnapEnabled;
	CGSize mMinimumSize;
	CGSize mMaximumSize;
	bool mCanMoveKnobAcrossOpposite;
	bool mShouldResizeFromCenter;
	TSDRep* mRepToMatch;
	CGPoint mSecondaryHUDPoint;
	CGAffineTransform mOriginalTransformInRoot;
	TSDLayout* mResizingLayout;
	TSUPointerKeyDictionary* mResizingLayoutsByRep;
	CGRect mBaseBounds;
	CGRect mLastNewBounds;
	bool mSnappedToAspectRatio;
	bool mBeganAlignmentOperation;
	CALayer* mGuideLayer;
	TSDHUDViewController* mSecondHUDController;
	<TSDRepTrackerDelegate>* mDelegate;
	bool mNeedsHUD;

}

@property (assign,nonatomic) bool snapEnabled; 
@property (assign,nonatomic) CGSize minimumSize; 
@property (assign,nonatomic) CGSize maximumSize; 
@property (assign,nonatomic) bool canMoveKnobAcrossOpposite; 
@property (nonatomic,retain) TSDRep * repToMatch; 
@property (assign,nonatomic) CGPoint secondaryHUDPoint; 
@property (assign,nonatomic) bool shouldResizeFromCenter; 
@property (assign,nonatomic) bool isInspectorDrivenTracking; 
-(bool)hasVerticalFlip;
-(bool)hasHorizontalFlip;
-(id)initWithRep:(id)arg1 knob:(id)arg2 ;
-(void)beginMovingKnob;
-(void)endMovingKnob;
-(void)changeDynamicLayoutsForReps:(id)arg1 ;
-(void)moveKnobToCanvasPosition:(CGPoint)arg1 ;
-(CGAffineTransform)resizeTransform;
-(void)p_hideHUD;
-(bool)shouldHideSelectionHighlight;
-(void)moveKnobToRepPosition:(CGPoint)arg1 ;
-(bool)shouldHideOtherKnobs;
-(void)constrainAndSnapByMovingKnobTo:(CGPoint)arg1 snappingToGuides:(bool)arg2 ;
-(void)constrainBetweenMaxAndMinSize;
-(id)currentGeometryForLayout:(id)arg1 ;
-(id)decoratorOverlayLayers;
-(CGRect)currentBoundsForStandardKnobs;
-(CGAffineTransform)transformInRootForStandardKnobs;
-(CGPoint)convertKnobPositionToUnscaledCanvas:(CGPoint)arg1 ;
-(id)resizingLayoutForRep:(id)arg1 ;
-(CGSize)currentSizeForLayout:(id)arg1 ;
-(void)p_updateHUD;
-(bool)allowHUDToDisplay;
-(CGAffineTransform)p_repTransformInRootForTransforming;
-(void)setCanMoveKnobAcrossOpposite:(bool)arg1 ;
-(bool)p_shouldApplyResizeToSiblingsOfRep;
-(void)p_cancelDelayedHUDAndGuides;
-(bool)p_isResizingFromCenter;
-(void)applyNewBoundsToRep:(id)arg1 ;
-(void)p_makeSiblingRepsPerformBlock:(/*^block*/ id)arg1 ;
-(void)p_updateGuideLayer;
-(void)p_showHUDAndGuides;
-(CGRect)p_simpleResizedRectByMovingKnobTo:(CGPoint)arg1 ;
-(bool)p_isMatchingSize;
-(id)repToMatch;
-(bool)p_isPreservingAspectRatio;
-(void)p_validateLayout;
-(void)applyNewBoundsToPrimaryRep;
-(void)p_hideGuideLayer;
-(bool)isMinimumSizeFixed;
-(id)hudLabelText;
-(CGPoint)secondaryHUDPoint;
-(bool)canCenterResize;
-(bool)shouldResizeFromCenter;
-(CGAffineTransform)transformForLayout:(id)arg1 ;
-(CGRect)i_baseBounds;
-(CGRect)i_lastNewBounds;
-(void)setShouldResizeFromCenter:(bool)arg1 ;
-(bool)snapEnabled;
-(void)setSnapEnabled:(bool)arg1 ;
-(bool)canMoveKnobAcrossOpposite;
-(void)setRepToMatch:(id)arg1 ;
-(void)setSecondaryHUDPoint:(CGPoint)arg1 ;
-(void)dealloc;
-(void)animationDidStop:(id)arg1 finished:(bool)arg2 ;
-(id)actionForLayer:(id)arg1 forKey:(id)arg2 ;
-(void)setMinimumSize:(CGSize)arg1 ;
-(CGSize)minimumSize;
-(CGSize)maximumSize;
-(void)setMaximumSize:(CGSize)arg1 ;
@end

