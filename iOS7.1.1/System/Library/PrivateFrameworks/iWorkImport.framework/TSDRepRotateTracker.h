/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:41 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDDecorator.h>
#import <iWorkImport/TSDLayoutManipulatingTracker.h>
#import <iWorkImport/TSDRepTracker.h>

@protocol TSDRepTrackerDelegate;
@class TSDRep, CAShapeLayer;

@interface TSDRepRotateTracker : NSObject <TSDDecorator, TSDLayoutManipulatingTracker, TSDRepTracker> {

	TSDRep* mRep;
	bool mDidBeginRotation;
	bool mMovedMinimumDistance;
	CGPoint mCenterForRotation;
	double mSnapThreshold;
	double mRotateDeltaInRadians;
	double mCurrentLogicalAngleInDegrees;
	double mCurrentPhysicalAngleInDegrees;
	double mPreviousSnap;
	double mOriginalAngleInDegrees;
	double mOriginalAngleForRotationInDegrees;
	CAShapeLayer* mGuideLayer;
	bool mHaveSproingedHUD;
	bool mShouldShowHUD;
	<TSDRepTrackerDelegate>* mDelegate;
	TSDRep* mOriginalNonFloatingRep;
	bool mIsInspectorDrivenTracking;

}

@property (nonatomic,retain) TSDRep * rep; 
@property (assign,nonatomic) bool shouldShowHUD; 
@property (assign,nonatomic) CGPoint centerForRotation; 
@property (nonatomic,readonly) double currentLogicalAngleInDegrees; 
@property (nonatomic,readonly) double originalAngleInDegrees; 
@property (assign,nonatomic) double snapThreshold; 
@property (assign,nonatomic) bool isInspectorDrivenTracking; 
-(id)initWithRep:(id)arg1 ;
-(id)rep;
-(void)changeDynamicLayoutsForReps:(id)arg1 ;
-(bool)shouldOpenCommandGroupToCommitChangesForReps:(id)arg1 ;
-(CGPoint)centerForRotation;
-(void)p_hideHUD;
-(bool)isInspectorDrivenTracking;
-(void)setIsInspectorDrivenTracking:(bool)arg1 ;
-(void)commitChangesForReps:(id)arg1 ;
-(bool)supportsAlignmentGuides;
-(bool)operationShouldBeDynamic;
-(id)decoratorOverlayLayers;
-(CGAffineTransform)rotateTransform;
-(void)setRep:(id)arg1 ;
-(void)p_makeSiblingRepsPerformBlock:(/*^block*/ id)arg1 ;
-(void)p_hideGuideLayer;
-(void)p_updateHUDWithAngle:(double)arg1 ;
-(void)p_sproingHUD;
-(void)p_updateGuideLayerWithAngle:(double)arg1 didSnap:(bool)arg2 ;
-(void)p_begin;
-(bool)p_shouldApplyRotateToSiblingsOfRep;
-(bool)shouldShowHUD;
-(void)addRotateDelta:(double)arg1 ;
-(void)setShouldShowHUD:(bool)arg1 ;
-(void)setCenterForRotation:(CGPoint)arg1 ;
-(double)currentLogicalAngleInDegrees;
-(double)originalAngleInDegrees;
-(double)snapThreshold;
-(void)setSnapThreshold:(double)arg1 ;
-(void)dealloc;
-(void)animationDidStop:(id)arg1 finished:(bool)arg2 ;
-(id)actionForLayer:(id)arg1 forKey:(id)arg2 ;
@end

