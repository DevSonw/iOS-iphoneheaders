/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:48 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDContainerRep.h>
#import <iWorkImport/TSKHighlightArrayControllerProtocol.h>
#import <iWorkImport/TSKPulseAnimationControllerProtocol.h>
#import <iWorkImport/TSWPHyperlinkHostRepProtocol.h>
#import <iWorkImport/TSDDecorator.h>

@class CALayer, CAShapeLayer, TSKHighlightArrayController, TSKPulseAnimationController, TSWPSelection, TSWPSearchReference, NSArray, TSWPLayout, TSWPStorage, TSWPEditingController;

@interface TSWPRep : TSDContainerRep <TSKHighlightArrayControllerProtocol, TSKPulseAnimationControllerProtocol, TSWPHyperlinkHostRepProtocol, TSDDecorator> {

	CALayer* _textLayers[2];
	CALayer* _caretLayer;
	CAShapeLayer* _selectionLineLayers[2];
	CAShapeLayer* _selectionHighlightLayer;
	CAShapeLayer* _selectionParagraphBorderLayer;
	CAShapeLayer* _markHighlightLayer;
	CAShapeLayer* _smartFieldHighlightLayer;
	CAShapeLayer* _secondaryHighlightLayer;
	NSRange _secondaryHighlightRange;
	int _secondaryHighlightPathStyle;
	TSKHighlightArrayController* _pulseArrayController;
	TSKHighlightArrayController* _highlightArrayController;
	TSKPulseAnimationController* _caretPulseController;
	bool _caretAnimationDisabled;
	bool _suppressCaret;
	NSRange _suppressedMisspellingRange;
	bool _updatingHighlights;
	bool _suppressSelectionHighlight;
	NSRange _dragRange;
	TSWPSelection* _lastSelection;
	bool _selectionChanged;
	bool _markChanged;
	unsigned long long _newSelectionFlags;
	bool _repFieldsAreActive;
	bool _secondaryHighlightChanged;
	bool _indentAnimationRunning;
	CALayer* _indentAnimationLayer;
	long long _indentDelta;
	SEL _indentSelector;
	id _indentTarget;
	bool _hudStateDirty;
	bool _invalidateHUDState;
	bool _useKeyboardWhenEditing;
	CALayer* _dragAndDropCaretLayer;
	TSWPSelection* _dropSelection;
	bool _findIsShowing;
	TSWPSearchReference* _activeSearchReference;
	NSArray* _searchReferences;

}

@property (nonatomic,retain) TSWPSearchReference * activeSearchReference;                                        //@synthesize activeSearchReference=_activeSearchReference - In the implementation block
@property (assign,nonatomic) bool findIsShowing;                                                                 //@synthesize findIsShowing=_findIsShowing - In the implementation block
@property (nonatomic,readonly) TSWPLayout * layout; 
@property (nonatomic,readonly) TSWPStorage * storage; 
@property (nonatomic,readonly) NSArray * columns; 
@property (nonatomic,readonly) TSWPSelection * selection; 
@property (assign,getter=isSelectionHighlightSuppressed,nonatomic) bool suppressSelectionHighlight;              //@synthesize suppressSelectionHighlight=_suppressSelectionHighlight - In the implementation block
@property (assign,nonatomic) NSRange dragRange;                                                                  //@synthesize dragRange=_dragRange - In the implementation block
@property (nonatomic,readonly) TSWPEditingController * textEditor; 
@property (assign,nonatomic) bool useKeyboardWhenEditing;                                                        //@synthesize useKeyboardWhenEditing=_useKeyboardWhenEditing - In the implementation block
@property (assign,nonatomic) TSWPSelection * dropSelection;                                                      //@synthesize dropSelection=_dropSelection - In the implementation block
@property (nonatomic,readonly) bool textIsVertical; 
@property (nonatomic,readonly) CGAffineTransform transformToConvertNaturalToScaledRoot; 
@property (nonatomic,retain) NSArray * searchReferences;                                                         //@synthesize searchReferences=_searchReferences - In the implementation block
-(id)storage;
-(id)hyperlinkRegions;
-(id)initWithLayout:(id)arg1 canvas:(id)arg2 ;
-(void)willBeRemoved;
-(void)didUpdateLayer:(id)arg1 ;
-(void)didDrawInLayer:(id)arg1 context:(CGContextRef)arg2 ;
-(bool)shouldShowKnobs;
-(void)willBeginZooming;
-(void)didEndZooming;
-(void)viewScaleDidChange;
-(void)viewScrollingEnded;
-(bool)directlyManagesLayerContent;
-(void)addAdditionalChildLayersToArray:(id)arg1 ;
-(void)updateFromLayout;
-(int)dragTypeAtCanvasPoint:(CGPoint)arg1 ;
-(void)addKnobsToArray:(id)arg1 ;
-(void)invalidateKnobs;
-(id)textEditor;
-(CGPathRef)newPathForSearchReference:(id)arg1 ;
-(bool)canEditWithEditor:(id)arg1 ;
-(id)imageForSearchReference:(id)arg1 forPath:(CGPathRef)arg2 shouldPulsate:(bool)arg3 ;
-(void)drawInLayerContext:(CGContextRef)arg1 ;
-(bool)wantsToHandleTapsWhenLocked;
-(bool)handleSingleTapAtPoint:(CGPoint)arg1 ;
-(void)screenScaleDidChange;
-(id)decoratorOverlayLayers;
-(void)gesturesDidEnd;
-(id)repForDragging;
-(bool)shouldCreateSelectionKnobs;
-(bool)shouldCreateLockedKnobs;
-(bool)shouldIgnoreSingleTapAtPoint:(CGPoint)arg1 withRecognizer:(id)arg2 ;
-(bool)wantsToHandleTapsOnContainingGroup;
-(bool)handlesEditMenu;
-(id)activeSearchReference;
-(void)setActiveSearchReference:(id)arg1 ;
-(void)pulseAnimationDidStopForPulse:(id)arg1 ;
-(void)pulseAnimationDidStop:(id)arg1 ;
-(bool)textIsVertical;
-(CGRect)caretRectForSelection:(id)arg1 ;
-(CGRect)glyphRectForRange:(NSRange)arg1 includingLabel:(bool)arg2 ;
-(CGRect)glyphRectForRubyFieldAtCharIndex:(unsigned long long)arg1 glyphRange:(NSRange)arg2 ;
-(unsigned long long)glyphCountForRubyFieldAtCharIndex:(unsigned long long)arg1 ;
-(CGRect)columnRectForRange:(NSRange)arg1 ;
-(void)p_hideSelectionLayers;
-(bool)p_shouldDisplaySelectionControls;
-(void)i_setNeedsErasableDisplayInRange:(NSRange)arg1 ;
-(void)p_selectionChangedNotification:(id)arg1 ;
-(void)p_selectionContentsChangedNotification:(id)arg1 ;
-(void)p_markChangedNotification:(id)arg1 ;
-(void)p_editingDidEndNotification:(id)arg1 ;
-(void)p_activeFindHighlightChangedNotification:(id)arg1 ;
-(void)p_findUIStateChangedNotification:(id)arg1 ;
-(void)p_didDismissPopover:(id)arg1 ;
-(void)p_setActiveSearchReference:(id)arg1 ;
-(void)p_setSearchReferencesToHighlight:(id)arg1 ;
-(void)p_teardown;
-(CGPoint)p_pinPoint:(CGPoint)arg1 toRect:(CGRect)arg2 ;
-(id)closestColumnForPoint:(CGPoint)arg1 ;
-(CGRect)p_caretRectForSelection:(id)arg1 ;
-(id)columnForCharIndex:(unsigned long long)arg1 ;
-(SCD_Struct_TS575)lineMetricsAtCharIndex:(unsigned long long)arg1 ;
-(CGAffineTransform)transformToConvertNaturalToScaledRoot;
-(CGPoint)pinToNaturalBounds:(CGPoint)arg1 andLastLineFragment:(bool)arg2 ;
-(unsigned long long)charIndexFromPoint:(CGPoint)arg1 allowPastBreak:(bool)arg2 isAtEndOfLine:(bool*)arg3 ;
-(CGRect)caretRectForCharIndex:(unsigned long long)arg1 caretAffinity:(int)arg2 ;
-(unsigned long long)charIndexFromPoint:(CGPoint)arg1 allowPastBreak:(bool)arg2 allowNotFound:(bool)arg3 isAtEndOfLine:(bool*)arg4 leadingEdge:(bool*)arg5 ;
-(unsigned long long)charIndexFromPoint:(CGPoint)arg1 allowPastBreak:(bool)arg2 allowNotFound:(bool)arg3 pastCenterGoesToNextChar:(bool)arg4 isAtEndOfLine:(bool*)arg5 leadingEdge:(bool*)arg6 ;
-(void)p_destroyLayer:(int)arg1 ;
-(void)p_createLayer:(int)arg1 ;
-(id)smartFieldAtPoint:(CGPoint)arg1 ;
-(bool)p_hasVisibleContents;
-(void)performBlockOnTextLayers:(/*^block*/ id)arg1 ;
-(void)drawInContext:(CGContextRef)arg1 limitSelection:(id)arg2 suppressInvisibles:(bool)arg3 ;
-(void)p_drawTextInLayer:(id)arg1 context:(CGContextRef)arg2 limitSelection:(id)arg3 rubyGlyphRange:(NSRange)arg4 renderMode:(int)arg5 suppressInvisibles:(bool)arg6 ;
-(id)textLayer;
-(bool)p_hasEmptyList;
-(id)p_newCaretLayerWithZPosition:(double)arg1 ;
-(void)p_createSelectionHighlightLayer;
-(void)p_createSelectionParagraphBorderLayer;
-(void)p_createMarkHighlightLayer;
-(void)p_createSmartFieldHighlightLayer;
-(void)p_updateForCurrentSelectionWithFlags:(unsigned long long)arg1 ;
-(void)p_invalidateCommentKnobs;
-(void)i_setNeedsDisplayForSelectionChange;
-(void)invalidateHUDState;
-(void)p_updateMarkHighlightLayer;
-(void)p_updateHighlights;
-(void)p_updateAnimationWithAnimatingPulse:(bool)arg1 ;
-(void)p_updateSecondaryHighlightLayer;
-(CGRect)newTextLayerUnscaledBounds:(CGRect)arg1 forNewTextBounds:(CGRect)arg2 ;
-(CGRect)p_clipRect:(CGRect)arg1 ;
-(void)setSecondaryHighlightRange:(NSRange)arg1 color:(CGColorRef)arg2 pathStyle:(int)arg3 ;
-(void)p_hideCaretLayer;
-(void)p_stopCaretLayerAnimation;
-(void)p_startCaretLayerAnimation;
-(id)p_imageForRect:(CGRect)arg1 usingGlyphRect:(bool)arg2 drawBackground:(bool)arg3 shouldPulsate:(bool)arg4 forCaret:(bool)arg5 drawSelection:(id)arg6 suppressInvisibles:(bool)arg7 ;
-(CGRect)naturalBoundsRectForHyperlinkField:(id)arg1 ;
-(void)p_addRoundedRectToContext:(CGContextRef)arg1 rect:(CGRect)arg2 forCaret:(bool)arg3 ;
-(void)p_addRectToContext:(CGContextRef)arg1 rect:(CGRect)arg2 ;
-(void)p_hideMarkHighlightLayer;
-(bool)doesNeedDisplayOnEditingDidEnd;
-(id)lineSearchReferencesForSearchReference:(id)arg1 ;
-(void)p_setSelectionLineLayersHidden:(bool)arg1 ;
-(bool)p_isSelectionSingleAnchoredDrawableAttachment;
-(CGRect)p_paragraphModeRectangleForColumn:(id)arg1 selection:(id)arg2 ;
-(bool)p_paragraphModeBorderNeededForColumn:(id)arg1 dragCharIndex:(unsigned long long)arg2 knobTag:(unsigned long long)arg3 ;
-(id)p_lineSelectionsForSelection:(id)arg1 ;
-(void)p_hideSelectionHighlightLayer;
-(void)p_hideSelectionParagraphBorderLayer;
-(id)textBackgroundLayer;
-(void)p_drawTextLayerInContext:(CGContextRef)arg1 ;
-(void)p_drawTextBackgroundLayerInContext:(CGContextRef)arg1 ;
-(CGColorRef)p_caretLayerColor;
-(CGRect)p_convertNaturalRectToRotated:(CGRect)arg1 repAngle:(double)arg2 ;
-(void)p_setSelectionHighlightColor;
-(void)p_updateSmartFieldHighlightLayer;
-(void)p_setPulseControllerActive:(bool)arg1 autohide:(bool)arg2 ;
-(id)searchReferences;
-(void)setSearchReferences:(id)arg1 ;
-(id)textImageForSelection:(id)arg1 frame:(CGRect*)arg2 usingGlyphRect:(bool)arg3 shouldPulsate:(bool)arg4 suppressInvisibles:(bool)arg5 ;
-(void)setHighlightedHyperlinkField:(id)arg1 ;
-(void)willDisplayEditHyperlinkUIForHyperlinkField:(id)arg1 beginEditing:(bool)arg2 ;
-(id)hyperlinkContainerRep;
-(void)setSuppressSelectionHighlight:(bool)arg1 ;
-(void)setDragRange:(NSRange)arg1 ;
-(void)setDropSelection:(id)arg1 ;
-(CGPoint)pinToClosestColumn:(CGPoint)arg1 ;
-(bool)isPointInSelectedArea:(CGPoint)arg1 ;
-(CGRect)rectForSelection:(id)arg1 includeRuby:(bool)arg2 ;
-(CGRect)caretRectForCharIndex:(unsigned long long)arg1 leadingEdge:(bool)arg2 caretAffinity:(int)arg3 ;
-(SCD_Struct_TS575)lineMetricsAtPoint:(CGPoint)arg1 ;
-(SCD_Struct_TS587)wordMetricsAtCharIndex:(unsigned long long)arg1 ;
-(CGRect)p_topicDragRectForSelection:(id)arg1 ;
-(CGPoint)knobCenterForSelection:(id)arg1 knob:(id)arg2 ;
-(double)knobOffsetForKnob:(id)arg1 paragraphMode:(bool)arg2 ;
-(unsigned long long)charIndexForPointWithPinning:(CGPoint)arg1 ;
-(unsigned long long)charIndexForPointWithPinning:(CGPoint)arg1 isTail:(bool)arg2 selectionType:(int)arg3 ;
-(void)verticalTextPropertyChanged;
-(void)spellCheckingStateChanged;
-(id)p_hyperlinkAtPoint:(CGPoint)arg1 ;
-(void)setNeedsDisplayInRange:(NSRange)arg1 ;
-(void)drawRubyInContext:(CGContextRef)arg1 rubyFieldStart:(unsigned long long)arg2 rubyGlyphRange:(NSRange)arg3 ;
-(Class)wpEditorClass;
-(id)rubyFieldAtPoint:(CGPoint)arg1 ;
-(id)footnoteMarkAttachmentAtPoint:(CGPoint)arg1 ;
-(id)footnoteReferenceAttachmentAtPoint:(CGPoint)arg1 ;
-(void)clearSecondaryHighlight;
-(void)disableCaretAnimation;
-(void)enableCaretAnimation;
-(void)pulseCaret;
-(id)repForCharIndex:(unsigned long long)arg1 isStart:(bool)arg2 ;
-(bool)shouldCreateTextKnobs;
-(void)animateIndent:(long long)arg1 target:(id)arg2 action:(SEL)arg3 ;
-(CGRect)labelRectForCharIndex:(unsigned long long)arg1 ;
-(unsigned long long)charCountOfGlyphStartingAtCharIndex:(unsigned long long)arg1 ;
-(void)p_updateLayersForInsertionPointSelection:(id)arg1 ;
-(id)textImageForRect:(CGRect)arg1 ;
-(bool)isOverflowing;
-(void)editingDidEnd;
-(CGPathRef)p_createPathForParagraphSelection:(id)arg1 needsParagraphBorder:(bool)arg2 ;
-(CGPathRef)p_newSelectionPathForRange:(NSRange)arg1 headKnobRect:(CGRect*)arg2 tailKnobRect:(CGRect*)arg3 selectionType:(int)arg4 selection:(id)arg5 ;
-(void)p_updateLayersForRangeSelection:(id)arg1 selectionFlags:(unsigned long long)arg2 ;
-(bool)p_positionCaretLayer:(id)arg1 forSelection:(id)arg2 layerRelative:(bool)arg3 ;
-(void)p_showCaretLayer;
-(void)p_createSelectionLineLayers;
-(void)p_showSelectionParagraphBorderLayerWithPath:(CGPathRef)arg1 ;
-(void)p_hideSmartFieldHighlightLayer;
-(id)selectionForDragAndDropNaturalPoint:(CGPoint)arg1 dragIsTopicSelection:(bool)arg2 ;
-(bool)useKeyboardWhenEditing;
-(void)setUseKeyboardWhenEditing:(bool)arg1 ;
-(bool)isSelectionHighlightSuppressed;
-(NSRange)dragRange;
-(id)dropSelection;
-(bool)findIsShowing;
-(void)setFindIsShowing:(bool)arg1 ;
-(void)viewDidAppear;
-(void)dealloc;
-(void)setNeedsDisplay;
-(Class)layerClass;
-(void)setNeedsDisplayInRect:(CGRect)arg1 ;
-(void)drawLayer:(id)arg1 inContext:(CGContextRef)arg2 ;
-(id)actionForLayer:(id)arg1 forKey:(id)arg2 ;
-(bool)isEditing;
-(id)selection;
-(id)beginEditing;
-(CGRect)rectForSelection:(id)arg1 ;
-(NSRange)range;
-(CGRect)caretRect;
-(id).cxx_construct;
-(CGRect)selectionRect;
-(CGRect)closestCaretRectForPoint:(CGPoint)arg1 inSelection:(bool)arg2 ;
-(void)willEnterForeground;
-(id)siblings;
-(id)columns;
-(void)didEnterBackground;
-(CGRect)clipRect;
-(void)drawInContext:(CGContextRef)arg1 ;
-(int)tilingMode;
@end

