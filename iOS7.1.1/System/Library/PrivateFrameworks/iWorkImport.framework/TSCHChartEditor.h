/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:34 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDDrawableEditor.h>
#import <iWorkImport/TSDStylePresetsInspectorPaneDelegate.h>

@class TSCHSelection, TSCHTextEditing, TSCHChartType, NSMutableDictionary, TSCHChartAxisID, NSDictionary, TSDLayout, TSCHChartDrawableInfo;

@interface TSCHChartEditor : TSDDrawableEditor <TSDStylePresetsInspectorPaneDelegate> {

	TSCHSelection* mSelection;
	TSCHTextEditing* mTextEditor;
	TSCHChartType* mDisplayedChartType;
	NSMutableDictionary* mSubselectionState;
	TSCHChartAxisID* mInspectorAxisID;
	NSDictionary* _selectedDataSetNameIndexesByInfo;

}

@property (nonatomic,retain) TSCHTextEditing * textEditor; 
@property (nonatomic,readonly) TSDLayout * firstLayout; 
@property (nonatomic,copy) TSCHChartAxisID * inspectorAxisID; 
@property (nonatomic,readonly) NSDictionary * chartSubselectionState; 
@property (nonatomic,readonly) NSDictionary * selectedChartTitleIndexesByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedDataSetNameIndexesByInfo;                    //@synthesize selectedDataSetNameIndexesByInfo=_selectedDataSetNameIndexesByInfo - In the implementation block
@property (nonatomic,readonly) NSDictionary * selectedLegendsIndexesByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedValueAxisIDsByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedCategoryAxisIDsByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedAxisTitleAxisIDsByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedAxisLabelsAxisIDsByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedAxisSeriesLabelsAxisIDsByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedSeriesIndexesByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedSeriesValueLabelIndexesByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedErrorBarGroupsByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedTrendLineIndexesByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedTrendLineEquationIndexesByInfo; 
@property (nonatomic,readonly) NSDictionary * selectedTrendLineR2IndexesByInfo; 
@property (nonatomic,readonly) bool hasSeriesSelection; 
@property (nonatomic,readonly) bool hasSeriesValueLabelSelection; 
@property (nonatomic,readonly) bool hasChartTitleSelection; 
@property (nonatomic,readonly) bool hasChartDataSetNameSelection; 
@property (nonatomic,readonly) bool hasAxisTitleSelection; 
@property (nonatomic,readonly) bool hasLegendSelection; 
@property (nonatomic,readonly) bool hasAxisLabelsSelection; 
@property (nonatomic,readonly) bool hasAxisSeriesLabelsSelection; 
@property (nonatomic,readonly) bool hasErrorBarSelection; 
@property (nonatomic,readonly) bool hasTrendLineSelection; 
@property (nonatomic,readonly) bool hasTrendLineEquationSelection; 
@property (nonatomic,readonly) bool hasTrendLineR2Selection; 
@property (nonatomic,readonly) TSCHChartDrawableInfo * firstChartInfo; 
@property (assign,nonatomic) TSCHChartType * displayedChartType; 
+(id)keyPathsForValuesAffectingSelectedValueAxisIDsByInfo;
+(id)keyPathsForValuesAffectingSelectedCategoryAxisIDsByInfo;
+(id)keyPathsForValuesAffectingSelectedSeriesIndexesByInfo;
+(id)keyPathsForValuesAffectingSelectedSeriesValueLabelIndexesByInfo;
+(id)keyPathsForValuesAffectingHasSeriesSelection;
+(id)keyPathsForValuesAffectingHasSeriesValueLabelSelection;
+(id)keyPathsForValuesAffectingSelectedAxisTitleAxisIDsByInfo;
+(id)keyPathsForValuesAffectingHasAxisTitleSelection;
+(id)keyPathsForValuesAffectingSelectedAxisLabelsAxisIDsByInfo;
+(id)keyPathsForValuesAffectingHasAxisLabelsSelection;
+(id)keyPathsForValuesAffectingSelectedAxisSeriesLabelsAxisIDsByInfo;
+(id)keyPathsForValuesAffectingHasAxisSeriesLabelsSelection;
+(id)keyPathsForValuesAffectingChartSubselectionState;
+(id)keyPathsForValuesAffectingSelectedChartTitleIndexesByInfo;
+(id)keyPathsForValuesAffectingSelectedChartDataSetNameIndexesByInfo;
+(id)keyPathsForValuesAffectingHasChartTitleSelection;
+(id)keyPathsForValuesAffectingHasChartDataSetNameSelection;
+(id)keyPathsForValuesAffectingselectedLegendsIndexesByInfo;
+(id)keyPathsForValuesAffectingSelectedErrorBarGroupsByInfo;
+(id)keyPathsForValuesAffectingSelectedTrendLineIndexesByInfo;
+(id)keyPathsForValuesAffectingSelectedTrendLineEquationIndexesByInfo;
+(id)keyPathsForValuesAffectingSelectedTrendLineR2IndexesByInfo;
+(id)keyPathsForValuesAffectingHasErrorBarSelection;
+(id)keyPathsForValuesAffectingHasTrendLineSelection;
+(id)keyPathsForValuesAffectingHasTrendLineEquationSelection;
+(id)keyPathsForValuesAffectingHasTrendLineR2Selection;
+(id)keyPathsForValuesAffectingHasLegendSelection;
+(bool)automaticallyNotifiesObserversOfSelection;
-(void)setInfos:(id)arg1 ;
-(id)allSelectedPathsForInfo:(id)arg1 ;
-(void)setSeriesType:(id)arg1 ;
-(void)enterChartDataEditor:(id)arg1 ;
-(id)selectedPathsOfType:(id)arg1 forInfo:(id)arg2 ;
-(id)initWithInteractiveCanvasController:(id)arg1 ;
-(id)textEditor;
-(void)setTextEditor:(id)arg1 ;
-(void)p_removeSubselectionStateForInfos:(id)arg1 ;
-(void)p_notifyRepsEditorIsDeselectingInfos:(id)arg1 ;
-(void)p_notifyRepsEditorIsSelectingInfos:(id)arg1 ;
-(id)p_layoutForInfo:(id)arg1 ;
-(id)firstChartInfo;
-(int)p_canPerformFormatActions:(SEL)arg1 withSender:(id)arg2 ;
-(bool)p_isInSubselectionMode;
-(int)p_canPerformSubselectionEditorAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)p_canPerformEditorAction:(SEL)arg1 withSender:(id)arg2 ;
-(int)p_canPerformShowHideActions:(id)arg1 isEnabled:(bool)arg2 showStr:(id)arg3 hideStr:(id)arg4 property:(int)arg5 styleOwner:(id)arg6 ;
-(int)p_canPerformShowHideSeriesActions:(id)arg1 chartDrawableInfo:(id)arg2 isEnabled:(bool)arg3 showStr:(id)arg4 hideStr:(id)arg5 property:(int)arg6 ;
-(int)p_canPerformShowHideAxisActions:(id)arg1 chartDrawableInfo:(id)arg2 isEnabled:(bool)arg3 showStr:(id)arg4 hideStr:(id)arg5 property:(int)arg6 axisType:(int)arg7 ordinal:(unsigned long long)arg8 ;
-(void)showOrHideChartDataEditor:(id)arg1 ;
-(int)p_canPerformShowOrHideChartDataEditor:(id)arg1 ;
-(void)strikethrough:(id)arg1 ;
-(void)showOrHideChartTitle:(id)arg1 ;
-(void)showOrHideChartLegend:(id)arg1 ;
-(void)showOrHideChartBorders:(id)arg1 ;
-(id)displayedChartType;
-(void)showOrHideYAxisTitle:(id)arg1 ;
-(void)showOrHideYAxisLabels:(id)arg1 ;
-(void)showOrHideYAxis2Title:(id)arg1 ;
-(void)showOrHideYAxis2Labels:(id)arg1 ;
-(void)showOrHideXAxisTitle:(id)arg1 ;
-(void)showOrHideXAxisLabels:(id)arg1 ;
-(void)showOrHideSeriesNames:(id)arg1 ;
-(int)p_canDoShowOrHideSeriesNames:(id)arg1 ;
-(void)showOrHideSeriesValueLabels:(id)arg1 ;
-(int)p_canDoShowOrHideSeriesValueLabels:(id)arg1 ;
-(void)changeChartTypeForTag:(id)arg1 ;
-(int)p_canPerformChangeChartType:(id)arg1 ;
-(int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)deselectAll:(id)arg1 ;
-(void)selectParent:(id)arg1 ;
-(id)selectedSeriesIndexesByInfo;
-(id)p_chartRepsForInfos:(id)arg1 ;
-(void)p_subselectionStateWillChangeForInfo:(id)arg1 ;
-(void)p_subselectionStateChangedForInfo:(id)arg1 ;
-(id)p_pathTypesNotSupportedForSelection;
-(id)p_allNoncompatiblePathTypesForPathType:(id)arg1 info:(id)arg2 ;
-(void)p_sendKVONotificationForSubselectionChangeOfType:(id)arg1 forWillNotDid:(bool)arg2 ;
-(void)selectPath:(id)arg1 forInfo:(id)arg2 ;
-(void)deselectPath:(id)arg1 forInfo:(id)arg2 ;
-(void)setSelectionPaths:(id)arg1 forPathType:(id)arg2 info:(id)arg3 ;
-(id)selectedIndexesOfType:(id)arg1 forInfo:(id)arg2 ;
-(id)p_selectedArgumentsByInfoOfType:(id)arg1 ;
-(id)p_selectedIndexesByInfoOfType:(id)arg1 ;
-(void)setSelection:(id)arg1 withFlags:(unsigned long long)arg2 ;
-(void)clearSelectedPathsForInfo:(id)arg1 ;
-(bool)forceCanvasTextEditingToEnd;
-(bool)allSelectedChartsMatch;
-(void)p_postSyncCommand:(id)arg1 ;
-(void)p_setAllSeriesProperty:(int)arg1 toValue:(id)arg2 onChart:(id)arg3 groupOpen:(bool*)arg4 ;
-(void)p_setInfoObject:(id)arg1 forProperty:(int)arg2 ;
-(void)p_toggleTextProperty:(int)arg1 onValue:(int)arg2 offValue:(int)arg3 ;
-(int)p_calculateNewToggleTextProperty:(int)arg1 onValue:(int)arg2 offValue:(int)arg3 ;
-(void)p_testAndSetSelectedSeriesIntProperty:(int)arg1 toValue:(id)arg2 ;
-(void)p_testAndSetAllSeriesIntProperty:(int)arg1 toValue:(id)arg2 ;
-(void)p_postCommand:(id)arg1 ;
-(void)p_testAndSetAllSeriesFloatProperty:(int)arg1 toValue:(id)arg2 ;
-(void)p_setAllSeriesProperty:(int)arg1 toValue:(id)arg2 ;
-(id)tuplesToSetSeriesType:(id)arg1 selectedSeries:(id)arg2 forInfo:(id)arg3 ;
-(void)p_testAndSetBool:(bool)arg1 forAxisID:(id)arg2 withProperty:(int)arg3 ;
-(void)p_testAndSetInt:(long long)arg1 forAxisID:(id)arg2 withProperty:(int)arg3 ;
-(void)p_testUserMinMaxProperty:(int)arg1 andSetDouble:(double)arg2 forAxisID:(id)arg3 ;
-(void)p_testAndSetFloat:(float)arg1 forAxisID:(id)arg2 withProperty:(int)arg3 ;
-(id)p_allSelectionPathsForPathType:(id)arg1 info:(id)arg2 ;
-(id)stylePresetKindForInspector;
-(void)stylePresetInspector:(id)arg1 didSelectPreset:(id)arg2 ;
-(id)imageForPreset:(id)arg1 size:(CGSize)arg2 ;
-(id)moreOptionsTitle;
-(id)optionalTopSectionCellArrayForPresetPane:(id)arg1 ;
-(id)firstLayout;
-(void)didBecomeCurrentEditor;
-(void)willResignCurrentEditor;
-(bool)shouldEndEditingToBeginEditingRep:(id)arg1 ;
-(bool)p_canShowChartDataEditor;
-(id)p_orderedChartTypeArray;
-(bool)canSelectPath:(id)arg1 ;
-(void)toggleSelectionOfPath:(id)arg1 forInfo:(id)arg2 ;
-(void)extendSelectionWithPath:(id)arg1 forInfo:(id)arg2 ;
-(id)allSelectedChartsDimensions;
-(id)selectedValueAxisIDsByInfo;
-(id)selectedCategoryAxisIDsByInfo;
-(id)selectedSeriesValueLabelIndexesByInfo;
-(bool)hasSeriesSelection;
-(bool)hasSeriesValueLabelSelection;
-(id)selectedAxisTitleAxisIDsByInfo;
-(bool)hasAxisTitleSelection;
-(id)selectedAxisLabelsAxisIDsByInfo;
-(bool)hasAxisLabelsSelection;
-(id)selectedAxisSeriesLabelsAxisIDsByInfo;
-(bool)hasAxisSeriesLabelsSelection;
-(id)chartSubselectionState;
-(id)selectedChartTitleIndexesByInfo;
-(id)selectedChartDataSetNameIndexesByInfo;
-(bool)hasChartTitleSelection;
-(bool)hasChartDataSetNameSelection;
-(id)selectedLegendsIndexesByInfo;
-(id)selectedErrorBarGroupsByInfo;
-(id)selectedTrendLineIndexesByInfo;
-(id)selectedTrendLineEquationIndexesByInfo;
-(id)selectedTrendLineR2IndexesByInfo;
-(bool)hasErrorBarSelection;
-(bool)hasTrendLineSelection;
-(bool)hasTrendLineEquationSelection;
-(bool)hasTrendLineR2Selection;
-(bool)hasLegendSelection;
-(void)setSelectionWithSearchReference:(id)arg1 ;
-(id)editingSearchReference;
-(double)viewScaleForSelectionWithTargetPointSize:(double)arg1 ;
-(id)topLevelInspectorViewControllers;
-(id)topLevelInspectorAutosaveName;
-(void)forceDataEditingToEnd;
-(void)stylePresetInspector:(id)arg1 didSelectPresetForNonDestructiveApply:(id)arg2 ;
-(unsigned long long)p_currentChartSegmentIndex:(id)arg1 ;
-(void)setShowChartTitle:(bool)arg1 ;
-(void)setChartTitleAlignment:(int)arg1 ;
-(void)setTextProperties:(id)arg1 forSelection:(id)arg2 ;
-(void)setShowChartLegend:(bool)arg1 ;
-(void)setShowChartBorder:(bool)arg1 ;
-(void)setSymbolType:(long long)arg1 useSelection:(bool)arg2 ;
-(void)setConnectedLineType:(long long)arg1 setShowLine:(bool)arg2 useSelection:(bool)arg3 ;
-(void)setAxisForSelectedSeries:(long long)arg1 ;
-(void)setMultiDataControlType:(long long)arg1 ;
-(void)setMultiDataSetNameLocation:(long long)arg1 ;
-(void)setChartLabelPosition:(long long)arg1 useSelection:(bool)arg2 ;
-(void)setChartLabelExplosion:(float)arg1 labelsOn:(bool)arg2 ;
-(void)setSeriesPercentNumberFormat:(id)arg1 ;
-(void)setSeriesNumberFormat:(id)arg1 ;
-(void)setSeriesNumberFormatType:(int)arg1 ;
-(void)setSeriesNumberFormat:(id)arg1 withFormatType:(int)arg2 ;
-(void)setShowSeriesLabels:(bool)arg1 ;
-(void)setShowNegativeBubbles:(bool)arg1 ;
-(void)setBubbleDimensionType:(long long)arg1 ;
-(void)setSeriesLabelValueAxis:(long long)arg1 ;
-(void)setAllFontsToFamilyNamed:(id)arg1 ;
-(void)multiplyAllFontSizesBy:(double)arg1 ;
-(void)setShowLabels:(bool)arg1 forAxisID:(id)arg2 ;
-(void)setShowSeriesLabels:(bool)arg1 forAxisID:(id)arg2 ;
-(void)setShowMajorGridlines:(bool)arg1 forAxisID:(id)arg2 ;
-(void)setShowMajorTickmarks:(bool)arg1 forAxisID:(id)arg2 ;
-(void)setShowMinorGridlines:(bool)arg1 forAxisID:(id)arg2 ;
-(void)setShowMinorTickmarks:(bool)arg1 forAxisID:(id)arg2 ;
-(void)setShowTitle:(bool)arg1 forAxisID:(id)arg2 ;
-(void)setShowLine:(bool)arg1 forAxisID:(id)arg2 ;
-(double)depthValueForChart:(id)arg1 ;
-(void)beginDynamic3DChartDepthChangesForChart:(id)arg1 ;
-(void)setDynamic3DChartDepthValue:(double)arg1 forChart:(id)arg2 ;
-(id)endDynamic3DChartDepthChangesForChart:(id)arg1 ;
-(id)localizedValueLabelsTabName;
-(id)chartLayoutsForChartDrawableInfo:(id)arg1 ;
-(void)setNumberOfDecades:(long long)arg1 forAxisID:(id)arg2 ;
-(void)setMajorGridCount:(long long)arg1 forAxisID:(id)arg2 ;
-(void)setMinorGridCount:(long long)arg1 forAxisID:(id)arg2 ;
-(void)setScale:(long long)arg1 forAxisID:(id)arg2 ;
-(void)setMaxUserValue:(double)arg1 forAxisID:(id)arg2 ;
-(void)setMinUserValue:(double)arg1 forAxisID:(id)arg2 ;
-(void)setLabelRotation:(float)arg1 forAxisID:(id)arg2 ;
-(void)setNumberFormat:(id)arg1 forAxisID:(id)arg2 ;
-(void)setNumberFormatType:(int)arg1 forAxisID:(id)arg2 ;
-(void)setLabelPosition:(long long)arg1 forAxisID:(id)arg2 ;
-(void)setColumnShape:(long long)arg1 ;
-(void)setBevelEdges:(bool)arg1 ;
-(void)setShowHiddenData:(bool)arg1 ;
-(void)setString:(id)arg1 forSelection:(id)arg2 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 onSubselectionType:(id)arg3 ;
-(void)setDisplayedChartType:(id)arg1 ;
-(id)inspectorAxisID;
-(void)setInspectorAxisID:(id)arg1 ;
-(id)selectedDataSetNameIndexesByInfo;
-(void)dealloc;
-(id)selection;
-(void)setSelection:(id)arg1 ;
-(void)selectAll:(id)arg1 ;
-(void)cut:(id)arg1 ;
-(void)copy:(id)arg1 ;
-(void)paste:(id)arg1 ;
-(void)toggleBoldface:(id)arg1 ;
-(void)toggleItalics:(id)arg1 ;
-(id)model;
-(void)deleteBackward:(id)arg1 ;
-(void)delete:(id)arg1 ;
-(bool)setChartType:(id)arg1 ;
-(void)deleteForward:(id)arg1 ;
-(void)underline:(id)arg1 ;
@end

