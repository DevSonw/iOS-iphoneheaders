/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:54 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/TSDAnimationSession.h>

@protocol TSDCanvasDelegate;
@class TSULRUCache, KNSlideNode, NSMutableArray, KNShow, KNAnimationContext, KNAnimatedSlideView;

@interface KNPlaybackSession : NSObject <TSDAnimationSession> {

	/*^block*/ id mEndShowHandler;
	bool mHasEndShowHandlerBeenCancelled;
	<TSDCanvasDelegate>* mCanvasDelegate;
	TSULRUCache* mASVCache;
	KNSlideNode* mCurrentSlideNode;
	KNSlideNode* mAlternateNextSlideNode;
	NSMutableArray* mBreadCrumbTrail;
	KNSlideNode* mLastVisitedSlideNode;
	KNShow* mShow;
	KNAnimationContext* mAnimationContext;
	int mPlayMode;
	bool mSkipSlides;
	bool mShouldAnimateTransitionOnLastSlide;
	bool mShouldAnimateNullTransitions;
	bool mShouldUseContentlessLayers;
	bool mSkipBuilds;
	bool mShouldPreferCARenderer;
	bool mDisableAutoAnimationRemoval;
	bool mShouldAutomaticallyPlayMovies;
	bool mShouldShowVideoReflectionsAndMasks;
	bool mShouldForceTextureGeneration;
	bool mShouldAlwaysSetCurrentGLContextWhenDrawing;

}

@property (assign,nonatomic) KNSlideNode * alternateNextSlideNode; 
@property (nonatomic,readonly) KNAnimationContext * animationContext; 
@property (nonatomic,retain) NSMutableArray * breadCrumbTrail; 
@property (assign,nonatomic) <TSDCanvasDelegate> * canvasDelegate; 
@property (nonatomic,readonly) KNAnimatedSlideView * currentCachedAnimatedSlideView; 
@property (nonatomic,copy) id endShowHandler; 
@property (nonatomic,readonly) bool isPreview; 
@property (assign,nonatomic) int playMode; 
@property (assign,nonatomic) bool shouldAnimateTransitionOnLastSlide; 
@property (nonatomic,readonly) KNShow * show; 
@property (assign,nonatomic) bool skipSlides; 
@property (assign,nonatomic) bool shouldAnimateNullTransitions; 
@property (assign,nonatomic) bool shouldUseContentlessLayers; 
@property (assign,nonatomic) bool skipBuilds; 
@property (assign,nonatomic) bool shouldPreferCARenderer; 
@property (assign,nonatomic) bool disableAutoAnimationRemoval; 
@property (assign,nonatomic) bool shouldAutomaticallyPlayMovies; 
@property (assign,nonatomic) bool shouldShowVideoReflectionsAndMasks; 
@property (nonatomic,readonly) bool shouldShowInstructionalText; 
@property (assign,nonatomic) bool shouldForceTextureGeneration; 
@property (assign,nonatomic) bool shouldAlwaysSetCurrentGLContextWhenDrawing; 
-(bool)isOffscreenPlayback;
-(bool)shouldForceTextureGeneration;
-(bool)shouldShowInstructionalText;
-(void)setShouldForceTextureGeneration:(bool)arg1 ;
-(unsigned long long)slideNumberForSlideNode:(id)arg1 ;
-(id)repForInfo:(id)arg1 onCanvas:(id)arg2 ;
-(id)renderedTextureSetForRep:(id)arg1 context:(id)arg2 ;
-(id)animationContext;
-(int)playMode;
-(id)nextSlideNodeAfterCurrent;
-(id)animatedSlideViewFor:(id)arg1 setupTransition:(bool)arg2 ;
-(void)invalidateSlideNumberLayoutsOnCanvas:(id)arg1 ;
-(bool)shouldPreferCARenderer;
-(bool)shouldAnimateNullTransitions;
-(id)newTextureForCurrentEvent;
-(id)newTextureForSlideNode:(id)arg1 atEventIndex:(unsigned long long)arg2 ;
-(void)renderTextureContentsIfNeeded:(id)arg1 ;
-(id)currentSlideNode;
-(id)preloadTexturesForSlideNode:(id)arg1 atSlideIndex:(unsigned long long)arg2 ;
-(bool)disableAutoAnimationRemoval;
-(id)initWithShow:(id)arg1 viewScale:(double)arg2 baseLayer:(id)arg3 isBaseLayerVisible:(bool)arg4 canvasDelegate:(id)arg5 endShowHandler:(/*^block*/ id)arg6 ;
-(void)setDisableAutoAnimationRemoval:(bool)arg1 ;
-(void)setShouldAlwaysSetCurrentGLContextWhenDrawing:(bool)arg1 ;
-(void)gotoSlideNode:(id)arg1 ;
-(id)firstSlideNode;
-(void)setPlayMode:(int)arg1 ;
-(id)gotoFirstSlide;
-(id)gotoLastSlide;
-(id)newTransitionTo:(id)arg1 ;
-(void)invalidateAnimatedSlideViewCache;
-(id)canvasDelegate;
-(void)p_setCurrentSlideNode:(id)arg1 ;
-(void)dropABreadCrumb;
-(id)nextSlideNodeAfterSlideNode:(id)arg1 ;
-(id)previousSlideNodeBeforeCurrent;
-(id)lastSlideNode;
-(id)breadCrumb;
-(id)currentCachedAnimatedSlideView;
-(double)showScale;
-(void)p_executeEndShowHandler;
-(id)nextSlideAfterCurrent;
-(bool)atBegginingOfDeck;
-(id)newCanvas;
-(id)renderedTextureSetForRep:(id)arg1 ;
-(void)renderTextureSetContentsIfNeeded:(id)arg1 ;
-(void)executeEndShowHandlerAfterDelay:(double)arg1 ;
-(void)cancelEndShowHandler;
-(id)alternateNextSlideNode;
-(void)setAlternateNextSlideNode:(id)arg1 ;
-(id)breadCrumbTrail;
-(void)setBreadCrumbTrail:(id)arg1 ;
-(void)setCanvasDelegate:(id)arg1 ;
-(/*^block*/ id)endShowHandler;
-(void)setEndShowHandler:(/*^block*/ id)arg1 ;
-(bool)shouldAnimateTransitionOnLastSlide;
-(void)setShouldAnimateTransitionOnLastSlide:(bool)arg1 ;
-(void)setShouldAnimateNullTransitions:(bool)arg1 ;
-(bool)shouldUseContentlessLayers;
-(void)setShouldUseContentlessLayers:(bool)arg1 ;
-(bool)skipSlides;
-(void)setSkipSlides:(bool)arg1 ;
-(bool)skipBuilds;
-(void)setSkipBuilds:(bool)arg1 ;
-(void)setShouldPreferCARenderer:(bool)arg1 ;
-(bool)shouldAutomaticallyPlayMovies;
-(void)setShouldAutomaticallyPlayMovies:(bool)arg1 ;
-(bool)shouldShowVideoReflectionsAndMasks;
-(void)setShouldShowVideoReflectionsAndMasks:(bool)arg1 ;
-(bool)shouldAlwaysSetCurrentGLContextWhenDrawing;
-(id)currentSlide;
-(void)dealloc;
-(id)show;
-(id)gotoNextSlide;
-(id)gotoPreviousSlide;
-(bool)isPreview;
@end

