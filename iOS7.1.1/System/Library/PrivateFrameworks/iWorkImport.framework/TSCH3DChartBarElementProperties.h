/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:27 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSCH3DChartBasicElementProperties.h>

@class TSCH3DLabelResources, TSCH3DBarChartDefaultAppearance;

@interface TSCH3DChartBarElementProperties : TSCH3DChartBasicElementProperties {

	vector<float, std::__1::allocator<float> >* mMaxValues;
	vector<TSCH3D::BarElementInfo, std::__1::allocator<TSCH3D::BarElementInfo> >* mElementInfos;
	bool mStacked;
	bool mBevelEdges;
	float mBarWidth;
	float mElementsXOffset;
	float mSeriesOffset;
	float mSetWidth;
	int mBarShape;
	TSCH3DLabelResources* mSeriesLabels;
	array<TSCH3D::BarExtrusionDetails, 2> mExtrusionDetails;
	TSCH3DBarChartDefaultAppearance* mAppearance;
	vector<<anonymous>::Range, std::__1::allocator<<anonymous>::Range> >* mRangeCache;

}

@property (nonatomic,retain) TSCH3DLabelResources * seriesLabels; 
@property (nonatomic,readonly) <TSCH3DBarChartAppearance> * appearance; 
@property (nonatomic,readonly) int barShape; 
@property (nonatomic,readonly) bool hasBevelEdges; 
-(bool)hasBevelEdges;
-(GeometryResource)geometryForSeries:(id)arg1 index:(const tvec2<int>*)arg2 ;
-(bool)applyElementTransform:(ObjectTransforms*)arg1 series:(id)arg2 index:(const tvec2<int>*)arg3 propertyAccessor:(const ChartScenePropertyAccessor*)arg4 ;
-(float)elementTransformDepthFromPropertyAccessor:(const ChartScenePropertyAccessor*)arg1 ;
-(float)interceptValueForSeries:(id)arg1 ;
-(void)createResources;
-(id)texcoordsForSeries:(id)arg1 index:(const tvec2<int>*)arg2 ;
-(GeometryResource)boundsGeometryForSeries:(id)arg1 index:(const tvec2<int>*)arg2 ;
-(id)normalsForSeries:(id)arg1 index:(const tvec2<int>*)arg2 ;
-(void)p_createAppearance;
-(void)releaseAndClearAppearance;
-(long long)flatIndex:(tvec2<int>*)arg1 ;
-(BarElementInfo*)elementInfoAtIndex:(const tvec2<int>*)arg1 ;
-(BarIntercept)calculateInterceptForSeries:(id)arg1 ;
-(Range)p_calculateRangeForSeries:(id)arg1 index:(tvec2<int>*)arg2 intercept:(const BarIntercept*)arg3 ;
-(Range)rangeForSeries:(id)arg1 index:(tvec2<int>*)arg2 ;
-(bool)beveledAtIndex:(const tvec2<int>*)arg1 ;
-(id)p_appearance;
-(const BarExtrusionDetails*)extrusionDetailsForShape:(int)arg1 ;
-(id)p_barResourceCacheItemAtIndex:(const tvec2<int>*)arg1 ;
-(void)setElementInfo:(const BarElementInfo*)arg1 atIndex:(const tvec2<int>*)arg2 ;
-(void)setMaxValueForSeries:(long long)arg1 value:(float)arg2 ;
-(void)setSeriesLabels:(id)arg1 ;
-(id)seriesLabels;
-(void)p_updateAppearance;
-(void)calculateLayout;
-(void)p_updateRangeCache;
-(void)updateMaxValuesAndBevels;
-(id)p_appearanceClasses;
-(void)p_resetExtrusionDetails;
-(BarElementInfo)barElementInfoAtIndex:(const tvec2<int>*)arg1 ;
-(void)setBeveledAtIndex:(const tvec2<int>*)arg1 ;
-(float)barWidth;
-(float)maxValueForSeries:(long long)arg1 ;
-(void)setExtrusionDetails:(const BarExtrusionDetails*)arg1 forShape:(int)arg2 ;
-(int)barShape;
-(void)dealloc;
-(id)copyWithZone:(NSZone)arg1 ;
-(id)appearance;
-(id).cxx_construct;
-(void)reset;
-(void)updateLabels;
-(void).cxx_destruct;
@end

