/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:25 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSCH3DChartAnimationClip.h>

@interface TSCH3DChartAlphaBlendAnimationClip : TSCH3DChartAnimationClip {

	id mLayerKey;
	bool mDelayOpaque;
	bool mBlendOpaque;
	bool mAlwaysRender;

}

@property (nonatomic,retain) id layerKey; 
@property (assign,nonatomic) bool delayOpaque; 
@property (assign,nonatomic) bool blendOpaque; 
@property (assign,nonatomic) bool alwaysRender; 
-(void)didUpdateAnimationTimeForContext:(id)arg1 layers:(id)arg2 ;
-(void)willRunWithScene:(id)arg1 context:(id)arg2 layers:(id)arg3 ;
-(void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2<int>*)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4 context:(id)arg5 ;
-(ElementRenderPass)renderPassForSceneObject:(id)arg1 ;
-(ElementRenderPass)renderPassForElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 context:(id)arg3 ;
-(void)didTransformElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 context:(id)arg3 ;
-(bool)willSubmitElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 context:(id)arg3 ;
-(void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4 ;
-(bool)willSubmitSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3 ;
-(bool)willSubmitLabelForSceneObject:(id)arg1 labelRenderInfo:(const ChartLabelsContainingLabelRenderInfo*)arg2 context:(id)arg3 ;
-(void)didSubmitSceneObject:(id)arg1 pipeline:(id)arg2 ;
-(bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2 ;
-(void)protected_addShaderEffect:(id)arg1 ;
-(float)p_updateUniform:(id)arg1 context:(id)arg2 ;
-(void)p_updateOpacityForLayers:(id)arg1 context:(id)arg2 ;
-(float)protected_elementAlphaForContext:(id)arg1 ;
-(id)layerKey;
-(void)setLayerKey:(id)arg1 ;
-(bool)delayOpaque;
-(void)setDelayOpaque:(bool)arg1 ;
-(bool)blendOpaque;
-(void)setBlendOpaque:(bool)arg1 ;
-(bool)alwaysRender;
-(void)setAlwaysRender:(bool)arg1 ;
-(void)dealloc;
@end

