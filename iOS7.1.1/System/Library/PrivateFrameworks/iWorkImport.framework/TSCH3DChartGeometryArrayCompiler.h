/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:30 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSCH3DGeometryCollector.h>
#import <iWorkImport/TSCH3DSceneObjectDelegator.h>
#import <iWorkImport/TSCH3DChartAllElementSceneObjectDelegate.h>

@protocol TSCH3DChartGeometryArrayCompilerDelegate;
@class TSCH3DChartModelEnumerator, TSCHChartSeries;

@interface TSCH3DChartGeometryArrayCompiler : TSCH3DGeometryCollector <TSCH3DSceneObjectDelegator, TSCH3DChartAllElementSceneObjectDelegate> {

	tvec2<int> mCurrentElementIndex;
	TSCH3DChartModelEnumerator* mEnumeratorSeries;
	<TSCH3DChartGeometryArrayCompilerDelegate>* mDelegate;

}

@property (nonatomic,retain) <TSCH3DChartGeometryArrayCompilerDelegate> * delegate; 
@property (nonatomic,readonly) tvec2<int> currentElementIndex; 
@property (nonatomic,readonly) TSCHChartSeries * chartSeries; 
+(void)compileSceneObject:(id)arg1 scene:(id)arg2 delegate:(id)arg3 ;
+(void)p_compileScene:(id)arg1 withBlock:(/*^block*/ id)arg2 ;
-(id)combinationProcessor;
-(id)objectStateProcessor;
-(StateStack<TSCH3D::ObjectState, 6>*)objectStateStack;
-(id)matrixProcessor;
-(long long)attribute:(id)arg1 resource:(id)arg2 specs:(const AttributeSpecs*)arg3 ;
-(long long)texture:(id)arg1 attributes:(const TextureAttributes*)arg2 ;
-(void)submit:(const PrimitiveInfo*)arg1 ;
-(ElementRenderPass)renderPassForSceneObject:(id)arg1 ;
-(id)makeDelegateWithScene:(id)arg1 ;
-(id)makeDelegateWithSceneObject:(id)arg1 scene:(id)arg2 ;
-(bool)willBeginProcessingSceneObject:(id)arg1 ;
-(void)didEndProcessingSceneObject:(id)arg1 ;
-(bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2 ;
-(bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 ;
-(void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2<int>*)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4 ;
-(bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 ;
-(void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 ;
-(bool)willProcessElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(ElementRenderPass)renderPassForElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(bool)willUpdateElementEffectsStatesForElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(void)didTransformElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(bool)willRenderElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(bool)willSubmitElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(tvec2<int>)currentElementIndex;
-(id)chartSeries;
-(id)initWithScene:(id)arg1 ;
-(id)p_initWithScene:(id)arg1 ;
-(void)p_endCompile;
-(ObjectState*)currentObjectState;
-(id)p_transformBuffer:(id)arg1 forVariable:(id)arg2 offset:(unsigned long long)arg3 count:(unsigned long long)arg4 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(id).cxx_construct;
@end

