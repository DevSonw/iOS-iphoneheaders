/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:25 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSCH3DChartAllSceneObjectDelegate.h>

@class TSCH3DAnimationTiming, TSCH3DAnimationTimeSlice, NSArray, NSMutableDictionary;

@interface TSCH3DChartAnimationSceneObjectDelegate : NSObject <TSCH3DChartAllSceneObjectDelegate> {

	TSCH3DAnimationTiming* mElementTiming;
	TSCH3DAnimationTimeSlice* mTimeSlice;
	NSArray* mAnimationClips;
	NSMutableDictionary* mTimingContext;
	tvec2<int> mCurrentInterpolatedTimeElementIndex;

}
+(id)delegateWithTiming:(id)arg1 timeSlice:(id)arg2 animationClips:(id)arg3 context:(id)arg4 ;
-(ElementRenderPass)renderPassForSceneObject:(id)arg1 ;
-(bool)shouldUpdateSeriesElementTimingWithAnyElement;
-(id)initWithTiming:(id)arg1 timeSlice:(id)arg2 animationClips:(id)arg3 context:(id)arg4 ;
-(void)p_updateElementTimingForIndex:(const tvec2<int>*)arg1 ;
-(void)labelsResourcesSessionWillBeginForSceneObject:(id)arg1 pipeline:(id)arg2 ;
-(void)labelsResourcesSessionWillEndForSceneObject:(id)arg1 pipeline:(id)arg2 ;
-(void)setOffset:(const tvec3<float>*)arg1 labelType:(int)arg2 boundsIndex:(long long)arg3 forSceneObject:(id)arg4 ;
-(bool)willSubmitLabelType:(int)arg1 boundsIndex:(long long)arg2 alignment:(unsigned long long)arg3 elementIndex:(unsigned long long)arg4 forSceneObject:(id)arg5 ;
-(bool)willSubmitLabelForSceneObject:(id)arg1 labelRenderInfo:(const ChartLabelsContainingLabelRenderInfo*)arg2 ;
-(void)updateExternalLabelAttribute:(ExternalLabelAttributeRef)arg1 sceneObject:(id)arg2 labelRenderInfo:(const ChartLabelsContainingLabelRenderInfo*)arg3 ;
-(void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 ;
-(bool)willSubmitSceneObject:(id)arg1 pipeline:(id)arg2 ;
-(void)didSubmitSceneObject:(id)arg1 pipeline:(id)arg2 ;
-(bool)willBeginProcessingSceneObject:(id)arg1 ;
-(void)didEndProcessingSceneObject:(id)arg1 ;
-(bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2 ;
-(bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 ;
-(void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2<int>*)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4 ;
-(bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 ;
-(void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 ;
-(bool)willProcessElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(ElementRenderPass)renderPassForElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(bool)willUpdateElementEffectsStatesForElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(void)didTransformElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(bool)willRenderElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(bool)willSubmitElement:(const RenderElementInfo*)arg1 sceneObject:(id)arg2 ;
-(void)dealloc;
-(id).cxx_construct;
@end

