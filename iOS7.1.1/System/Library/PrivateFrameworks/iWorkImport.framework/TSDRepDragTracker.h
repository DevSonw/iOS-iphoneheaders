/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:26:41 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDLayoutManipulatingTracker.h>
#import <iWorkImport/TSDDecorator.h>
#import <iWorkImport/TSDRepTracker.h>

@protocol TSDRepDragTrackerDelegate;
@class TSDRep, TSDHUDViewController, NSTimer, TSDAutoscroll, TSUPointerKeyDictionary, CAShapeLayer, NSMutableSet;

@interface TSDRepDragTracker : NSObject <TSDLayoutManipulatingTracker, TSDDecorator, TSDRepTracker> {

	TSDRep* mRep;
	bool mDidBeginDrag;
	bool mHaveShownHUD;
	bool mHaveShownSecondHUD;
	bool mHaveShownRuler;
	bool mIsInspectorDrivenTracking;
	CGPoint mInitialDragPoint;
	CGPoint mActualDragPoint;
	CGPoint mPreviousActualDragPoint;
	CGPoint mLogicalDragPoint;
	TSDHUDViewController* mSecondHUDController;
	CGPoint mUnscaledDragDelta;
	NSTimer* mRulerTimer;
	TSDAutoscroll* mAutoscroll;
	CGPoint mAutoscrollPoint;
	<TSDRepDragTrackerDelegate>* mDelegate;
	bool mInWillBeginDynamicOperation;
	bool mInDidEndDynamicOperation;
	TSUPointerKeyDictionary* mMapRepsToSnapOffsets;
	bool mShouldConstrain;
	double mSnapLevel;
	double mConstraintAngle;
	CGPoint mConstrainingPoint;
	bool mConstraintGuidesShowing;
	CAShapeLayer* mGuideLayer;
	bool mShouldShowGuides;
	bool mShouldSnapToGuides;
	bool mAlreadyInCommandGroup;
	NSMutableSet* mConnectedLineLayouts;
	bool mShowDragHUD;
	bool mShouldShowRuler;
	bool mTrackerDidBeginDragging;

}

@property (nonatomic,retain) TSDRep * rep; 
@property (nonatomic,readonly) bool didBeginDrag; 
@property (assign,nonatomic) bool shouldSnapToGuides; 
@property (assign,nonatomic) bool shouldShowGuides; 
@property (assign,nonatomic) bool alreadyInCommandGroup; 
@property (assign,nonatomic) bool showDragHUD; 
@property (assign,nonatomic) bool shouldShowRuler; 
@property (assign,nonatomic) bool isInspectorDrivenTracking; 
-(id)initWithRep:(id)arg1 ;
-(id)rep;
-(void)changeDynamicLayoutsForReps:(id)arg1 ;
-(bool)shouldOpenCommandGroupToCommitChangesForReps:(id)arg1 ;
-(void)p_hideHUD;
-(bool)isInspectorDrivenTracking;
-(void)setIsInspectorDrivenTracking:(bool)arg1 ;
-(void)commitChangesForReps:(id)arg1 ;
-(bool)supportsAlignmentGuides;
-(bool)operationShouldBeDynamic;
-(void)willBeginDynamicOperationForReps:(id)arg1 ;
-(void)didChangeCurrentlyTransformingReps;
-(id)selectionBehaviorForReps:(id)arg1 ;
-(id)decoratorOverlayLayers;
-(void)setRep:(id)arg1 ;
-(void)p_hideGuideLayer;
-(bool)p_delegateIsHandlingDrag;
-(void)p_displayRulerAndRect;
-(void)p_updateGuides;
-(void)p_updateHUDFromTimer;
-(void)p_showGuideLayer;
-(bool)shouldSnapToGuides;
-(void)p_didBeginDrag;
-(void)p_makeSiblingRepsOfRep:(id)arg1 performBlock:(/*^block*/ id)arg2 ;
-(bool)shouldShowGuides;
-(bool)alreadyInCommandGroup;
-(void)p_updateHUDAtPoint:(CGPoint)arg1 ;
-(CGRect)p_selectedInfosRect;
-(void)beginShowingDragUIForInitialDragPoint:(CGPoint)arg1 ;
-(void)willEndPossibleRepDragGesture;
-(void)endPossibleRepDragGesture;
-(void)addUnscaledDragDelta:(CGPoint)arg1 ;
-(void)setActualDragPoint:(CGPoint)arg1 ;
-(void)setLogicalDragPoint:(CGPoint)arg1 ;
-(void)setShouldConstrain:(bool)arg1 ;
-(void)setSnapLevel:(double)arg1 ;
-(void)setConstrainingPoint:(CGPoint)arg1 ;
-(void)setShouldShowGuides:(bool)arg1 ;
-(bool)handlesCopyingObjects;
-(bool)didBeginDrag;
-(bool)showDragHUD;
-(void)setShowDragHUD:(bool)arg1 ;
-(bool)shouldShowRuler;
-(void)setShouldShowRuler:(bool)arg1 ;
-(void)setShouldSnapToGuides:(bool)arg1 ;
-(void)setAlreadyInCommandGroup:(bool)arg1 ;
-(void)didEndDynamicOperationForReps:(id)arg1 ;
-(void)dealloc;
-(id)actionForLayer:(id)arg1 forKey:(id)arg2 ;
@end

