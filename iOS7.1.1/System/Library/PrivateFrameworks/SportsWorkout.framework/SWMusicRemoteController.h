/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:25:08 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/SportsWorkout.framework/SportsWorkout
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class NSTimer, NSString, NSMutableArray, MPMediaQuery, MPMediaItem;

@interface SWMusicRemoteController : NSObject {

	long long _musicSelection;
	int _currentVolumeDirection;
	NSTimer* _volumeAdjustTimer;
	NSString* _latestSelectedPlaylistName;
	NSMutableArray* _playlists;
	NSMutableArray* _workoutMixes;
	MPMediaQuery* _interruptedQueueAsQuery;
	MPMediaItem* _interruptedItem;
	double _interruptedPlaybackTime;
	long long _interruptedRepeatMode;
	MPMediaItem* _powersongItem;
	NSString* _nowPlayingTitle;
	NSString* _nowPlayingAlbum;
	NSString* _nowPlayingArtist;
	bool _nowPlayingIsPlaying;

}

@property (assign,nonatomic) long long musicSelection; 
@property (nonatomic,readonly) bool shouldControlMusic; 
@property (nonatomic,copy) NSString * latestSelectedPlaylistName;                    //@synthesize latestSelectedPlaylistName=_latestSelectedPlaylistName - In the implementation block
@property (nonatomic,@dynamic,readonly) bool powersongIsNowPlayingItem; 
+(id)sharedMusicController;
+(void)clearCachedDatabaseData;
-(bool)shouldControlMusic;
-(void)selectNextSong;
-(void)selectPreviousSong;
-(void)beginAdjustingVolume:(int)arg1 ;
-(void)endAdjustingVolume:(int)arg1 ;
-(bool)powersongIsNowPlayingItem;
-(void)interruptPlaybackForTrackUID:(id)arg1 ;
-(void)goToNowPlaying;
-(long long)musicSelection;
-(id)currentSongName;
-(id)currentAlbumName;
-(id)currentArtistName;
-(void)_mediaLibraryChanged:(id)arg1 ;
-(void)_mediaRemoteNowPlayingIsPlayingChanged:(id)arg1 ;
-(void)_mediaRemoteNowPlayingInfoChanged:(id)arg1 ;
-(void)_releaseRemoteCachedData;
-(void)_adjustVolumeUp;
-(void)_adjustVolumeUpTimer:(id)arg1 ;
-(void)_adjustVolumeDown;
-(void)_adjustVolumeDownTimer:(id)arg1 ;
-(void)_resumeInterruptedQueue;
-(void)_startPlaylistWithPersistentUID:(unsigned long long)arg1 ;
-(void)_startPlaylistAtIndex:(unsigned long long)arg1 isWorkoutMix:(bool)arg2 ;
-(unsigned long long)_persistentUIDForPlaylistIndex:(unsigned long long)arg1 isWorkoutMix:(bool)arg2 ;
-(id)workoutMixes;
-(id)playlists;
-(void)setLatestSelectedPlaylistName:(id)arg1 ;
-(void)setMusicSelection:(long long)arg1 ;
-(void)startWorkoutMixWithPersistentUID:(unsigned long long)arg1 ;
-(void)startPlaylistWithPersistentUID:(unsigned long long)arg1 ;
-(void)startWorkoutMixAtIndex:(unsigned long long)arg1 ;
-(void)startPlaylistAtIndex:(unsigned long long)arg1 ;
-(void)startShuffleSongs;
-(unsigned long long)persistentUIDForPlaylistIndex:(unsigned long long)arg1 ;
-(unsigned long long)persistentUIDForWorkoutMixIndex:(unsigned long long)arg1 ;
-(id)latestSelectedPlaylistName;
-(void)play;
-(void)beginSeekingForward;
-(void)beginSeekingBackward;
-(void)endSeeking;
-(void)dealloc;
-(id)init;
-(id)_init;
-(void)pause;
-(bool)isNowPlaying;
@end

