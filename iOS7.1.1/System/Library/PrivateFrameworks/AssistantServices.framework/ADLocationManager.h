/*
* This header is generated by classdump-dyld 0.2
* on Saturday, June 28, 2014 at 3:35:06 AM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <WebKit/CLLocationManagerDelegate.h>

@protocol OS_dispatch_queue, ADLocationManagerDelegate, OS_dispatch_source;
@class NSObject, CLLocationManager, SAGetRequestOrigin, CLLocation;

@interface ADLocationManager : NSObject <CLLocationManagerDelegate> {

	NSObject<OS_dispatch_queue>* _queue;
	<ADLocationManagerDelegate>* _delegate;
	BOOL _needsToSendLocation;
	CLLocationManager* _locationManager;
	int _lastStatus;
	BOOL _lastEnabledState;
	SAGetRequestOrigin* _requestOriginCommand;
	NSObject<OS_dispatch_source>* _locationTimerSource;
	CLLocation* _lastLocation;
	BOOL _isNavigating;
	/*^block*/ id _updateCompletion;

}

@property (assign,nonatomic,__weak) <ADLocationManagerDelegate> * delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL needsToSendLocation;                                   //@synthesize needsToSendLocation=_needsToSendLocation - In the implementation block
+(BOOL)isLocationRestricted;
-(void)stopLocationUpdates;
-(id)_locationManager;
-(void)updateLocationForCommand:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)setNeedsToSendLocation:(BOOL)arg1 ;
-(id)commandForCachedLocation;
-(BOOL)needsToSendLocation;
-(void)_navStatusChanged:(id)arg1 ;
-(void)_cancelLocationTimer;
-(int)_locationAuthStatus;
-(void)_invokeBlockForStatus:(id)arg1 getOrigin:(id)arg2 block:(/*^block*/ id)arg3 ;
-(void)_invokeBlockForLocation:(id)arg1 getOrigin:(id)arg2 block:(/*^block*/ id)arg3 ;
-(void)_locationTimedOutForGetOrigin:(id)arg1 block:(/*^block*/ id)arg2 ;
-(void)_clearCompletionState;
-(void)_stopMonitoringLocation;
-(void)_startMonitoringLocationWithDesiredAccuracy:(double)arg1 ;
-(void)_scheduleLocationTimeout:(double)arg1 ;
-(BOOL)_shouldSendLocationUpdate:(id)arg1 fromLocation:(id)arg2 forCommand:(id)arg3 ;
-(void)_locationDeniedForGetOrigin:(id)arg1 block:(/*^block*/ id)arg2 ;
-(void)_locationUnknownForGetOrigin:(id)arg1 block:(/*^block*/ id)arg2 ;
-(BOOL)_locationAuthStatusIsDenied:(int)arg1 ;
-(BOOL)_locationServicesIsEnabled;
-(void)_locationDisabledForGetOrigin:(id)arg1 block:(/*^block*/ id)arg2 ;
-(void)_startMonitoringLocationForGetRequestOrigin:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(id)currentRequestOrigin;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(void).cxx_destruct;
-(void)setQueue:(id)arg1 ;
-(void)locationManager:(id)arg1 didUpdateLocations:(id)arg2 ;
-(void)locationManager:(id)arg1 didFailWithError:(id)arg2 ;
-(void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2 ;
@end

