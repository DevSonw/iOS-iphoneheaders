/*
* This header is generated by classdump-dyld 0.2
* on Saturday, June 28, 2014 at 3:35:06 AM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol ADSyncManagerDelegate, OS_dispatch_queue;
@class ADAccount, ADServiceManager, NSString, NSMutableArray, SASyncAnchor, ADService, NSArray, NSObject;

@interface ADSyncManager : NSObject {

	ADAccount* _account;
	ADServiceManager* _serviceManager;
	NSString* _anchorsRequestId;
	NSMutableArray* _anchorsToSync;
	NSMutableArray* _syncedAnchors;
	SASyncAnchor* _currentAnchor;
	ADService* _currentSyncService;
	<ADSyncManagerDelegate>* _delegate;
	/*^block*/ id _continueBlock;
	BOOL _currentSyncShouldCancel;
	BOOL _syncNeededOverride;
	BOOL _isAggressivelySyncing;
	NSArray* _queuedAnchors;
	BOOL _forceResetOnNextSync;
	NSObject<OS_dispatch_queue>* _targetQueue;

}

@property (nonatomic,retain) NSObject<OS_dispatch_queue> * targetQueue;                                //@synthesize targetQueue=_targetQueue - In the implementation block
@property (nonatomic,copy) NSString * anchorsRequestId;                                                //@synthesize anchorsRequestId=_anchorsRequestId - In the implementation block
@property (nonatomic,copy) NSArray * queuedAnchors;                                                    //@synthesize queuedAnchors=_queuedAnchors - In the implementation block
@property (assign,setter=_setForceResetOnNextSync:,nonatomic) BOOL _forceResetOnNextSync;              //@synthesize forceResetOnNextSync=_forceResetOnNextSync - In the implementation block
@property (setter=_setCurrentAnchor:,nonatomic,retain) SASyncAnchor * _currentAnchor;                  //@synthesize currentAnchor=_currentAnchor - In the implementation block
@property (setter=_setContinueBlock:,nonatomic,copy) id _continueBlock;                                //@synthesize continueBlock=_continueBlock - In the implementation block
-(BOOL)isSyncing;
-(id)initWithAccount:(id)arg1 serviceManager:(id)arg2 ;
-(void)setAnchorsRequestId:(id)arg1 ;
-(BOOL)isAggressivelySyncing;
-(void)continueSync;
-(id)anchorsRequestId;
-(id)anchorKeysNeedingSync;
-(void)setQueuedAnchors:(id)arg1 ;
-(void)prepareSyncWithAnchors:(id)arg1 delegate:(id)arg2 ;
-(void)cancelSyncForAnchor:(id)arg1 ;
-(void)setSyncNeeded;
-(void)beginAggressiveSyncWithAnchors:(id)arg1 delegate:(id)arg2 ;
-(id)queuedAnchors;
-(void)_setForceResetOnNextSync:(BOOL)arg1 ;
-(id)aggressiveSyncKeys;
-(void)_postSyncFinishedNotification;
-(void)_setCurrentAnchor:(id)arg1 ;
-(void)_setContinueBlock:(/*^block*/ id)arg1 ;
-(void)_currentAnchorFinishedWithSuccess:(BOOL)arg1 ;
-(void)_setCurrentAnchorToNext;
-(void)_syncFinishedForService:(id)arg1 ;
-(void)_syncingService:(id)arg1 receivedChunkWithPreAnchor:(id)arg2 post:(id)arg3 anchorValidity:(id)arg4 toAdd:(id)arg5 toRemove:(id)arg6 continueBlock:(/*^block*/ id)arg7 ;
-(void)_finishSync;
-(id)_currentAnchor;
-(void)_continueSync;
-(id)_preferredSyncKeyOrder;
-(BOOL)_needsSync;
-(id)_sortedAnchorsFromAnchors:(id)arg1 ;
-(void)_setAnchorsToSync:(id)arg1 ;
-(id)_whitelistedAggressiveSyncKeys;
-(void)_invokeContinueBlockWithKeepGoingArgument:(BOOL)arg1 ;
-(BOOL)_forceResetOnNextSync;
-(/*^block*/ id)_continueBlock;
-(void).cxx_destruct;
-(id)targetQueue;
-(void)setTargetQueue:(id)arg1 ;
@end

