/*
* This header is generated by classdump-dyld 0.2
* on Saturday, June 28, 2014 at 3:35:06 AM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <assistantd/AVVoiceControllerRecordDelegate.h>
#import <assistantd/ADSpeechCapturing.h>

@protocol ADSpeechCapturingDelegate, OS_dispatch_queue, OS_dispatch_source, ADSpeechCapturingPowerDelegate;
@class NSObject, AVVoiceController, NSString;

@interface ADSpeechRecorder : NSObject <AVVoiceControllerRecordDelegate, ADSpeechCapturing> {

	<ADSpeechCapturingDelegate>* _delegate;
	NSObject<OS_dispatch_queue>* _queue;
	AVVoiceController* _voiceController;
	NSObject<OS_dispatch_source>* _powerUpdateTimer;
	int _packetCount;
	int _mode;
	int _packetDuration;
	int _speechEvent;
	NSString* _deviceIdentifier;
	BOOL _needsAlertsSet;
	NSObject<OS_dispatch_source>* _extendedEndpointTimer;
	BOOL _didDetectStartpoint;
	BOOL _didDetectEndpoint;
	BOOL _serverDidRecognizeSpeech;
	BOOL _didTimeout;
	BOOL _wasCanceled;
	BOOL _suppressRecordingStoppedAlert;
	BOOL _useAutomaticEndpointing;
	<ADSpeechCapturingPowerDelegate>* _powerDelegate;

}

@property (assign,nonatomic,__weak) <ADSpeechCapturingPowerDelegate> * powerDelegate;              //@synthesize powerDelegate=_powerDelegate - In the implementation block
-(void)cancelSpeechCaptureSuppressingAlert:(BOOL)arg1 ;
-(void)setPowerDelegate:(id)arg1 ;
-(void)stopUpdatingPower;
-(void)setSpeechEvent:(int)arg1 deviceIdentifier:(id)arg2 ;
-(void)prepareSpeechCapture;
-(id)currentRecordingInfo;
-(BOOL)startSpeechCaptureForMode:(int)arg1 willStartHandler:(/*^block*/ id)arg2 ;
-(void)startUpdatingPower;
-(void)stopSpeechCaptureForEvent:(int)arg1 ;
-(id)_voiceController;
-(id)_currentDeviceContext;
-(void)_updateRecordBufferDuration;
-(void)_resetVoiceController;
-(int)_voiceActivationMode;
-(void)_cancelExtendedEndpointTimer;
-(void)_setEndpointStyle:(int)arg1 ;
-(BOOL)_prepareVoiceController;
-(void)_setAlertsIfNeeded;
-(void)_scheduleExtendedEndpointTimer;
-(void)setSpeechPacketDuration:(int)arg1 ;
-(void)setSpeechWasRecognized;
-(void)updatePower;
-(id)powerDelegate;
-(void)_stopRecording;
-(void)voiceControllerRecordHardwareConfigurationDidChange:(id)arg1 toConfiguration:(int)arg2 ;
-(void)voiceControllerDidStartRecording:(id)arg1 successfully:(BOOL)arg2 ;
-(void)voiceControllerRecordBufferAvailable:(id)arg1 buffer:(id)arg2 ;
-(void)voiceControllerDidStopRecording:(id)arg1 forReason:(int)arg2 ;
-(void)voiceControllerDidDetectStartpoint:(id)arg1 ;
-(void)voiceControllerDidDetectEndpoint:(id)arg1 ofType:(int)arg2 ;
-(void)voiceControllerDidDetectEndpoint:(id)arg1 ;
-(void)voiceControllerBeginRecordInterruption:(id)arg1 ;
-(void)voiceControllerEndRecordInterruption:(id)arg1 ;
-(void)releaseAudioSession;
-(id)initWithQueue:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void).cxx_destruct;
-(float)averagePower;
-(void)preheat;
-(void)_setMode:(int)arg1 ;
-(float)peakPower;
-(void)setUseAutomaticEndpointing:(BOOL)arg1 ;
@end

