/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:20:11 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/Assistant/UIPlugins/FMF.siriUIBundle/FMF
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/NSOperation.h>

@class NSString, NSThread, NSSet, NSError, NSMutableArray, NSArray;

@interface ISRunLoopOperation : NSOperation {

	NSString* debugName_;
	NSThread* runLoopThread_;
	NSSet* runLoopModes_;
	NSError* error_;
	int state_;
	bool debugCancelSelfBeforeSchedulingStart_;
	bool debugCancelSelfAfterSchedulingStart_;
	double debugSecondaryThreadCancelDelay_;
	NSMutableArray* debugEventLog_;

}

@property (assign) bool debugCancelSelfBeforeSchedulingStart; 
@property (assign) bool debugCancelSelfAfterSchedulingStart; 
@property (assign) double debugSecondaryThreadCancelDelay; 
@property (readonly) NSArray * debugEventLog; 
@property (copy) NSString * debugName; 
@property (assign) NSThread * runLoopThread; 
@property (copy) NSSet * runLoopModes; 
@property (copy) NSError * error; 
@property (assign) int state; 
@property (readonly) NSThread * actualRunLoopThread; 
@property (readonly) bool isActualRunLoopThread; 
@property (readonly) NSSet * actualRunLoopModes; 
-(void)debugLogEvent:(id)arg1 ;
-(bool)debugCancelSelfBeforeSchedulingStart;
-(bool)debugCancelSelfAfterSchedulingStart;
-(double)debugSecondaryThreadCancelDelay;
-(id)debugEventLog;
-(void)setDebugSecondaryThreadCancelDelay:(double)arg1 ;
-(void)setDebugCancelSelfBeforeSchedulingStart:(bool)arg1 ;
-(void)setDebugCancelSelfAfterSchedulingStart:(bool)arg1 ;
-(void)debugEnableEventLog;
-(id)runLoopThread;
-(void)setRunLoopThread:(id)arg1 ;
-(id)actualRunLoopThread;
-(bool)isActualRunLoopThread;
-(void)operationDidStart;
-(void)operationWillFinish;
-(void)startOnRunLoopThread;
-(id)actualRunLoopModes;
-(void)cancelOnRunLoopThread;
-(void)setDebugName:(id)arg1 ;
-(id)debugName;
-(bool)isConcurrent;
-(id)runLoopModes;
-(void)setRunLoopModes:(id)arg1 ;
-(void)setError:(id)arg1 ;
-(void)finishWithError:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(int)state;
-(void)setState:(int)arg1 ;
-(void)cancel;
-(void)start;
-(void).cxx_destruct;
-(bool)isFinished;
-(bool)isExecuting;
-(id)error;
@end

