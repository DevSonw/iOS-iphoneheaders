/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:20:09 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/Assistant/PresentationPlugins/Siriland.siriUIPresentationBundle/Siriland
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Siriland/Siriland-Structs.h>
#import <UIKit/UIViewController.h>
#import <Siriland/AFUIDebugControllerDelegate.h>
#import <Siriland/SVSPagerViewControllerDelegate.h>
#import <Siriland/SVSSirilandViewDelegate.h>
#import <Siriland/SVSTranscriptStackViewControllerDataSource.h>
#import <Siriland/SVSSuggestionsViewControllerDelegate.h>
#import <Siriland/SVSTranscriptStackViewControllerDelegate.h>
#import <UIKit/UIActionSheetDelegate.h>
#import <HomeSharing/RadiosPreferencesDelegate.h>
#import <Siriland/SiriUIPresentation.h>

@protocol SiriUIPresentationDataSource, SiriUIPresentationDelegate, AFUIDebugControlling;
@class SVSSuggestionsViewController, SVSPagerViewController, UIActionSheet, RadiosPreferences, SVSSirilandView;

@interface SVSSirilandViewController : UIViewController <AFUIDebugControllerDelegate, SVSPagerViewControllerDelegate, SVSSirilandViewDelegate, SVSTranscriptStackViewControllerDataSource, SVSSuggestionsViewControllerDelegate, SVSTranscriptStackViewControllerDelegate, UIActionSheetDelegate, RadiosPreferencesDelegate, SiriUIPresentation> {

	bool _airplaneModeOn;
	bool _wifiPowerOn;
	bool _shouldDisplayUnavailable;
	bool _needsUpdatedUtterances;
	<SiriUIPresentationDataSource>* _dataSource;
	<SiriUIPresentationDelegate>* _delegate;
	SVSSuggestionsViewController* _siriUnavailableViewController;
	SVSPagerViewController* _pagerViewController;
	<AFUIDebugControlling>* _debugController;
	double _lastPresentationTime;
	UIActionSheet* _debugActionSheet;
	RadiosPreferences* _radioPreferences;
	WiFiManagerClientRef _wifiManager;
	WiFiDeviceClientRef _wifiDevice;

}

@property (nonatomic,retain) SVSSirilandView * view; 
@property (getter=_siriUnavailableViewController,nonatomic,readonly) SVSSuggestionsViewController * siriUnavailableViewController;              //@synthesize siriUnavailableViewController=_siriUnavailableViewController - In the implementation block
@property (getter=_pagerViewController,nonatomic,readonly) SVSPagerViewController * pagerViewController;                                        //@synthesize pagerViewController=_pagerViewController - In the implementation block
@property (nonatomic,retain) <AFUIDebugControlling> * debugController;                                                                          //@synthesize debugController=_debugController - In the implementation block
@property (assign,nonatomic) double lastPresentationTime;                                                                                       //@synthesize lastPresentationTime=_lastPresentationTime - In the implementation block
@property (getter=_debugActionSheet,nonatomic,retain) UIActionSheet * debugActionSheet;                                                         //@synthesize debugActionSheet=_debugActionSheet - In the implementation block
@property (assign,nonatomic) bool airplaneModeOn;                                                                                               //@synthesize airplaneModeOn=_airplaneModeOn - In the implementation block
@property (nonatomic,retain) RadiosPreferences * radioPreferences;                                                                              //@synthesize radioPreferences=_radioPreferences - In the implementation block
@property (assign,nonatomic) bool wifiPowerOn;                                                                                                  //@synthesize wifiPowerOn=_wifiPowerOn - In the implementation block
@property (assign,nonatomic) WiFiManagerClientRef wifiManager;                                                                                  //@synthesize wifiManager=_wifiManager - In the implementation block
@property (assign,nonatomic) WiFiDeviceClientRef wifiDevice;                                                                                    //@synthesize wifiDevice=_wifiDevice - In the implementation block
@property (assign,nonatomic) bool shouldDisplayUnavailable;                                                                                     //@synthesize shouldDisplayUnavailable=_shouldDisplayUnavailable - In the implementation block
@property (assign,nonatomic) bool needsUpdatedUtterances;                                                                                       //@synthesize needsUpdatedUtterances=_needsUpdatedUtterances - In the implementation block
@property (assign,nonatomic,__weak) <SiriUIPresentationDataSource> * dataSource;                                                                //@synthesize dataSource=_dataSource - In the implementation block
@property (assign,nonatomic,__weak) <SiriUIPresentationDelegate> * delegate;                                                                    //@synthesize delegate=_delegate - In the implementation block
-(void)setDebugController:(id)arg1 ;
-(CGRect)statusBarFrameForSirilandView:(id)arg1 ;
-(void)pagerViewController:(id)arg1 didActivatePageViewController:(id)arg2 oldActivePageViewController:(id)arg3 ;
-(void)pagerViewControllerDidChangeTransitionState:(id)arg1 ;
-(void)statusBarFrameDidChange;
-(void)_speakText:(id)arg1 ;
-(void)conversation:(id)arg1 didInsertItemsAtIndexPaths:(id)arg2 ;
-(void)startNewConversation;
-(void)conversation:(id)arg1 didUpdateItemsAtIndexPaths:(id)arg2 ;
-(void)conversation:(id)arg1 didRemoveItemsWithIdentifiers:(id)arg2 atIndexPaths:(id)arg3 parentItemIdentifiers:(id)arg4 ;
-(void)conversation:(id)arg1 didChangePresentationStateForItemsAtIndexPaths:(id)arg2 ;
-(void)siriDidTransitionFromState:(long long)arg1 event:(long long)arg2 ;
-(void)siriDidFinishActionsForConversationItemWithIdentifier:(id)arg1 inConversation:(id)arg2 ;
-(id)siriWillStartRequestWithOptions:(id)arg1 ;
-(void)updateSuggestedUtterances:(id)arg1 forLanguage:(id)arg2 ;
-(void)siriAvailabilityDidChange;
-(void)speechRecordingDidEndForRequest:(id)arg1 onAVRecordRoute:(id)arg2 ;
-(void)speechRecordingDidCancelForRequest:(id)arg1 onAVRecordRoute:(id)arg2 ;
-(void)speechRecordingDidFailForRequest:(id)arg1 onAVRecordRoute:(id)arg2 withError:(id)arg3 ;
-(void)siriRequestWillStart;
-(id)_createTranscriptStackViewController;
-(id)_siriUnavailableViewController;
-(id)_pagerViewController;
-(void)_setConversationAvailable:(bool)arg1 ;
-(id)_previousConversation;
-(id)_previousTranscriptStackViewController;
-(id)_activeTranscriptStackViewController;
-(id)_activeConversation;
-(id)_conversationIdentifiers;
-(id)_identifierOfPreviousConversation;
-(id)_transcriptStackViewControllers;
-(void)_speakText:(id)arg1 completion:(/*^block*/ id)arg2 ;
-(void)_speakUnavailableText;
-(id)_transcriptStackViewControllerForConversation:(id)arg1 ;
-(id)_freshTranscriptStackViewController;
-(void)_requestUpdatedSuggestionsIfNecessary;
-(void)_presentRadarComposeController;
-(id)_conversationItemAtIndexPath:(id)arg1 forTranscriptStackViewController:(id)arg2 ;
-(void)updateSiriAvailability;
-(void)wifiPowerChanged;
-(CGRect)statusBarFrameForSuggestionsViewController:(id)arg1 ;
-(void)suggestionsViewDidShowSuggestions:(id)arg1 ;
-(id)_itemInCurrentConversationAtIndexPath:(id)arg1 ;
-(void)setWifiPowerOn:(bool)arg1 ;
-(void)debugController:(id)arg1 stateDidChangeWithAddViews:(id)arg2 ;
-(void)debugController:(id)arg1 wantsPresentViewController:(id)arg2 ;
-(void)debugController:(id)arg1 wantsDismissViewController:(id)arg2 ;
-(id)debugController;
-(void)transcriptStackViewController:(id)arg1 synthesizeSpeechWithPhoneticText:(id)arg2 completion:(/*^block*/ id)arg3 ;
-(void)setLastPresentationTime:(double)arg1 ;
-(id)_debugActionSheet;
-(void)setDebugActionSheet:(id)arg1 ;
-(void)setAirplaneModeOn:(bool)arg1 ;
-(bool)wifiPowerOn;
-(id)_topTranscriptViewController;
-(id)conversationForTranscriptStackViewController:(id)arg1 ;
-(long long)siriStateForTranscriptStackViewController:(id)arg1 ;
-(id)domainObjectStoreForTranscriptStackViewController:(id)arg1 ;
-(CGRect)statusBarFrameForTranscriptStackViewController:(id)arg1 ;
-(long long)initialDisplayTypeForTranscriptStackViewController:(id)arg1 ;
-(bool)transcriptStackViewControllerWillShowSuggestions:(id)arg1 ;
-(void)transcriptStackViewControllerDidShowSuggestions:(id)arg1 ;
-(void)transcriptStackViewController:(id)arg1 didPresentConversationItemsWithIdentifiers:(id)arg2 ;
-(id)effectiveCoreLocationBundleForTranscriptStackViewController:(id)arg1 ;
-(void)transcriptStackViewController:(id)arg1 openURL:(id)arg2 completion:(/*^block*/ id)arg3 ;
-(void)transcriptStackViewController:(id)arg1 didCorrectRecognition:(id)arg2 correctionIdentifier:(id)arg3 forItemAtIndexPath:(id)arg4 ;
-(void)transcriptStackViewController:(id)arg1 performAceCommand:(id)arg2 completion:(/*^block*/ id)arg3 ;
-(bool)transcriptStackViewControllerShouldPreventUserInteraction:(id)arg1 ;
-(void)transcriptStackViewControllerWillBeginEditing:(id)arg1 ;
-(void)cancelRequestForTranscriptStackViewController:(id)arg1 ;
-(void)transcriptStackViewController:(id)arg1 speakText:(id)arg2 isPhonetic:(bool)arg3 completion:(/*^block*/ id)arg4 ;
-(void)stopSpeakingForTranscriptStackViewController:(id)arg1 ;
-(void)transcriptStackViewController:(id)arg1 setStatusViewHidden:(bool)arg2 ;
-(void)transcriptStackViewController:(id)arg1 willPresentViewController:(id)arg2 ;
-(void)transcriptStackViewController:(id)arg1 willDismissViewController:(id)arg2 ;
-(void)transcriptStackViewController:(id)arg1 setStatusBarHidden:(bool)arg2 ;
-(void)transcriptStackViewControllerWillEnterSiriland:(id)arg1 ;
-(void)transcriptStackViewControllerDidExitSiriland:(id)arg1 ;
-(id)radioPreferences;
-(void)setRadioPreferences:(id)arg1 ;
-(bool)shouldDisplayUnavailable;
-(void)setShouldDisplayUnavailable:(bool)arg1 ;
-(bool)needsUpdatedUtterances;
-(void)setNeedsUpdatedUtterances:(bool)arg1 ;
-(id)_itemInPreviousConversationAtIndexPath:(id)arg1 ;
-(void)getScreenshotImageForDebugController:(id)arg1 withCompletion:(/*^block*/ id)arg2 ;
-(void)transcriptStackViewController:(id)arg1 setHelpButtonEmphasized:(bool)arg2 ;
-(void)transcriptStackViewControllerPulseHelpButton:(id)arg1 ;
-(double)lastPresentationTime;
-(bool)airplaneModeOn;
-(double)idleTimerInterval;
-(bool)shouldDismissForIdling;
-(void)_cancelRequest;
-(id)requestContext;
-(void)dealloc;
-(void)setDataSource:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)reloadData;
-(id)dataSource;
-(id)delegate;
-(void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2 ;
-(void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2 ;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)loadView;
-(void)viewWillAppear:(bool)arg1 ;
-(id)viewController;
-(void)viewDidLoad;
-(void)viewDidAppear:(bool)arg1 ;
-(void)viewWillDisappear:(bool)arg1 ;
-(void).cxx_destruct;
-(void)siriWillActivateFromSource:(long long)arg1 ;
-(void)siriDidActivateFromSource:(long long)arg1 ;
-(void)siriDidDeactivate;
-(void)siriWillShowPasscodeUnlock;
-(void)siriWillHidePasscodeUnlock;
-(void)siriDidHidePasscodeUnlock;
-(void)userInteractionDidOccur;
-(void)didReceiveHelpAction;
-(void)didReceiveReportBugAction;
-(void)didReceiveBugButtonLongPress;
-(void)airplaneModeChanged;
-(WiFiManagerClientRef)wifiManager;
-(void)setWifiManager:(WiFiManagerClientRef)arg1 ;
-(WiFiDeviceClientRef)wifiDevice;
-(void)setWifiDevice:(WiFiDeviceClientRef)arg1 ;
@end

