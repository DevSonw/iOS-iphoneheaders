/*
* This header is generated by classdump-dyld 0.2
* on Sunday, June 29, 2014 at 1:27:09 PM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /System/Library/SpringBoardPlugins/WiFiPicker.servicebundle/WiFiPicker
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <WiFiPicker/WiFiPicker-Structs.h>
#import <SpringBoardUI/SBAlertItem.h>
#import <UIKit/UITableViewDelegate.h>
#import <UIKit/UITableViewDataSource.h>
#import <WiFiPicker/WFWiFiManagerDelegate.h>

@class NSMutableArray, NSTimer, UITableView, NSString, NSDictionary, SBAlertItem;

@interface WFWiFiAlertItem : SBAlertItem <UITableViewDelegate, UITableViewDataSource, WFWiFiManagerDelegate> {

	NSMutableArray* _networks;
	NSTimer* _scanTimer;
	UITableView* _table;
	CGSize _size;
	int _joinRow;
	NSString* _password;
	NSDictionary* _joinDict;
	SBAlertItem* _childAlert;
	bool _selectingRow;
	bool _storedPassword;
	bool _passwordFailed;
	bool _sentResponse;
	NSTimer* _btScanTimer;
	bool _btPANSupported;

}
-(void)passwordEntered:(id)arg1 ;
-(void)sspRequestAllowed:(bool)arg1 ;
-(void)wifiManager:(id)arg1 scanCompleted:(id)arg2 ;
-(void)wifiManager:(id)arg1 joinCompleted:(int)arg2 ;
-(void)childAlertDismissed:(id)arg1 ;
-(long long)_joinRow;
-(void)_finishBTScanning;
-(void)_enableTable;
-(void)startBTScan:(bool)arg1 ;
-(void)scan;
-(void)deviceConnectionFailedHandler:(id)arg1 ;
-(void)_dismissCurrentChildAlert;
-(void)stopBTScan;
-(void)_setDelegateForAlert:(id)arg1 delegate:(id)arg2 ;
-(void)registerBTNotificationHandlers;
-(void)_alertViewDismissed:(id)arg1 automatically:(bool)arg2 ;
-(void)dismissAlertsForApplicationTransition;
-(bool)allowMenuButtonDismissal;
-(void)authenticationRequestHandler:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2 ;
-(long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2 ;
-(id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2 ;
-(void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2 ;
-(void)didPresentAlertView:(id)arg1 ;
-(void)powerChangedHandler:(id)arg1 ;
-(void)deviceDiscoveredHandler:(id)arg1 ;
-(void)deviceUpdatedHandler:(id)arg1 ;
-(void)deviceRemovedHandler:(id)arg1 ;
-(void)deviceConnectedHandler:(id)arg1 ;
-(void)setNetworks:(id)arg1 ;
-(void)willActivate;
-(void)willDeactivateForReason:(int)arg1 ;
-(void)didDeactivateForReason:(int)arg1 ;
-(bool)dismissOnLock;
-(void)dismiss:(int)arg1 ;
-(void)configure:(bool)arg1 requirePasscodeForActions:(bool)arg2 ;
-(void)performUnlockAction;
@end

