/*
* This header is generated by classdump-dyld 0.2
* on Saturday, June 28, 2014 at 7:34:29 AM Japan Standard Time
* Operating System: Version 7.1.1 (Build 11D201)
* Image Source: /usr/libexec/routined
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSObject, NSMutableDictionary, NSMutableArray;

@interface RTRouteManager : NSObject {

	BOOL _usualRoutesEnabled;
	BOOL _bypassMapMatching;
	NSObject<OS_dispatch_queue>* _queue;
	NSMutableDictionary* _routes;
	NSMutableDictionary* _zilch;
	NSMutableArray* _pendingRouteRequests;
	NSMutableArray* _activeRouteRequests;
	int _maxRouteRequestRetries;

}

@property (nonatomic,readonly) NSObject<OS_dispatch_queue> * queue;              //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * routes;                       //@synthesize routes=_routes - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * zilch;                        //@synthesize zilch=_zilch - In the implementation block
@property (nonatomic,retain) NSMutableArray * pendingRouteRequests;              //@synthesize pendingRouteRequests=_pendingRouteRequests - In the implementation block
@property (nonatomic,retain) NSMutableArray * activeRouteRequests;               //@synthesize activeRouteRequests=_activeRouteRequests - In the implementation block
@property (assign,nonatomic) BOOL usualRoutesEnabled;                            //@synthesize usualRoutesEnabled=_usualRoutesEnabled - In the implementation block
@property (assign,nonatomic) int maxRouteRequestRetries;                         //@synthesize maxRouteRequestRetries=_maxRouteRequestRetries - In the implementation block
@property (assign,nonatomic) BOOL bypassMapMatching;                             //@synthesize bypassMapMatching=_bypassMapMatching - In the implementation block
+(id)sharedInstance;
-(void)lookupRouteById:(id)arg1 withCompletion:(/*^block*/ id)arg2 ;
-(void)updateRoutes:(id)arg1 ;
-(void)fetchRoutesWithCompletion:(/*^block*/ id)arg1 ;
-(void)submitBreadcrumbs:(id)arg1 withCompletion:(/*^block*/ id)arg2 ;
-(BOOL)usualRoutesEnabled;
-(void)processBreadcrumbs;
-(void)ingestNewRoute:(id)arg1 ;
-(BOOL)bypassMapMatching;
-(void)createFakeMapMatch:(id)arg1 ;
-(int)maxRouteRequestRetries;
-(void)processRequest:(id)arg1 ;
-(id)findMatchingRouteTo:(id)arg1 ;
-(BOOL)matches:(id)arg1 to:(id)arg2 ;
-(id)decompressZilchForRoute:(id)arg1 ;
-(id)zilch;
-(void)setZilch:(id)arg1 ;
-(id)pendingRouteRequests;
-(void)setPendingRouteRequests:(id)arg1 ;
-(id)activeRouteRequests;
-(void)setActiveRouteRequests:(id)arg1 ;
-(void)setUsualRoutesEnabled:(BOOL)arg1 ;
-(void)setMaxRouteRequestRetries:(int)arg1 ;
-(void)setBypassMapMatching:(BOOL)arg1 ;
-(id)init;
-(void).cxx_destruct;
-(id)queue;
-(void)setRoutes:(id)arg1 ;
-(id)routes;
-(void)releaseCaches;
@end

