/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, June 24, 2015 at 10:52:53 PM Japan Standard Time
* Operating System: Version 8.3 (Build 12F69)
* Image Source: /System/Library/Frameworks/HealthKit.framework/healthd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <healthd/HDDatabaseProtectedDataObserver.h>

@protocol OS_dispatch_queue;
@class HDDaemon, NSObject, NSMutableSet, NSMutableDictionary, NSString;

@interface HDAppSubscriptionManager : NSObject <HDDatabaseProtectedDataObserver> {

	char _shouldScheduleLaunches;
	HDDaemon* _healthDaemon;
	NSObject*<OS_dispatch_queue> _launchQueue;
	NSMutableSet* _pendingTypeCodes;
	NSMutableDictionary* _launchTimers;
	NSMutableDictionary* _launchTimerLaunchTimes;
	NSObject*<OS_dispatch_queue> _launchTimerQueue;
	int _backgroundAppRefreshNotifyToken;

}

@property (assign,nonatomic,__weak) HDDaemon * healthDaemon;                             //@synthesize healthDaemon=_healthDaemon - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> launchQueue;                   //@synthesize launchQueue=_launchQueue - In the implementation block
@property (nonatomic,retain) NSMutableSet * pendingTypeCodes;                            //@synthesize pendingTypeCodes=_pendingTypeCodes - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * launchTimers;                         //@synthesize launchTimers=_launchTimers - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * launchTimerLaunchTimes;               //@synthesize launchTimerLaunchTimes=_launchTimerLaunchTimes - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> launchTimerQueue;              //@synthesize launchTimerQueue=_launchTimerQueue - In the implementation block
@property (assign,nonatomic) int backgroundAppRefreshNotifyToken;                        //@synthesize backgroundAppRefreshNotifyToken=_backgroundAppRefreshNotifyToken - In the implementation block
@property (assign,nonatomic) char shouldScheduleLaunches;                                //@synthesize shouldScheduleLaunches=_shouldScheduleLaunches - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)defaultManager;
-(id)initWithDaemon:(id)arg1 ;
-(void)ackForBundleID:(id)arg1 dataCode:(int)arg2 anchor:(id)arg3 ackTime:(id)arg4 ;
-(id)_queue_subscriptionForActivityName:(id)arg1 ;
-(void)_queue_launchSubscription:(id)arg1 ;
-(void)setShouldScheduleLaunches:(char)arg1 ;
-(char)shouldScheduleLaunches;
-(void)_queue_scheduleLaunches:(int)arg1 ;
-(void)updateBundleID:(id)arg1 dataCode:(int)arg2 launchTime:(id)arg3 ;
-(id)_activityNameForSubscription:(id)arg1 ;
-(void)_queue_scheduleLaunchForSubscription:(id)arg1 ;
-(void)_launchTimerFired:(id)arg1 code:(id)arg2 ;
-(void)_removeLaunchForSubscription:(id)arg1 ;
-(void)_queue_updateBundleID:(id)arg1 dataCode:(int)arg2 launchTime:(id)arg3 ;
-(void)_removeSubscriptionForBundleID:(id)arg1 dataCode:(int)arg2 ;
-(void)_removeBundleID:(id)arg1 ;
-(void)_queue_subscribeForBundleID:(id)arg1 dataCode:(int)arg2 frequencyInSeconds:(double)arg3 ;
-(void)_queue_setAnchor:(id)arg1 forDataCode:(int)arg2 ;
-(void)_queue_ackForBundleID:(id)arg1 dataCode:(int)arg2 anchor:(id)arg3 ackTime:(id)arg4 ;
-(void)removeSubscriptionForBundleID:(id)arg1 dataCode:(int)arg2 ;
-(void)subscribeForBundleID:(id)arg1 dataCode:(int)arg2 frequencyInSeconds:(unsigned long long)arg3 ;
-(void)setAnchor:(id)arg1 forDataCode:(int)arg2 ;
-(NSObject*<OS_dispatch_queue>)launchQueue;
-(void)setLaunchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSMutableSet *)pendingTypeCodes;
-(void)setPendingTypeCodes:(NSMutableSet *)arg1 ;
-(NSMutableDictionary *)launchTimers;
-(void)setLaunchTimers:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)launchTimerLaunchTimes;
-(void)setLaunchTimerLaunchTimes:(NSMutableDictionary *)arg1 ;
-(NSObject*<OS_dispatch_queue>)launchTimerQueue;
-(void)setLaunchTimerQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(int)backgroundAppRefreshNotifyToken;
-(void)setBackgroundAppRefreshNotifyToken:(int)arg1 ;
-(void)dealloc;
-(void)database:(id)arg1 protectedDataDidBecomeAvailable:(char)arg2 ;
-(HDDaemon *)healthDaemon;
-(void)setHealthDaemon:(HDDaemon *)arg1 ;
-(void)removeBundleID:(id)arg1 ;
@end

