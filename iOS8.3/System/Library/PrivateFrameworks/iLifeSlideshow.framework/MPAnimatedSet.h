/*
* This header is generated by classdump-dyld 0.7
* on Thursday, June 25, 2015 at 4:31:12 AM Japan Standard Time
* Operating System: Version 8.3 (Build 12F69)
* Image Source: /System/Library/PrivateFrameworks/iLifeSlideshow.framework/iLifeSlideshow
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iLifeSlideshow/NSCoding.h>

@class NSString, NSDictionary, MUMathExpressionDoubleBased, NSMutableDictionary, NSMutableArray, MCContainerParallelizer;

@interface MPAnimatedSet : NSObject <NSCoding> {

	NSString* mAnimatedSetID;
	NSDictionary* mDescription;
	MUMathExpressionDoubleBased* mTimeOfGoodPositionFormula;
	char mTimeWraps;
	NSMutableDictionary* mSlides;
	NSMutableArray* mFeaturedSlidePositions;
	NSMutableArray* mFeaturingAttributes;
	double mStartTime;
	double mIntroDuration;
	double mMainDuration;
	double mOutroDuration;
	double mTotalNumberOfIntervals;
	double mDefaultFeaturingDuration;
	double mDefaultFeaturingAnimationDuration;
	NSDictionary* mDefaultFeaturingAnimationAttributes;
	NSDictionary* mAttributes;
	char mEaseInEaseOutBetweenFeaturedSlides;
	char mFirstSlideIsShared;
	char mLastSlideIsShared;
	NSString* mIntroAnimationID;
	NSString* mOutroAnimationID;
	float mDistance;
	float mSpeed;
	MCContainerParallelizer* mContainer;

}

@property (readonly) NSString * animatedSetID; 
@property (readonly) char timeWraps; 
@property (assign) double startTime; 
@property (readonly) double fullDuration; 
@property (assign) double defaultFeaturingDuration; 
@property (assign) double defaultFeaturingAnimationDuration; 
@property (readonly) unsigned minimumNumberOfSlides; 
@property (readonly) unsigned maximumNumberOfSlides; 
@property (readonly) char needsEvenNumberOfSlides; 
@property (copy) NSDictionary * attributes; 
@property (assign) char easeInEaseOutBetweenFeaturedSlides; 
@property (assign) char firstSlideIsShared; 
@property (assign) char lastSlideIsShared; 
@property (copy) NSString * introAnimationID; 
@property (copy) NSString * outroAnimationID; 
@property (assign) float distance; 
@property (assign) float speed; 
@property (readonly) MCContainerParallelizer * container; 
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setSpeed:(float)arg1 ;
-(void)setStartTime:(double)arg1 ;
-(float)speed;
-(MCContainerParallelizer *)container;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(NSDictionary *)attributes;
-(double)startTime;
-(void)setAttributes:(NSDictionary *)arg1 ;
-(void)setDistance:(float)arg1 ;
-(float)distance;
-(void)updateContainer;
-(void)removeSlideAtPosition:(unsigned)arg1 ;
-(void)setAnimationPathsForPlug:(id)arg1 atPosition:(unsigned)arg2 ;
-(void)setAnimationPaths:(id)arg1 onPlug:(id)arg2 atPosition:(unsigned)arg3 atTimeOffset:(double)arg4 withTimeOffsetKind:(int)arg5 forDuration:(double)arg6 withFunctionTimeOffset:(double)arg7 andFunctionTimeFactor:(double)arg8 easeIn:(char)arg9 easeOut:(char)arg10 otherAttributes:(id)arg11 ;
-(void)applyIntroAnimationPathsToPlug:(id)arg1 atPosition:(unsigned)arg2 ;
-(double)timeOfGoodPositionForPosition:(int)arg1 ;
-(id)initWithAnimatedSetID:(id)arg1 ;
-(unsigned)minimumNumberOfSlides;
-(unsigned)maximumNumberOfSlides;
-(char)needsEvenNumberOfSlides;
-(void)decodeFromSlides:(id)arg1 ;
-(void)showSlide:(id)arg1 atPosition:(unsigned)arg2 featuringAttributes:(id)arg3 ;
-(void)removeAllSlides;
-(id)slides;
-(double)featuringTimeForSlideAtPosition:(unsigned)arg1 ;
-(void)insertIntoContainer:(id)arg1 ;
-(void)computeAnimationPathsForTime:(double)arg1 andPosition:(unsigned)arg2 usingAnimationPaths:(id)arg3 otherAttributes:(id)arg4 plugTimeOffset:(double)arg5 plugTimeOffsetKind:(int)arg6 plugAnimationPaths:(id)arg7 ;
-(double)fullDuration;
-(void)chooseAnIntroAnimation;
-(void)chooseAnOutroAnimation;
-(NSString *)animatedSetID;
-(char)timeWraps;
-(double)defaultFeaturingDuration;
-(void)setDefaultFeaturingDuration:(double)arg1 ;
-(double)defaultFeaturingAnimationDuration;
-(void)setDefaultFeaturingAnimationDuration:(double)arg1 ;
-(char)easeInEaseOutBetweenFeaturedSlides;
-(void)setEaseInEaseOutBetweenFeaturedSlides:(char)arg1 ;
-(char)firstSlideIsShared;
-(void)setFirstSlideIsShared:(char)arg1 ;
-(char)lastSlideIsShared;
-(void)setLastSlideIsShared:(char)arg1 ;
-(NSString *)introAnimationID;
-(void)setIntroAnimationID:(NSString *)arg1 ;
-(NSString *)outroAnimationID;
-(void)setOutroAnimationID:(NSString *)arg1 ;
-(double)time1OfGoodPositionForPosition:(int)arg1 ;
-(double)time2OfGoodPositionForPosition:(int)arg1 ;
@end

