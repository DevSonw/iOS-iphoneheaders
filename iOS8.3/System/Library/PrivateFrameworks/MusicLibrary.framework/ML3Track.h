/*
* This header is generated by classdump-dyld 0.7
* on Thursday, June 25, 2015 at 2:42:47 AM Japan Standard Time
* Operating System: Version 8.3 (Build 12F69)
* Image Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MusicLibrary/ML3Entity.h>

@interface ML3Track : ML3Entity
+(id)propertyForMPMediaEntityProperty:(id)arg1 ;
+(void)initialize;
+(id)persistentIDColumnForTable:(id)arg1 ;
+(int)revisionTrackingCode;
+(char)trackWithPersistentID:(long long)arg1 existsInLibraryWithConnection:(id)arg2 ;
+(id)unsettableProperties;
+(id)joinClausesForProperty:(id)arg1 ;
+(id)foreignDatabaseTableForProperty:(id)arg1 ;
+(id)foreignColumnForProperty:(id)arg1 ;
+(id)databaseTable;
+(id)extraTablesToInsert;
+(id)allProperties;
+(id)predicateByOptimizingComparisonPredicate:(id)arg1 ;
+(char)libraryContentsChangeForProperty:(id)arg1 ;
+(char)libraryDynamicChangeForProperty:(id)arg1 ;
+(char)deleteFromLibrary:(id)arg1 deletionType:(int)arg2 persistentIDs:(const long long*)arg3 count:(unsigned)arg4 usingConnection:(id)arg5 ;
+(id)extraTablesToDelete;
+(id)collectionClassesToUpdateBeforeDelete;
+(char)deleteFromLibrary:(id)arg1 deletionType:(int)arg2 persistentIDs:(const long long*)arg3 count:(unsigned)arg4 ;
+(id)predisambiguatedProperties;
+(id)subselectStatementForProperty:(id)arg1 ;
+(id)subselectPropertyForProperty:(id)arg1 ;
+(id)defaultOrderingTerms;
+(id)sectionPropertyForProperty:(id)arg1 ;
+(id)containerQueryWithContainer:(id)arg1 ;
+(char)unlinkRedownloadableAssetsFromLibrary:(id)arg1 persistentIDs:(id)arg2 ;
+(char)unlinkRedownloadableAssetsFromLibrary:(id)arg1 persistentIDs:(id)arg2 deletionType:(int)arg3 deletedFileSize:(long long*)arg4 ;
+(char)registerBookmarkMetadataIdentifierFunctionOnConnection:(id)arg1 ;
+(void)enumeratePathsToDeleteFromLibrary:(id)arg1 persistentIDs:(id)arg2 usingBlock:(/*^block*/id)arg3 ;
+(void)populateSortOrdersOfPropertyValues:(id)arg1 inLibrary:(id)arg2 cachedNameOrders:(id)arg3 ;
+(char)unlinkRedownloadableAssetsFromLibrary:(id)arg1 persistentIDs:(id)arg2 deletedFileSize:(long long*)arg3 ;
+(char)clearLocationFromLibrary:(id)arg1 persistentIDs:(id)arg2 ;
+(char)clearLocationFromLibrary:(id)arg1 persistentIDs:(id)arg2 usingConnection:(id)arg3 ;
+(id)albumsDefaultOrderingTerms;
+(id)genresDefaultOrderingTerms;
+(id)podcastsDefaultOrderingTerms;
+(id)artistAllAlbumsDefaultOrderingTerms;
+(id)artistsDefaultOrderingTerms;
+(id)albumAllArtistsDefaultOrderingTerms;
+(id)albumAndArtistDefaultOrderingTerms;
+(id)composersDefaultOrderingTerms;
+(id)podcastsEpisodesDefaultOrderingTerms;
+(id)TVShowEpisodesDefaultOrderingTerms;
+(char)trackWithPersistentID:(long long)arg1 existsInLibrary:(id)arg2 ;
+(char)trackWithPersistentID:(long long)arg1 visibleInLibrary:(id)arg2 ;
+(char)trackValueAreInTheCloud:(id)arg1 ;
+(void)updateAllBookmarkableStoreBookmarkMetadataIdentifiersOnConnection:(id)arg1 ;
+(id)orderingTermsForITTGTrackOrder:(unsigned long)arg1 descending:(char)arg2 ;
+(id)containerQueryWithContainer:(id)arg1 predicate:(id)arg2 ;
+(id)containerQueryWithContainer:(id)arg1 predicate:(id)arg2 orderingTerms:(id)arg3 ;
+(id)_normalizedImportChapters:(id)arg1 trackPersistentID:(long long)arg2 ;
+(id)flattenedChapterDataWithImportChapters:(id)arg1 library:(id)arg2 trackPersistentID:(long long)arg3 ;
+(id)flattenedChapterDataFromSyncInfoDictionaries:(id)arg1 trackPersistentID:(long long)arg2 ;
+(id)flattenedChapterDataFromDAAPInfoDictionary:(id)arg1 trackPersistentID:(long long)arg2 ;
+(id)importChaptersByParsingAsset:(id)arg1 ;
-(void)_createVideoSnapshotAtTime:(double)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(id)_screenshotArtworkDataStoredAsItemArtwork;
-(char)needsVideoSnapshot;
-(void)createVideoSnapshotAtTime:(double)arg1 ;
-(id)initWithDictionary:(id)arg1 inLibrary:(id)arg2 cachedNameOrders:(id)arg3 usingConnection:(id)arg4 ;
-(id)chapterTOC;
-(id)absoluteFilePath;
-(char)updateIntegrity;
-(id)rawIntegrity;
-(id)artworkTokenAtPlaybackTime:(double)arg1 ;
-(void)updateCollectionCloudStatus;
-(id)computeSHA256OfAudioPacketDataInLocalAsset;
-(void)updateStoreBookmarkMetadataIdentifier;
-(void)populateChapterDataWithImportChapters:(id)arg1 ;
-(void)populateLocationPropertiesWithPath:(id)arg1 ;
-(void)populateLocationPropertiesWithPath:(id)arg1 isProtected:(char)arg2 ;
-(char)populateArtworkCacheWithArtworkData:(id)arg1 ;
-(id)multiverseIdentifierLibraryOnly:(char)arg1 ;
-(id)multiverseIdentifier;
-(id)protocolItem;
@end

