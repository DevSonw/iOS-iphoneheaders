/*
* This header is generated by classdump-dyld 0.7
* on Thursday, June 25, 2015 at 4:42:05 AM Japan Standard Time
* Operating System: Version 8.3 (Build 12F69)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <iWorkImport/iWorkImport-Structs.h>
@interface TSCEFormulaRewriteSpec : NSObject {

	int _type;
	CFUUIDRef _tableID;
	CFUUIDRef _conditionalStyleOwnerID;
	SCD_Union_TS320 _info;

}

@property (nonatomic,readonly) int rewriteType;                                               //@synthesize type=_type - In the implementation block
@property (nonatomic,readonly) CFUUIDRef tableID;                                             //@synthesize tableID=_tableID - In the implementation block
@property (nonatomic,readonly) CFUUIDRef conditionalStyleOwnerID;                             //@synthesize conditionalStyleOwnerID=_conditionalStyleOwnerID - In the implementation block
@property (nonatomic,readonly) UUIDData<TSP::UUIDData> tableUID; 
@property (nonatomic,readonly) UUIDData<TSP::UUIDData> conditionalStyleOwnerUID; 
-(UUIDData<TSP::UUIDData>)tableUID;
-(UUIDData<TSP::UUIDData>)conditionalStyleOwnerUID;
-(CFUUIDRef)tableID;
-(vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)expandedRowColumnUuids;
-(CFUUIDRef)affectedOwnerID;
-(CFUUIDRef)affectedConditionalStyleOwnerID;
-(SCD_Struct_TS287)updatedCellCoordinateForTableUID:(const UUIDData<TSP::UUIDData>*)arg1 originalCellCoordinate:(SCD_Struct_TS287)arg2 ;
-(SCD_Struct_TS287)previousCellCoordinateForTableUID:(const UUIDData<TSP::UUIDData>*)arg1 updatedCellCoordinate:(SCD_Struct_TS287)arg2 ;
-(id)initWithOwnerDeletion:(CFUUIDRef)arg1 ;
-(id)initWithOwnerInsertion:(CFUUIDRef)arg1 ;
-(id)initWithOwnerDeletionForCharts:(CFUUIDRef)arg1 ;
-(id)initForTableResize:(CFUUIDRef)arg1 ;
-(id)initWithTransposeTable:(CFUUIDRef)arg1 withNumberOfFooterRows:(unsigned short)arg2 ;
-(id)initForRemoveRowsOrColumnsFromTable:(CFUUIDRef)arg1 rowColumnUuids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 areRows:(char)arg3 ;
-(id)initForInsertingRowsOrColumnsIntoTable:(CFUUIDRef)arg1 rowColumnUuids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 areRows:(char)arg3 ;
-(id)initForMovingRowsOrColumnsInTable:(CFUUIDRef)arg1 rowColumnUuids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 areRows:(char)arg3 ;
-(id)initForSortWithTableID:(CFUUIDRef)arg1 rowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 ;
-(id)initForMovingRegionWithSrcTableID:(CFUUIDRef)arg1 srcColumnUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 srcRowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg3 dstTableID:(CFUUIDRef)arg4 dstColumnUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg5 dstRowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg6 ;
-(id)initForMergeCellsWithTableID:(CFUUIDRef)arg1 columnUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 rowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg3 ;
-(id)initForUndoMergeCellsWithTableID:(CFUUIDRef)arg1 columnUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg2 rowUids:(const vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)arg3 ;
-(id)initForTableIDReassignment:(const TSUUuidMap*)arg1 ;
-(/*function pointer*/void*)rewriteInfo;
-(UUIDData<TSP::UUIDData>)affectedOwnerUID;
-(unordered_set<TSU::UUIDData<TSP::UUIDData>, std::__1::hash<TSUUUID>, std::__1::equal_to<TSU::UUIDData<TSP::UUIDData> >, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > >*)affectedOwnerUIDs;
-(UUIDData<TSP::UUIDData>)affectedConditionalStyleOwnerUID;
-(SCD_Struct_TS287)updatedCellCoordinateForTableID:(CFUUIDRef)arg1 originalCellCoordinate:(SCD_Struct_TS287)arg2 ;
-(SCD_Struct_TS287)previousCellCoordinateForTableID:(CFUUIDRef)arg1 updatedCellCoordinate:(SCD_Struct_TS287)arg2 ;
-(CFUUIDRef)updatedTableIDForOriginalTableID:(CFUUIDRef)arg1 originalCellCoordinate:(SCD_Struct_TS287)arg2 ;
-(CFUUIDRef)previousTableIDForUpdatedTableID:(CFUUIDRef)arg1 updatedCellCoordinate:(SCD_Struct_TS287)arg2 ;
-(SCD_Struct_TS287)previousMergeAnchorForMergeRange:(TSUColumnRowRect)arg1 inTableID:(CFUUIDRef)arg2 isUndo:(char)arg3 ;
-(void)willModifyTable:(id)arg1 ;
-(void)didModifySrcTable:(id)arg1 dstTable:(id)arg2 ;
-(void)didModifyTable:(id)arg1 ;
-(void)reloadMergeIndexesForTable:(id)arg1 ;
-(void)clearTableIndexes;
-(void)saveToArchive:(FormulaRewriteSpecArchive*)arg1 archiver:(id)arg2 ;
-(int)rewriteType;
-(CFUUIDRef)conditionalStyleOwnerID;
-(void)dealloc;
-(id)description;
-(TSCERangeCoordinate)affectedRange;
-(id)initWithArchive:(const FormulaRewriteSpecArchive*)arg1 ;
@end

