/*
* This header is generated by classdump-dyld 0.7
* on Thursday, June 25, 2015 at 3:59:58 AM Japan Standard Time
* Operating System: Version 8.3 (Build 12F69)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKMapTileModel.h>
#import <VectorKit/VKRouteMatchedAnnotationPresentationObserver.h>
#import <VectorKit/VKMapLayer.h>
#import <VectorKit/VKStyleManagerObserver.h>

@protocol VKOverlayContainerDelegate, VKRouteMatchedAnnotationPresentation, VKOverlayContainerRouteDelegate;
@class NSMutableSet, NSMutableArray, NSMapTable, VKSkyModel, NSSet, NSString, VKStyleManager;

@interface VKOverlayContainerModel : VKMapTileModel <VKRouteMatchedAnnotationPresentationObserver, VKMapLayer, VKStyleManagerObserver> {

	NSMutableSet* _visibleOverlays;
	NSMutableArray* _overlayPainters;
	NSMapTable* _overlaysToPainters;
	NSMutableSet* _overlaysToAdd;
	NSMutableSet* _overlaysToRemove;
	id<VKOverlayContainerDelegate> _delegate;
	char _shouldCheckForOcclusion;
	char _shouldOccludeTraffic;
	char _shouldShowTraffic;
	char _isShowingRouteInStandardMode;
	NSMapTable* _persistentOverlaysToPainters;
	NSMutableSet* _persistentOverlays;
	id<VKRouteMatchedAnnotationPresentation> _routeLineSplitAnnotation;
	VKSkyModel* _skyModel;
	id<VKOverlayContainerRouteDelegate> _routeDelegate;
	ClearItem* _clearItem;
	unsigned _applicationState;
	SCD_Struct_VK146 _puckPosition;

}

@property (assign,nonatomic) char shouldCheckForOcclusion;                                                   //@synthesize shouldCheckForOcclusion=_shouldCheckForOcclusion - In the implementation block
@property (assign,nonatomic) id<VKOverlayContainerDelegate> delegate;                                        //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) SCD_Struct_VK24 puckPosition;                                                 //@synthesize puckPosition=_puckPosition - In the implementation block
@property (getter=isInRealisticMode,nonatomic,readonly) char inRealisticMode; 
@property (assign,nonatomic) char shouldShowTraffic;                                                         //@synthesize shouldShowTraffic=_shouldShowTraffic - In the implementation block
@property (assign,nonatomic) char shouldOccludeTraffic;                                                      //@synthesize shouldOccludeTraffic=_shouldOccludeTraffic - In the implementation block
@property (nonatomic,readonly) char isShowingRouteInStandardMode;                                            //@synthesize isShowingRouteInStandardMode=_isShowingRouteInStandardMode - In the implementation block
@property (nonatomic,retain) id<VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation;              //@synthesize routeLineSplitAnnotation=_routeLineSplitAnnotation - In the implementation block
@property (nonatomic,readonly) NSSet * persistentOverlays;                                                   //@synthesize persistentOverlays=_persistentOverlays - In the implementation block
@property (nonatomic,retain) VKSkyModel * skyModel;                                                          //@synthesize skyModel=_skyModel - In the implementation block
@property (assign,nonatomic) id<VKOverlayContainerRouteDelegate> routeDelegate;                              //@synthesize routeDelegate=_routeDelegate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) VKStyleManager * styleManager; 
+(char)reloadOnStylesheetChange;
-(void)dealloc;
-(void)setDelegate:(id<VKOverlayContainerDelegate>)arg1 ;
-(id)init;
-(id<VKOverlayContainerDelegate>)delegate;
-(void)reset;
-(void)didReceiveMemoryWarning:(char)arg1 ;
-(SCD_Struct_VK24)puckPosition;
-(void)setApplicationState:(unsigned)arg1 ;
-(VKStyleManager *)styleManager;
-(NSSet *)persistentOverlays;
-(void)removePersistentOverlay:(id)arg1 ;
-(void)addPersistentOverlay:(id)arg1 ;
-(id<VKRouteMatchedAnnotationPresentation>)routeLineSplitAnnotation;
-(void)setRouteLineSplitAnnotation:(id<VKRouteMatchedAnnotationPresentation>)arg1 ;
-(void)layoutScene:(id)arg1 withContext:(id)arg2 ;
-(void)updatedMatchedSection:(fast_shared_ptr<vk::RouteLineSection>*)arg1 index:(PolylineCoordinate*)arg2 ;
-(void)gglLayoutScene:(id)arg1 withContext:(id)arg2 renderQueue:(RenderQueue*)arg3 ;
-(id<VKOverlayContainerRouteDelegate>)routeDelegate;
-(void)setRouteDelegate:(id<VKOverlayContainerRouteDelegate>)arg1 ;
-(void)setShouldShowTraffic:(char)arg1 ;
-(void)setShouldCheckForOcclusion:(char)arg1 ;
-(void)stylesheetDidChange;
-(void)setShouldOccludeTraffic:(char)arg1 ;
-(void)setSkyModel:(VKSkyModel *)arg1 ;
-(unsigned long long)mapLayerPosition;
-(VKSkyModel *)skyModel;
-(char)isInRealisticMode;
-(char)shouldShowTraffic;
-(void)_updatePainterOrdering;
-(void)annotationPresentationDidChangePresentationCoordinate:(id)arg1 ;
-(char)shouldCheckForOcclusion;
-(char)shouldOccludeTraffic;
-(char)isShowingRouteInStandardMode;
@end

