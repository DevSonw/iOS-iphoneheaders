/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, June 24, 2015 at 10:17:27 PM Japan Standard Time
* Operating System: Version 8.3 (Build 12F69)
* Image Source: /System/Library/CoreServices/AssistiveTouch.app/assistivetouchd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <assistivetouchd/assistivetouchd-Structs.h>
#import <assistivetouchd/AXEventHandler.h>

@protocol SCATHardwareInputSourceDelegate;
@class NSMapTable, AXAccessQueue, NSString;

@interface SCATHardwareInputSource : NSObject <AXEventHandler> {

	char* _hidReportBuffer;
	char _available;
	char _running;
	NSMapTable* _actions;
	id<SCATHardwareInputSourceDelegate> _delegate;
	AXAccessQueue* _queue;
	IOHIDManagerRef _hidManager;
	unsigned _availabilityDetail;

}

@property (nonatomic,retain) NSMapTable * actions;                                      //@synthesize actions=_actions - In the implementation block
@property (assign,getter=isAvailable,nonatomic) char available;                         //@synthesize available=_available - In the implementation block
@property (assign,getter=isRunning,nonatomic) char running;                             //@synthesize running=_running - In the implementation block
@property (assign,nonatomic) id<SCATHardwareInputSourceDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) AXAccessQueue * queue;                                     //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic) IOHIDManagerRef hidManager;                                //@synthesize hidManager=_hidManager - In the implementation block
@property (assign,nonatomic) unsigned availabilityDetail;                               //@synthesize availabilityDetail=_availabilityDetail - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(char)handledEvent:(id)arg1 ;
-(void)_didReceiveAction:(int)arg1 start:(char)arg2 ;
-(char)isMFIInputSource;
-(void)_startHandlingEvents;
-(void)_stopHandlingEvents;
-(char)isKeyboardInputSource;
-(unsigned)availabilityDetail;
-(void)setAvailabilityDetail:(unsigned)arg1 ;
-(id)_matchingCriteria;
-(void)_didUpdateAvailability:(char)arg1 withDetail:(unsigned)arg2 ;
-(void)_startDetectingDevices;
-(void)_stopDetectingDevices;
-(void)startRunning;
-(void)stopRunning;
-(IOHIDManagerRef)hidManager;
-(void)setHidManager:(IOHIDManagerRef)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id<SCATHardwareInputSourceDelegate>)arg1 ;
-(id<SCATHardwareInputSourceDelegate>)delegate;
-(NSMapTable *)actions;
-(char)isRunning;
-(unsigned)priority;
-(AXAccessQueue *)queue;
-(void)setQueue:(AXAccessQueue *)arg1 ;
-(char)isAvailable;
-(void)setAvailable:(char)arg1 ;
-(void)setRunning:(char)arg1 ;
-(void)setActions:(NSMapTable *)arg1 ;
-(void)setDelegate:(id)arg1 queue:(id)arg2 ;
@end

