/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:59:39 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /Applications/GameCenterUIService.app/GameCenterUIService
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <GameCenterUI/GKNavigationController.h>
#import <GameCenterUI/GKRemoteViewControllerDelegate.h>
#import <Game Center~iphone/GKDaemonProxyDataUpdateDelegate.h>

@class GKGame, UIViewController;

@interface GKServiceViewController : GKNavigationController <GKRemoteViewControllerDelegate, GKDaemonProxyDataUpdateDelegate> {

	BOOL _alwaysShowDoneButton;
	GKGame* _game;
	UIViewController* _privateViewController;
	float _statusBarHeight;

}

@property (nonatomic,retain) UIViewController * privateViewController;              //@synthesize privateViewController=_privateViewController - In the implementation block
@property (nonatomic,retain) GKGame * game;                                         //@synthesize game=_game - In the implementation block
@property (assign,nonatomic) BOOL alwaysShowDoneButton;                             //@synthesize alwaysShowDoneButton=_alwaysShowDoneButton - In the implementation block
@property (assign,nonatomic) float statusBarHeight;                                 //@synthesize statusBarHeight=_statusBarHeight - In the implementation block
+(id)_remoteViewControllerInterface;
+(id)_exportedInterface;
-(void)setAlwaysShowDoneButton:(BOOL)arg1 ;
-(void)constructPrivateViewController;
-(void)resetPrivateViewController;
-(void)_startObservingChangesToProperties;
-(void)_stopObservingChangesToProperties;
-(void)presentInitialViewController:(id)arg1 ;
-(BOOL)_useBackdropViewForWindowBackground;
-(BOOL)alwaysShowDoneButton;
-(void)_addDoneButtonToViewController:(id)arg1 ;
-(void)performSelectorOnHostController:(SEL)arg1 ;
-(void)performSelectorOnHostController:(SEL)arg1 withObject:(id)arg2 ;
-(void)performSelectorOnHostController:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 ;
-(void)refreshContentsForDataType:(unsigned)arg1 userInfo:(id)arg2 ;
-(id)game;
-(void)setGame:(id)arg1 ;
-(void)remoteViewControllerIsCanceling;
-(void)remoteViewControllerIsFinishing;
-(id)observedKeyPaths;
-(void)donePressed:(id)arg1 ;
-(void)setIntialState:(id)arg1 withReply:(/*^block*/ id)arg2 ;
-(void)nudge;
-(void)setValue:(id)arg1 forKeyPath:(id)arg2 withReply:(/*^block*/ id)arg3 ;
-(void)remoteViewControllerDidFinish;
-(void)remoteViewControllerDidCancel;
-(id)privateViewController;
-(void)setPrivateViewController:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(float)statusBarHeight;
-(void)viewWillAppear:(BOOL)arg1 ;
-(float)_statusBarHeightForCurrentInterfaceOrientation;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(void)didRotateFromInterfaceOrientation:(int)arg1 ;
-(void)pushViewController:(id)arg1 animated:(BOOL)arg2 ;
-(void)setViewControllers:(id)arg1 animated:(BOOL)arg2 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setStatusBarHeight:(float)arg1 ;
@end

