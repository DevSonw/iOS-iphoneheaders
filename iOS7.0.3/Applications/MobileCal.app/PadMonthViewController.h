/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:00:02 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /Applications/MobileCal.app/MobileCal
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <MobileCal/MobileCal-Structs.h>
#import <MobileCal/MonthViewController.h>
#import <MobileCal/EKEventGestureControllerUntimedDelegate.h>
#import <EventKitUI/EKEventViewDelegate.h>
#import <DataDetectorsUI/EKEventEditViewDelegate.h>
#import <EventKitUI/EKEventViewDelegatePrivate.h>
#import <AddressBookUI/ABPersonViewControllerDelegate.h>
#import <MobileCal/PadMonthWeekViewDataSource.h>
#import <MobileCal/PadMonthWeekViewDelegate.h>
#import <UIKit/UIPopoverControllerDelegate.h>

@class UIPopoverController, EKEventEditViewController, NSArray, PadMonthWeekView, UILabel, UIView, EKEventGestureController, EKCalendarDate, PadMonthViewOccurrenceView, EKEvent;

@interface PadMonthViewController : MonthViewController <EKEventGestureControllerUntimedDelegate, EKEventViewDelegate, EKEventEditViewDelegate, EKEventViewDelegatePrivate, ABPersonViewControllerDelegate, PadMonthWeekViewDataSource, PadMonthWeekViewDelegate, UIPopoverControllerDelegate> {

	UIPopoverController* _eventDetailPopover;
	BOOL _presentDetailPopoverAfterRotation;
	BOOL _currentlyEditingEvent;
	EKEventEditViewController* _editViewController;
	NSArray* _verticalGridLines;
	PadMonthWeekView* _originalWeekView;
	PadMonthWeekView* _zoomedDayView;
	UILabel* _originalWeekdayLabel;
	UIView* _originalTodayCircle;
	CGAffineTransform _unzoomTransform;
	CGAffineTransform _unzoomWeekdayLabelTransform;
	CGAffineTransform _unzoomTodayCircleTransform;
	EKEventGestureController* _gestureController;
	EKCalendarDate* _initialDragDate;
	BOOL _draggingExistingEvent;
	PadMonthViewOccurrenceView* _draggingEventView;
	EKEvent* _draggingEvent;
	CGPoint _dragOffset;
	EKCalendarDate* _draggedStartDate;
	EKCalendarDate* _draggedEndDate;
	PadMonthWeekView* _weekContainingSelectedOccurrence;
	EKCalendarDate* _initialDate;
	EKCalendarDate* _navigationBarDisplayedDate;
	BOOL _shouldPresentEventDetailsForSelectedOccurrence;
	EKCalendarDate* _activeDateDuringRotation;

}

@property (assign,nonatomic) BOOL shouldPresentEventDetailsForSelectedOccurrence;              //@synthesize shouldPresentEventDetailsForSelectedOccurrence=_shouldPresentEventDetailsForSelectedOccurrence - In the implementation block
@property (nonatomic,retain) EKCalendarDate * activeDateDuringRotation;                        //@synthesize activeDateDuringRotation=_activeDateDuringRotation - In the implementation block
+(float)subviewHeightForDate:(id)arg1 orientation:(int)arg2 ;
-(void)padMonthWeekView:(id)arg1 touchesBegan:(id)arg2 withEvent:(id)arg3 ;
-(void)padMonthWeekView:(id)arg1 touchesMoved:(id)arg2 withEvent:(id)arg3 ;
-(void)padMonthWeekView:(id)arg1 touchesEnded:(id)arg2 withEvent:(id)arg3 ;
-(id)occurrencesForStartDate:(id)arg1 endDate:(id)arg2 waitForLoad:(BOOL)arg3 ;
-(void)padMonthWeekView:(id)arg1 didTapOccurrence:(id)arg2 onDay:(id)arg3 ;
-(void)didCompleteBackgroundOccurrenceRenderingForPadMonthWeekView:(id)arg1 ;
-(CGRect)frameForTodayHighlight;
-(id)initWithCalendarDate:(id)arg1 model:(id)arg2 ;
-(void)showEvent:(id)arg1 animated:(BOOL)arg2 showDetails:(BOOL)arg3 ;
-(float)decelerationDistanceThresholdForPreferringMonthBoundary;
-(void)didEndScrolling;
-(void)updatePalette:(id)arg1 ;
-(void)updateNavigationBarDisplayedDateString;
-(id)createInitialViewForDate:(id)arg1 ;
-(float)subviewBufferExtensionMultiplier;
-(id)calendarDateForSubviewAboveSubviewWithCalendarDate:(id)arg1 ;
-(id)calendarDateForSubviewBelowSubviewWithCalendarDate:(id)arg1 ;
-(float)heightForSubviewWithCalendarDate:(id)arg1 ;
-(float)topInsetForSubviewWithCalendarDate:(id)arg1 ;
-(unsigned)maximumCachedReusableViews;
-(id)newTopViewAboveViewWithCalendarDate:(id)arg1 ;
-(id)newBottomViewBelowViewWithCalendarDate:(id)arg1 ;
-(void)_displayedOccurrencesChanged:(id)arg1 ;
-(void)_editorUpdated:(id)arg1 ;
-(void)_closeDetailPopoverAnimated:(BOOL)arg1 ;
-(void)setActiveDateDuringRotation:(id)arg1 ;
-(void)_showDetailPopoverForOccurrence:(id)arg1 inWeek:(id)arg2 ;
-(id)activeDateDuringRotation;
-(id)_createPadMonthWeekViewForDate:(id)arg1 ;
-(void)_showDetailPopoverForOccurrence:(id)arg1 inWeek:(id)arg2 animatedScrollToVisible:(BOOL)arg3 ;
-(void)setShouldPresentEventDetailsForSelectedOccurrence:(BOOL)arg1 ;
-(void)_removeDraggingOccurrenceAnimated:(BOOL)arg1 ;
-(void)_removeAllWeekHighlights;
-(void)_selectOccurrence:(id)arg1 inWeek:(id)arg2 ;
-(id)_occurrenceAtPoint:(CGPoint)arg1 ;
-(id)_weekViewAtPoint:(CGPoint)arg1 pointInWeek:(CGPoint*)arg2 ;
-(void)_scrubAtPoint:(CGPoint)arg1 ;
-(void)_scrubWithTouches:(id)arg1 ;
-(void)_closeZoomedDayAnimated:(BOOL)arg1 ;
-(id)_dateAtPoint:(CGPoint)arg1 ;
-(CGRect)_startingFrameForEvent:(id)arg1 atPoint:(CGPoint)arg2 ;
-(void)_event:(id)arg1 wasCancelledAtPoint:(CGPoint)arg2 ;
-(void)_updateDraggingOffsetTimesForPoint:(CGPoint)arg1 ;
-(void)_updateWeekHighlightsForDragPoint:(CGPoint)arg1 ;
-(CGRect)_mainFrameForEvent:(id)arg1 atLastPosition:(BOOL)arg2 atPoint:(CGPoint)arg3 ;
-(void)_animateDraggingOccurrenceToDate:(id)arg1 atLastPosition:(BOOL)arg2 dropPoint:(CGPoint)arg3 completion:(/*^block*/ id)arg4 ;
-(void)_saveDraggedEventWithSpan:(int)arg1 ;
-(id)pushedWeekViewControllerWithDate:(id)arg1 animated:(BOOL)arg2 ;
-(void)_showZoomedDayForMonthWeekView:(id)arg1 onDay:(id)arg2 andSelectOccurrence:(id)arg3 ;
-(BOOL)_isEventAllInOneWeek:(id)arg1 ;
-(BOOL)shouldPresentEventDetailsForSelectedOccurrence;
-(BOOL)personViewController:(id)arg1 shouldPerformDefaultActionForPerson:(void*)arg2 property:(int)arg3 identifier:(int)arg4 ;
-(void)eventViewController:(id)arg1 didCompleteWithAction:(int)arg2 ;
-(void)eventViewControllerWillBeginEditingEvent:(id)arg1 ;
-(void)eventViewControllerDidBeginEditingEventWithEditViewController:(id)arg1 ;
-(void)eventViewControllerWillFinishEditingEvent:(id)arg1 deleted:(BOOL)arg2 ;
-(void)eventEditViewController:(id)arg1 didCompleteWithAction:(int)arg2 ;
-(id)touchTrackingViewForEventGestureController:(id)arg1 ;
-(BOOL)eventGestureControllerShouldAllowLongPress:(id)arg1 ;
-(void)significantTimeChangeOccurred;
-(void)eventGestureController:(id)arg1 setUpAtPoint:(CGPoint)arg2 ;
-(void)eventGestureController:(id)arg1 updateToPoint:(CGPoint)arg2 ;
-(void)eventGestureControllerCancelled:(id)arg1 ;
-(void)eventGestureController:(id)arg1 commitToPoint:(CGPoint)arg2 ;
-(void)eventGestureControllerScrollTimerFired:(id)arg1 ;
-(BOOL)isDraggingOccurrence;
-(void)dealloc;
-(BOOL)shouldAutorotate;
-(unsigned)supportedInterfaceOrientations;
-(void)viewWillLayoutSubviews;
-(void)viewDidLayoutSubviews;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)loadView;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2 ;
-(void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2 ;
-(void)didRotateFromInterfaceOrientation:(int)arg1 ;
-(void)didScroll;
-(void)popoverControllerDidDismissPopover:(id)arg1 ;
-(void).cxx_destruct;
@end

