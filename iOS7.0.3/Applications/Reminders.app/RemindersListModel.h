/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:00:54 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /Applications/Reminders.app/Reminders
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue, RemindersListModelDelegate;
#import <Reminders/Reminders-Structs.h>
@class EKEventStore, NSMutableSet, NSMutableArray, NSMutableDictionary, NSObject, NSMutableIndexSet, EKCalendar, EKCalendarDate, NSArray;

@interface RemindersListModel : NSObject {

	EKEventStore* _eventStore;
	NSMutableSet* _remindersToSave;
	NSMutableArray* _recentlyCheckedReminders;
	NSMutableArray* _recentlyUncheckedReminders;
	NSMutableDictionary* _recentlyUncheckedDates;
	NSObject<OS_dispatch_queue>* _dataLock;
	NSMutableArray* _reminders;
	BOOL _hasPerformedFirstReload;
	BOOL _showsCompletedReminders;
	NSMutableIndexSet* _alreadyFaultedIndexes;
	NSMutableIndexSet* _indexesForFaulting;
	NSRange _lastSeenReminderRange;
	unsigned _reloadCount;
	BOOL _isPaused;
	BOOL _needsReloadOnResume;
	BOOL _isPausedByForce;
	BOOL _isReloadInProgress;
	BOOL _isListEmpty;
	BOOL _isListEmptyIsValid;
	int _numberOfIncompleteReminders;
	BOOL _needsReload;
	EKCalendar* _calendar;
	EKCalendarDate* _dueDate;
	<RemindersListModelDelegate>* _delegate;
	int _numberOfCompletedReminders;
	int _displayedNumberOfCompletedReminders;
	NSArray* _recentlyAddedReminders;

}

@property (nonatomic,retain) EKCalendar * calendar;                                       //@synthesize calendar=_calendar - In the implementation block
@property (nonatomic,retain) EKCalendarDate * dueDate;                                    //@synthesize dueDate=_dueDate - In the implementation block
@property (assign,nonatomic,__weak) <RemindersListModelDelegate> * delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL showsCompletedReminders;                                //@synthesize showsCompletedReminders=_showsCompletedReminders - In the implementation block
@property (assign,nonatomic) BOOL needsReload;                                            //@synthesize needsReload=_needsReload - In the implementation block
@property (assign,nonatomic) int numberOfCompletedReminders;                              //@synthesize numberOfCompletedReminders=_numberOfCompletedReminders - In the implementation block
@property (assign,nonatomic) int displayedNumberOfCompletedReminders;                     //@synthesize displayedNumberOfCompletedReminders=_displayedNumberOfCompletedReminders - In the implementation block
@property (readonly) int numberOfIncompleteReminders; 
@property (readonly) int displayedNumberOfIncompleteReminders; 
@property (retain) NSArray * recentlyAddedReminders;                                      //@synthesize recentlyAddedReminders=_recentlyAddedReminders - In the implementation block
@property (readonly) NSArray * recentlyCheckedReminders;                                  //@synthesize recentlyCheckedReminders=_recentlyCheckedReminders - In the implementation block
@property (readonly) NSArray * recentlyUncheckedReminders;                                //@synthesize recentlyUncheckedReminders=_recentlyUncheckedReminders - In the implementation block
-(void)setNeedsReload:(BOOL)arg1 ;
-(BOOL)needsReload;
-(int)displayedNumberOfIncompleteReminders;
-(BOOL)needsReloadForChangedObjectIDs:(id)arg1 ;
-(BOOL)hasPerformedFirstReload;
-(BOOL)invalidateMaintainedReminders;
-(void)setPausedByForce:(BOOL)arg1 ;
-(BOOL)hasRequestedFirstReload;
-(void)saveUnsavedReminders;
-(BOOL)deleteReminder:(id)arg1 ;
-(void)checkOrUncheckReminder:(id)arg1 ;
-(int)numberOfReminders;
-(int)numberOfIncompleteReminders;
-(void)moveReminderAtIndex:(int)arg1 toIndex:(int)arg2 ;
-(BOOL)showsCompletedReminders;
-(id)recentlyAddedReminders;
-(id)reminderAtIndex:(int)arg1 ;
-(BOOL)canAccessPropertiesOfReminderAtIndex:(int)arg1 ;
-(int)indexOfReminder:(id)arg1 protected:(BOOL)arg2 ;
-(int)numberOfCompletedReminders;
-(void)setShowsCompletedReminders:(BOOL)arg1 ;
-(void)clearRecentlyAddedReminders;
-(int)displayedNumberOfCompletedReminders;
-(BOOL)saveReminderImmediately:(id)arg1 ;
-(void)addReminder:(id)arg1 ;
-(BOOL)willDisplayRemindersInRange:(NSRange)arg1 ;
-(void)faultReminder:(id)arg1 ;
-(void)setNumberOfCompletedReminders:(int)arg1 ;
-(id)storeProtectedData:(id)arg1 rangeAlreadyFaulted:(NSRange)arg2 ;
-(BOOL)protectedCanReminderBeInserted:(id)arg1 ;
-(void)protectedRemoveReminderAtIndex:(int)arg1 ;
-(BOOL)matchesReminder:(id)arg1 ;
-(id)predicateForCountingReminders;
-(id)fetchProtectedData;
-(BOOL)shouldInvalidateReminder:(id)arg1 ;
-(BOOL)_hasBeenCanceled:(unsigned)arg1 ;
-(void)_fetchPropertiesForReminders:(id)arg1 ;
-(BOOL)hasBeenCanceled:(unsigned)arg1 ;
-(NSRange)_faultStartingChunk:(id)arg1 ;
-(void)loadRemindersInRange:(NSRange)arg1 reloadNumber:(unsigned)arg2 ;
-(BOOL)_protectedNeedsLoadAheadForRange:(NSRange)arg1 inForwardDirection:(BOOL)arg2 ;
-(void)_protectedLoadAheadForRange:(NSRange)arg1 reloadNumber:(unsigned)arg2 inForwardDirection:(BOOL)arg3 ;
-(BOOL)_protectedWillDisplayRemindersInRange:(NSRange)arg1 ;
-(void)_scheduleSaveForReminder:(id)arg1 ;
-(void)_protectedInsertReminder:(id)arg1 atIndex:(int)arg2 ;
-(void)addRecentlyAddedReminder:(id)arg1 ;
-(void)_attemptToResumeReloads;
-(void)removeRecentlyAddedReminder:(id)arg1 ;
-(void)_adjustOrderOnReminders:(id)arg1 boundaryOrder:(unsigned)arg2 reverse:(BOOL)arg3 ;
-(void)_adjustOrderOnReminders:(id)arg1 reverse:(BOOL)arg2 ;
-(void)_reorderReminder:(id)arg1 betweenEarlier:(id)arg2 later:(id)arg3 ;
-(BOOL)isListEmpty;
-(BOOL)reminderWasSavedAtIndex:(int)arg1 ;
-(void)setDisplayedNumberOfCompletedReminders:(int)arg1 ;
-(void)setRecentlyAddedReminders:(id)arg1 ;
-(id)recentlyCheckedReminders;
-(id)recentlyUncheckedReminders;
-(id)propertiesToFetch;
-(id)initWithEventStore:(id)arg1 ;
-(id)dueDate;
-(void)setDueDate:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(void)reload;
-(id)delegate;
-(void)resume;
-(void)setCalendar:(id)arg1 ;
-(id)timeZone;
-(id)calendar;
-(void)pause;
-(void).cxx_destruct;
@end

