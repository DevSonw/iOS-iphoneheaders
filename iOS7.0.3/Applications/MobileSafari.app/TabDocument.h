/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:00:29 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /Applications/MobileSafari.app/MobileSafari
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <MobileSafari/MobileSafari-Structs.h>
#import <MobileSafari/ReaderControllerDelegate.h>
#import <UIKit/WebUIBrowserLoadingControllerDelegate.h>
#import <MobileSafari/StoreBannerDelegate.h>
#import <MobileSafari/WBSFluidProgressStateSource.h>
#import <MobileSafari/WBSFluidProgressControllerWindowDelegate.h>

@protocol TabDocumentDelegate;
@class NSString, UIWebBrowserView, QuickLookDocumentController, UIWebPDFViewHandler, CALayer, TabBarItem, WebUIBrowserLoadingController, NSURL, WebDownload, QuickLookDocument, NSURLRequest, NSTimer, WBSFluidProgressState, WBSFluidProgressController, NSCountedSet, NSMutableSet, UIColor, NSMutableArray, NSDictionary, SecurityInfo, ReaderContext, PageLoadTestStatistics, FluidProgressView, NavigationBarItem, StoreBanner, UIImage, TiltedTabItem, WebBookmark, WBSAutomaticReadingListItem;

@interface TabDocument : NSObject <ReaderControllerDelegate, WebUIBrowserLoadingControllerDelegate, StoreBannerDelegate, WBSFluidProgressStateSource, WBSFluidProgressControllerWindowDelegate> {

	int _retainCount;
	<TabDocumentDelegate>* _delegate;
	NSString* _uuid;
	UIWebBrowserView* _browserView;
	QuickLookDocumentController* _quickLookDocumentController;
	BOOL _quickLookDocumentCheckCompleted;
	UIWebPDFViewHandler* _pdfViewHandler;
	float _zoomScale;
	CALayer* _holdingLayer;
	TabBarItem* _tabBarItem;
	WebUIBrowserLoadingController* _loadingController;
	NSURL* _responseURL;
	int _downloadingFileType;
	WebDownload* _fileDownload;
	NSString* _fileDownloadPath;
	QuickLookDocument* _quickLookDocument;
	NSString* _startURLString;
	NSURLRequest* _failedRequest;
	BOOL _reloadAfterResume;
	BOOL _reloadingFailedRequest;
	NSString* _EVOrganizationName;
	NSURL* _originatingURL;
	NSURL* _tabReuseURL;
	CGPoint _scrollPoint;
	BOOL _omittedFromTabExposeButtonCount;
	BOOL _isBlankDocument;
	BOOL _isPopup;
	BOOL _suspended;
	BOOL _hibernated;
	BOOL _allowURLAsTitle;
	BOOL _loadWasUserDriven;
	BOOL _watchingProgressForStall;
	NSTimer* _progressStalledTimer;
	BOOL _progressStalled;
	BOOL _progressCanStall;
	BOOL _waitingForImportantSubresources;
	WBSFluidProgressState* _fluidProgressState;
	WBSFluidProgressController* _fluidProgressController;
	long long _downloadBytesExpected;
	unsigned _downloadBytesLoaded;
	int _resourcesCurrentlyLoadingCount;
	NSCountedSet* _subresourceHostsCurrentlyLoading;
	NSMutableSet* _knownResponsiveSubresourceHosts;
	BOOL _isActive;
	BOOL _isPagePaused;
	BOOL _isClosed;
	BOOL _frozenForNavigationGesture;
	UIColor* _bodyBackgroundColor;
	double _lastViewedTime;
	NSMutableArray* _alerts;
	NSDictionary* _backForwardListDictionary;
	void* _internal;
	BOOL _showingSecurityWarningPage;
	BOOL _loadingSecurityWarningPage;
	SecurityInfo* _provisionalSecurityInfo;
	ReaderContext* _readerContext;
	UIWebBrowserView* _readerView;
	BOOL _hasDoneReaderAvailabilityDetection;
	NSTimer* _readerAvailabilityDetectionTimer;
	int _bookmarkLoadingState;
	BOOL _userHasManipulatedVisibleRegion;
	BOOL _wasOpenedFromLink;
	BOOL _wasOpenedFromHistory;
	unsigned _downloadBackgroundTaskIdentifier;
	unsigned _resourceLoadBackgroundTaskIdentifier;
	double _pageLoadStartTime;
	double _firstVisualLayoutTime;
	double _pageLoadStopTime;
	PageLoadTestStatistics* _pageLoadStatistics;
	double _lastLoadCommittedTime;
	BOOL _loadWasStartedByUserClick;
	BOOL _goingBackAfterQuickStop;
	BOOL _clearVisitedLinkStyleAfterQuickStop;
	BOOL _showingReader;
	BOOL _shouldRestoreReader;
	int _readerViewTopScrollOffset;
	int _externalAppRedirectState;
	NSDictionary* _initialArticleScrollDictionaryForCloudTab;
	unsigned _progressAnimationSuppressedCount;
	FluidProgressView* _progressView;
	NavigationBarItem* _navigationBarItem;
	BOOL _ignoringNavigationToExternalApplication;
	BOOL _usesMinimalTiling;
	BOOL siteCustomIconPrecomposed;
	BOOL showingErrorPage;
	BOOL _suppressingProgressAnimationForNavigationGesture;
	BOOL _wantsReaderWhenActivated;
	BOOL _usesPrivateBrowsingStyle;
	BOOL _displayingStandaloneImage;
	BOOL _requiresAlertForExternalRedirect;
	StoreBanner* _storeBanner;
	UIImage* siteCustomIcon;
	TiltedTabItem* _tiltedTabItem;
	WebBookmark* _bookmark;
	int _searchProviderScriptingAvailability;
	unsigned _lastRenderTreeSize;
	WBSAutomaticReadingListItem* _automaticReadingListItem;

}

@property (nonatomic,retain) WebDownload * fileDownload;                                                                 //@synthesize fileDownload=_fileDownload - In the implementation block
@property (nonatomic,retain) NSString * fileDownloadPath;                                                                //@synthesize fileDownloadPath=_fileDownloadPath - In the implementation block
@property (nonatomic,retain) QuickLookDocument * quickLookDocument;                                                      //@synthesize quickLookDocument=_quickLookDocument - In the implementation block
@property (nonatomic,readonly) CALayer * holdingLayer;                                                                   //@synthesize holdingLayer=_holdingLayer - In the implementation block
@property (assign,nonatomic) BOOL wasOpenedFromLink;                                                                     //@synthesize wasOpenedFromLink=_wasOpenedFromLink - In the implementation block
@property (copy) NSURL * originatingURL;                                                                                 //@synthesize originatingURL=_originatingURL - In the implementation block
@property (nonatomic,retain) QuickLookDocumentController * quickLookDocumentController;                                  //@synthesize quickLookDocumentController=_quickLookDocumentController - In the implementation block
@property (assign,getter=isOmittedFromTabExposeButtonCount,nonatomic) BOOL omittedFromTabExposeButtonCount;              //@synthesize omittedFromTabExposeButtonCount=_omittedFromTabExposeButtonCount - In the implementation block
@property (assign,getter=isShowingReader,nonatomic) BOOL showingReader;                                                  //@synthesize showingReader=_showingReader - In the implementation block
@property (nonatomic,readonly) UIWebBrowserView * readerView;                                                            //@synthesize readerView=_readerView - In the implementation block
@property (assign,nonatomic) BOOL shouldRestoreReader;                                                                   //@synthesize shouldRestoreReader=_shouldRestoreReader - In the implementation block
@property (assign,nonatomic) int readerViewTopScrollOffset;                                                              //@synthesize readerViewTopScrollOffset=_readerViewTopScrollOffset - In the implementation block
@property (assign,nonatomic) BOOL usesMinimalTiling;                                                                     //@synthesize usesMinimalTiling=_usesMinimalTiling - In the implementation block
@property (nonatomic,retain) StoreBanner * storeBanner;                                                                  //@synthesize storeBanner=_storeBanner - In the implementation block
@property (assign,nonatomic) int externalAppRedirectState;                                                               //@synthesize externalAppRedirectState=_externalAppRedirectState - In the implementation block
@property (nonatomic,retain) UIImage * siteCustomIcon; 
@property (assign,nonatomic) BOOL siteCustomIconPrecomposed; 
@property (assign,nonatomic) BOOL showingErrorPage; 
@property (nonatomic,readonly) TiltedTabItem * tiltedTabItem;                                                            //@synthesize tiltedTabItem=_tiltedTabItem - In the implementation block
@property (nonatomic,retain) WebBookmark * bookmark;                                                                     //@synthesize bookmark=_bookmark - In the implementation block
@property (assign,nonatomic) BOOL suppressingProgressAnimationForNavigationGesture;                                      //@synthesize suppressingProgressAnimationForNavigationGesture=_suppressingProgressAnimationForNavigationGesture - In the implementation block
@property (assign,nonatomic) BOOL wantsReaderWhenActivated;                                                              //@synthesize wantsReaderWhenActivated=_wantsReaderWhenActivated - In the implementation block
@property (assign,nonatomic) BOOL usesPrivateBrowsingStyle;                                                              //@synthesize usesPrivateBrowsingStyle=_usesPrivateBrowsingStyle - In the implementation block
@property (assign,nonatomic) int searchProviderScriptingAvailability;                                                    //@synthesize searchProviderScriptingAvailability=_searchProviderScriptingAvailability - In the implementation block
@property (nonatomic,readonly) NSString * currentHistoryItemOriginalURLString; 
@property (assign,getter=isDisplayingStandaloneImage,nonatomic) BOOL displayingStandaloneImage;                          //@synthesize displayingStandaloneImage=_displayingStandaloneImage - In the implementation block
@property (assign,nonatomic) unsigned lastRenderTreeSize;                                                                //@synthesize lastRenderTreeSize=_lastRenderTreeSize - In the implementation block
@property (assign,nonatomic) BOOL requiresAlertForExternalRedirect;                                                      //@synthesize requiresAlertForExternalRedirect=_requiresAlertForExternalRedirect - In the implementation block
@property (nonatomic,retain) PageLoadTestStatistics * pageLoadStatistics;                                                //@synthesize pageLoadStatistics=_pageLoadStatistics - In the implementation block
@property (nonatomic,readonly) WBSFluidProgressState * progressState;                                                    //@synthesize fluidProgressState=_fluidProgressState - In the implementation block
@property (nonatomic,retain) WBSAutomaticReadingListItem * automaticReadingListItem;                                     //@synthesize automaticReadingListItem=_automaticReadingListItem - In the implementation block
@property (nonatomic,readonly) NavigationBarItem * navigationBarItem; 
-(id)URLForSharing;
-(id)quickLookDocument;
-(BOOL)isShowingReader;
-(id)readerContext;
-(BOOL)isPDFDocument;
-(BOOL)isBlankDocument;
-(BOOL)supportsFindOnPage;
-(BOOL)isReaderAvailable;
-(void)setUsesPrivateBrowsingStyle:(BOOL)arg1 ;
-(void)suspendForEventsOnly:(BOOL)arg1 ;
-(void)clearReaderView;
-(void)updateInternalPreferences;
-(void)loadURL:(id)arg1 userDriven:(BOOL)arg2 ;
-(double)lastPageVisualLayoutTime;
-(double)lastPageLoadTime;
-(double)lastViewedTime;
-(BOOL)isHibernated;
-(BOOL)isImportantDocument;
-(void)removeNonVisibleTiles;
-(void)clearBackForwardCache;
-(void)setSiteCustomIcon:(id)arg1 ;
-(void)hibernate;
-(BOOL)clearNavigationSnapshots;
-(BOOL)clearLowPriorityNavigationSnapshots;
-(void)loadTestURL:(id)arg1 withCallback:(/*^block*/ id)arg2 ;
-(void)goToHistoryItem:(id)arg1 ;
-(unsigned)readingListBookmarkID;
-(id)automaticReadingListItem;
-(id)titleForNewBookmark;
-(void)addAlert:(id)arg1 ;
-(void)setPagePaused:(BOOL)arg1 withEvents:(BOOL)arg2 ;
-(id)readerView;
-(id)storeBanner;
-(void)showStoreBannerIfNecessary;
-(void)webViewDidDrawDocument;
-(void)setExternalAppRedirectState:(int)arg1 ;
-(void)endSuppressingProgressAnimation;
-(void)beginSuppressingProgressAnimation;
-(id)navigationBarItem;
-(id)tiltedTabItem;
-(BOOL)showingErrorPage;
-(BOOL)showingSecurityWarningPage;
-(BOOL)hasQuickLookContent;
-(id)quickLookDocumentController;
-(id)EVOrganizationName;
-(void)setUserHasManipulatedVisibleRegion:(BOOL)arg1 ;
-(void)setSuppressingProgressAnimationForNavigationGesture:(BOOL)arg1 ;
-(void)updateTabTitle;
-(id)bodyBackgroundColor;
-(void)clearBackForwardList;
-(void)setStoreBanner:(id)arg1 ;
-(void)setClosed:(BOOL)arg1 userDriven:(BOOL)arg2 ;
-(void)willClose;
-(void)setShowingReader:(BOOL)arg1 ;
-(void)setBackForwardListDictionary:(id)arg1 ;
-(void)restoreBackForwardListFromDictionary;
-(void)copyNavigationSnapshotsFromBackForwardList:(id)arg1 ;
-(void)animateProgressForCompletedDocument;
-(void)clearBackForwardListKeepingCurrentItem;
-(void)createBrowserReaderViewIfNeeded;
-(void)setReaderViewTopScrollOffset:(int)arg1 ;
-(int)readerViewTopScrollOffset;
-(BOOL)hasDoneReaderDetection;
-(id)pdfHandler;
-(void)setOmittedFromTabExposeButtonCount:(BOOL)arg1 ;
-(id)resultOfLoadingURL:(id)arg1 ;
-(void)setUsesMinimalTiling:(BOOL)arg1 ;
-(void)freezeForNavigationGesture;
-(BOOL)mustShowBarsForHistoryPosition:(int)arg1 ;
-(void)setRenderTreeSizeResetThresholdForPosition:(int)arg1 ;
-(void)unfreezeAfterNavigationGesture:(BOOL)arg1 ;
-(void)clearRenderTreeSizeThresholdForReset;
-(void)resetTilesSynchronously;
-(void)updateBodyBackgroundColor;
-(BOOL)didContentSizePassThresholdForSnapshotDelay;
-(void)setRequiresAlertForExternalRedirect:(BOOL)arg1 ;
-(void)loadURL:(id)arg1 fromBookmark:(id)arg2 ;
-(void)loadAutomaticReadingListItem:(id)arg1 ;
-(void)setWantsReaderWhenActivated:(BOOL)arg1 ;
-(void)performAction:(int)arg1 forAlert:(id)arg2 ;
-(void)detectReaderAvailabilityWithDelay:(double)arg1 ;
-(id)backListControllerWithLimit:(int)arg1 ;
-(id)forwardListControllerWithLimit:(int)arg1 ;
-(void)addAlertWithTitle:(id)arg1 bodyText:(id)arg2 ;
-(void)loadCloudTab:(id)arg1 ;
-(BOOL)loadWasUserDriven;
-(void)endResourceLoadBackgroundTask;
-(void)beginResourceLoadBackgroundTask;
-(void)_continueAfterCertificateAlertWithContext:(id)arg1 ;
-(BOOL)shouldRestoreReader;
-(id)holdingLayer;
-(BOOL)shouldShowReaderOnActivate;
-(void)setTabReuseURL:(id)arg1 ;
-(void)setWasOpenedFromLink:(BOOL)arg1 ;
-(void)setLoading;
-(void)setBlankDocument:(BOOL)arg1 ;
-(void)setOriginatingURL:(id)arg1 ;
-(BOOL)isPopup;
-(void)setAutomaticReadingListItem:(id)arg1 ;
-(BOOL)currentPageLoadedFromReadingList;
-(id)customUserVisibleStringForReadingListBookmarkURL:(id)arg1 ;
-(void)didInitReaderJSController:(ReaderJSController*)arg1 ;
-(BOOL)isShowingReadingListArchive;
-(id)readerPageArchiveURL;
-(int)readerOperationMode;
-(BOOL)networkIsReachable;
-(void)didClickLinkInReaderWithRequest:(id)arg1 ;
-(void)didClickLinkRequestingNewWindowInReaderWithRequest:(id)arg1 ;
-(void)didChangeNextPageLoadingState:(BOOL)arg1 ;
-(void)willActivateReader;
-(void)didActivateReader;
-(void)didDeactivateReaderWithMode:(int)arg1 ;
-(void)becameActive;
-(id)backForwardListDictionary;
-(void)setNeedsNewTabSnapshot;
-(void)setLastViewedTime:(double)arg1 ;
-(BOOL)wasOpenedFromLink;
-(id)tabReuseURL;
-(BOOL)usesPrivateBrowsingStyle;
-(unsigned)lastRenderTreeSize;
-(int)searchProviderScriptingAvailability;
-(BOOL)isDisplayingStandaloneImage;
-(id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 hibernated:(BOOL)arg4 bookmark:(id)arg5 ;
-(void)setShouldRestoreReader:(BOOL)arg1 ;
-(void)setDisplayingStandaloneImage:(BOOL)arg1 ;
-(void)goToCurrentHistoryItem;
-(id)currentHistoryItemOriginalURLString;
-(void)setSearchProviderScriptingAvailability:(int)arg1 ;
-(void)setLastRenderTreeSize:(unsigned)arg1 ;
-(void)_updateTextSize;
-(void)setPrivateBrowsingEnabledInReader:(BOOL)arg1 ;
-(void)_setNeedsNewTabSnapshot;
-(void)initializeSafeBrowsingObserver;
-(void)clearReaderContext;
-(void)_cancelProgressStalledTimer;
-(void)setQuickLookDocument:(id)arg1 ;
-(void)clearFailedRequest;
-(void)setQuickLookDocumentController:(id)arg1 ;
-(void)invalidateSafeBrowsingObserver;
-(void)clearPageLoadStatistics;
-(id)_titleIncludeLoading:(BOOL)arg1 allowURLStringFallback:(BOOL)arg2 allowUntitled:(BOOL)arg3 ;
-(id)_titleIncludeLoading:(BOOL)arg1 allowURLStringFallback:(BOOL)arg2 ;
-(id)tabBarTitle;
-(void)_searchEngineControllerDidBecomeAvailable:(id)arg1 ;
-(void)_createDocumentView;
-(BOOL)safeBrowsingObserverIsValid;
-(void)cancelCheckForFraudulentWebsites;
-(void)_saveBackForwardListToDictionary;
-(void)_prepareWebViewRelease;
-(void)_cancelAntiPhishingCheckAndInvalidateSafeBrowsingObserver;
-(void)setSiteCustomIconPrecomposed:(BOOL)arg1 ;
-(void)reloadAfterError;
-(void)_restoreTransientReadingListDataToWebHistoryItem:(id)arg1 ;
-(id)_historyItemForNavigationSnapshotPosition:(int)arg1 ;
-(void)_resetSnapshotForHistoryItem:(id)arg1 ;
-(void)_updateTilingArea;
-(void)unhibernate;
-(void)_watchProgressForStall;
-(void)updateFluidProgress;
-(void)startFluidProgress;
-(id)browserViewMainDataSource;
-(void)_setResponseURL:(id)arg1 ;
-(void)cancelFluidProgress;
-(void)setShowingErrorPage:(BOOL)arg1 ;
-(void)_resetProgressStalled;
-(void)handleFrameLoadError:(id)arg1 forDataSource:(id)arg2 ;
-(void)clearTabReuseURL;
-(void)clearReaderScrollInformation;
-(BOOL)_clearNavigationSnapshotAtHistoryItem:(id)arg1 ;
-(void)checkForFraudulentWebsitesWithURL:(id)arg1 ;
-(void)_notifyPageLoadDidFinishIfNecessary;
-(BOOL)shouldActivateReaderWhenAvailable;
-(void)hideSecurityWarningPage;
-(BOOL)loadingSecurityWarningPage;
-(void)commitProvisionalSecurityInfo;
-(void)setLoadingSecurityWarningPage:(BOOL)arg1 ;
-(void)didCommitLoadLoadingSingleResource:(BOOL)arg1 ;
-(void)_progressDidStall;
-(void)_webThreadUpdateProgressCanStall;
-(void)finishFluidProgress;
-(id)_webClip;
-(void)startRocketEffect;
-(void)_decrementCurrentlyLoadingResourceCount;
-(void)_incrementCurrentlyLoadingResourceCount;
-(void)_closeTabDocumentAnimated:(BOOL)arg1 ;
-(void)_redirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 canPrompt:(BOOL)arg3 ;
-(int)externalAppRedirectState;
-(void)_didRedirectToAnotherApp:(id)arg1 userCancelled:(BOOL)arg2 ;
-(BOOL)requiresAlertForExternalRedirect;
-(BOOL)_shouldPromptUserForExternalNavigationResult:(id)arg1 ;
-(void)_queueAlertForRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 ;
-(void)_addInvalidURLAlert;
-(void)_ignorePolicyListener:(id)arg1 ;
-(BOOL)_shouldAskAboutInsecureFormSubmissionForAction:(id)arg1 andURL:(id)arg2 ;
-(void)addFormAlertWithTitle:(id)arg1 listener:(id)arg2 ;
-(id)_readingListArchiveNextPageLinkForRequest:(id)arg1 webFrame:(id)arg2 ;
-(id)resultOfLoadingRequest:(id)arg1 inFrame:(id)arg2 ;
-(void)_addNoFeedAppSupportAlert;
-(void)addDisallowedUseOfJavaScriptAlert;
-(void)_decidePolicyForAction:(id)arg1 request:(id)arg2 frame:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5 ;
-(void)_showGenericDownloadAlert;
-(void)handlePolicyError:(id)arg1 forFrame:(id)arg2 ;
-(void)setUpSecurityWarningPageController;
-(void)_addSearchProviderScriptingIfNecessaryToFrame:(id)arg1 windowScriptObject:(id)arg2 ;
-(void)injectDoNotTrackDOMPropertyWithValue:(id)arg1 intoWindowObject:(id)arg2 forFrame:(id)arg3 ;
-(void)endDownloadBackgroundTask;
-(void)_clearFileDownloadState;
-(void)setFileDownload:(id)arg1 ;
-(void)setFileDownloadPath:(id)arg1 ;
-(void)beginDownloadBackgroundTask:(id)arg1 ;
-(id)fileDownloadPath;
-(void)_showProfileInstallAlert;
-(void)dismissStoreBanner;
-(void)shouldPinStoreBanner:(BOOL)arg1 ;
-(void)setNavigationSnapshot:(id)arg1 forPosition:(int)arg2 ;
-(id)navigationSnapshotForPosition:(int)arg1 ;
-(BOOL)didRenderTreeSizePassThresholdForReset;
-(BOOL)pluginsAreRunning;
-(void)destroyAllPlugIns;
-(BOOL)progressStalled;
-(id)fileDownload;
-(id)originatingURL;
-(BOOL)isOmittedFromTabExposeButtonCount;
-(BOOL)usesMinimalTiling;
-(id)siteCustomIcon;
-(BOOL)siteCustomIconPrecomposed;
-(id)pageLoadStatistics;
-(void)setPageLoadStatistics:(id)arg1 ;
-(BOOL)suppressingProgressAnimationForNavigationGesture;
-(BOOL)wantsReaderWhenActivated;
-(id)_failingURLFromError:(id)arg1 andDataSource:(id)arg2 ;
-(void)_loadRequest:(id)arg1 inFrame:(id)arg2 ;
-(void)_continueWithoutCredentialsUsingAlertContext:(id)arg1 ;
-(void)_setFailedRequest:(id)arg1 ;
-(id)_specializedMessageForError:(id)arg1 dataSource:(id)arg2 ;
-(id)_genericMessageForError:(id)arg1 dataSource:(id)arg2 ;
-(id)_titleForError:(id)arg1 ;
-(void)showErrorPageWithTitle:(id)arg1 bodyText:(id)arg2 forError:(id)arg3 ;
-(void)_fraudulentWebsiteCheckCompletedForURL:(id)arg1 withAssessment:(int)arg2 fromProvider:(int)arg3 ;
-(id)provisionalSecurityInfo;
-(void)setProvisionalSecurityInfo:(id)arg1 ;
-(void)setUpSecurityWarningPage;
-(id)securityWarningPagePath;
-(void)updateSecurityWarningPageWithSecurityInfo:(id)arg1 ;
-(void)showSecurityWarningPageWithSecurityInfo:(id)arg1 ;
-(void)_continueLoadingSite;
-(void)_warnAboutUnsafeSiteWithSecurityInfo:(id)arg1 ;
-(void)securityWarningPageLoaded;
-(void)securityWarningPageIgnoreWarningButtonPressed;
-(void)securityWarningPageBackButtonPressed;
-(void)securityWarningPageClosePageButtonPressed;
-(void)_cancelReaderAvailabilityDetectionTimer;
-(void)_didDetectReaderAvailability:(BOOL)arg1 ;
-(void)_detectReaderAvailabilityOnWebThread;
-(id)tabDocumentReaderWebPreferences;
-(void)_detectReaderAvailabilityNow;
-(void)download:(id)arg1 didFailWithError:(id)arg2 ;
-(void)downloadDidBegin:(id)arg1 ;
-(void)download:(id)arg1 didReceiveResponse:(id)arg2 ;
-(void)download:(id)arg1 didReceiveDataOfLength:(unsigned)arg2 ;
-(void)download:(id)arg1 decideDestinationWithSuggestedFilename:(id)arg2 ;
-(void)downloadDidFinish:(id)arg1 ;
-(id)alert;
-(id)webThreadWebView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3 ;
-(void)webThreadWebView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3 ;
-(void)webThreadWebView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4 ;
-(oneway void)release;
-(id)retain;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(unsigned)retainCount;
-(void)reload;
-(BOOL)_tryRetain;
-(BOOL)_isDeallocating;
-(void)_setBackgroundColor:(CGColorRef)arg1 ;
-(id)UUID;
-(float)zoomScale;
-(void)setZoomScale:(float)arg1 ;
-(id)title;
-(id)tabBarItem;
-(id)URL;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5 ;
-(void)setActive:(BOOL)arg1 ;
-(void)resume;
-(BOOL)isSecure;
-(void)webThreadWebViewDidLayout:(id)arg1 ;
-(void)saveStateToHistoryItem:(id)arg1 forWebView:(id)arg2 ;
-(void)restoreStateFromHistoryItem:(id)arg1 forWebView:(id)arg2 ;
-(void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2 ;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3 ;
-(void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2 ;
-(void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2 ;
-(id).cxx_construct;
-(BOOL)isLoading;
-(id)pdfView;
-(BOOL)canGoBack;
-(BOOL)canGoForward;
-(void)updateViewHierarchyForFirstNonEmptyLayoutInFrame:(id)arg1 ;
-(void)updateViewHierarchyForDocumentViewNewLoad:(id)arg1 ;
-(void)updateViewHierarchyForDocumentViewLoadComplete:(id)arg1 ;
-(void)webView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5 ;
-(void)stopLoading;
-(void)goBack;
-(void)goForward;
-(void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5 ;
-(void)webView:(id)arg1 unableToImplementPolicyWithError:(id)arg2 frame:(id)arg3 ;
-(void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 didClearWindowObject:(id)arg2 forFrame:(id)arg3 ;
-(void)webView:(id)arg1 didReceiveServerRedirectForProvisionalLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3 ;
-(void)webView:(id)arg1 resource:(id)arg2 didReceiveAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4 ;
-(void)webView:(id)arg1 resource:(id)arg2 didCancelAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4 ;
-(BOOL)webView:(id)arg1 resource:(id)arg2 canAuthenticateAgainstProtectionSpace:(id)arg3 forDataSource:(id)arg4 ;
-(void)setPopup:(BOOL)arg1 ;
-(id)frontView;
-(void)loadUserTypedAddress:(id)arg1 ;
-(double)estimatedProgress;
-(id)URLString;
-(void)browserLoadingControllerDidUpdateURL:(id)arg1 ;
-(void)browserLoadingControllerDidUpdateURLString:(id)arg1 ;
-(void)browserLoadingControllerDidUpdateTitle:(id)arg1 ;
-(void)browserLoadingControllerDidUpdateBackForward:(id)arg1 ;
-(void)browserLoadingControllerDidUpdateSecurity:(id)arg1 ;
-(void)browserLoadingControllerDidUpdateEstimatedProgress:(id)arg1 ;
-(void)browserLoadingController:(id)arg1 willLoadRequest:(id)arg2 userDriven:(BOOL)arg3 ;
-(void)browserLoadingController:(id)arg1 failedToStartLoadingRequest:(id)arg2 error:(id)arg3 ;
-(BOOL)browserLoadingControllerShouldShowProvisionalURLs:(id)arg1 ;
-(void)browserLoadingControllerWillStartUserDrivenLoad:(id)arg1 ;
-(void)browserLoadingControllerDidStartLoading:(id)arg1 ;
-(void)browserLoadingController:(id)arg1 didFinishLoadingWithError:(id)arg2 dataSource:(id)arg3 ;
-(void)browserLoadingControllerDidUpdateLoadingState:(id)arg1 ;
-(id)browserLoadingController:(id)arg1 userVisibleStringForURL:(id)arg2 ;
-(BOOL)browserLoadingControllerShouldEvaluateUserEnteredJavaScript:(id)arg1 ;
-(void)browserLoadingController:(id)arg1 reportNetworkDataUsage:(WBUNetworkDataUsage)arg2 ;
-(void)webView:(id)arg1 didHandleOnloadEventsForFrame:(id)arg2 ;
-(void)webThreadWebView:(id)arg1 didLayout:(unsigned)arg2 ;
-(void)setUUID:(id)arg1 ;
-(void)setClosed:(BOOL)arg1 ;
-(BOOL)isClosed;
-(void)_reachabilityChanged:(id)arg1 ;
-(id)rawTitle;
-(void)_updateNavigationBar;
-(id)bookmark;
-(void)setBookmark:(id)arg1 ;
-(BOOL)webView:(id)arg1 shouldChangeSelectedDOMRange:(id)arg2 toDOMRange:(id)arg3 affinity:(int)arg4 stillSelecting:(BOOL)arg5 ;
-(CGPoint)scrollPoint;
-(void)setScrollPoint:(CGPoint)arg1 ;
-(void)setPrivateBrowsingEnabled:(BOOL)arg1 ;
-(id)browserView;
-(void)_progressChanged:(id)arg1 ;
-(void)didDrawTiles;
-(void)loadRequest:(id)arg1 userDriven:(BOOL)arg2 ;
-(void)loadWebClip:(id)arg1 userDriven:(BOOL)arg2 ;
-(void)beginSimulatedClickForURL:(id)arg1 ;
-(void)finishSimulatedClick;
-(BOOL)isSimulatingClick;
-(id)progressState;
-(id)expectedOrCurrentURL;
-(id)currentFluidProgressStateSource;
-(void)clearFluidProgressState;
-(BOOL)createFluidProgressState;
-(BOOL)hasFailedURL;
-(void)fluidProgressRocketAnimationDidComplete;
-(id)webThreadWebView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5 ;
@end

