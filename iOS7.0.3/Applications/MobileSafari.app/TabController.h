/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:00:29 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /Applications/MobileSafari.app/MobileSafari
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <MobileSafari/MobileSafari-Structs.h>
#import <MobileSafari/RecentlyClosedTabViewControllerDelegate.h>
#import <MobileSafari/RotatablePopoverControllerDelegate.h>
#import <MobileSafari/TabBarDelegate.h>
#import <MobileSafari/TabOverflowListControllerDelegate.h>

@class RecentlyClosedTabViewController, NSMutableArray, TabDocument, NSTimer, NSMutableSet, UIBarButtonItem, TabBar, TiltedTabView, NSArray;

@interface TabController : NSObject <RecentlyClosedTabViewControllerDelegate, RotatablePopoverControllerDelegate, TabBarDelegate, TabOverflowListControllerDelegate> {

	RecentlyClosedTabViewController* _recentlyClosedTabController;
	BOOL _tabBarItemsFixed;
	NSMutableArray* _tabDocuments;
	TabDocument* _topOfRightRotor;
	NSRange _visibleTabRange;
	NSTimer* _saveStateTimer;
	NSTimer* _stateValidateTimer;
	TabDocument* _tabDocumentBeingAddedToTiltedTabView;
	NSMutableSet* _tabDocumentsAboutToBeClosedInTiltedTabView;
	UIBarButtonItem* _tiltedTabViewAddTabButton;
	BOOL _tabExposeButtonIndicatorExcludesBlankDocuments;
	TabDocument* _activeTabDocument;
	TabBar* _tabBar;
	TiltedTabView* _tiltedTabView;

}

@property (nonatomic,readonly) NSArray * tabDocuments;                                                     //@synthesize tabDocuments=_tabDocuments - In the implementation block
@property (nonatomic,retain) TabDocument * activeTabDocument;                                              //@synthesize activeTabDocument=_activeTabDocument - In the implementation block
@property (nonatomic,readonly) TabBar * tabBar;                                                            //@synthesize tabBar=_tabBar - In the implementation block
@property (assign,nonatomic) BOOL usesTabBar; 
@property (nonatomic,readonly) RecentlyClosedTabViewController * recentlyClosedTabController;              //@synthesize recentlyClosedTabController=_recentlyClosedTabController - In the implementation block
@property (assign,nonatomic) BOOL tabExposeButtonIndicatorExcludesBlankDocuments;                          //@synthesize tabExposeButtonIndicatorExcludesBlankDocuments=_tabExposeButtonIndicatorExcludesBlankDocuments - In the implementation block
@property (nonatomic,readonly) TiltedTabView * tiltedTabView;                                              //@synthesize tiltedTabView=_tiltedTabView - In the implementation block
@property (assign,nonatomic) BOOL usesTiltedTabView; 
@property (nonatomic,readonly) NSArray * tiltedTabViewToolbarItems; 
-(id)activeTabDocument;
-(void)updateVisibleTabs;
-(void)popoverController:(id)arg1 willPresentAfterRotationToInterfaceOrientation:(int)arg2 ;
-(id)tabDocuments;
-(void)saveStateInBackground:(BOOL)arg1 ;
-(void)suspendForEventsOnly:(BOOL)arg1 ;
-(id)tiltedTabView;
-(void)closeTabDocument:(id)arg1 animated:(BOOL)arg2 ;
-(void)setTabExposeButtonIndicatorExcludesBlankDocuments:(BOOL)arg1 ;
-(void)pausePagesWithEventsForActiveDocument:(BOOL)arg1 ;
-(id)tabDocumentForWebView:(id)arg1 ;
-(id)tiltedTabViewToolbarItems;
-(void)setUsesTabBar:(BOOL)arg1 ;
-(void)setUsesTiltedTabView:(BOOL)arg1 ;
-(void)openInitialBlankTabDocumentIfNeeded;
-(BOOL)readStateWithURL:(id)arg1 ;
-(void)updateTabBarAnimated:(BOOL)arg1 ;
-(void)updateTabExposeButtonIndicator;
-(void)closeAllOpenTabsAnimated:(BOOL)arg1 ;
-(void)replaceTabDocument:(id)arg1 withTabDocument:(id)arg2 ;
-(void)openBlankTabDocumentOnPad;
-(id)recentlyClosedTabController;
-(void)setStateNeedsSaved;
-(void)saveStateInBackground:(BOOL)arg1 needsValidate:(BOOL)arg2 ;
-(BOOL)canAddNewTab;
-(void)updateTiltedTabViewToolbarItems;
-(id)tabDocumentForURL:(id)arg1 ;
-(void)setActiveTabDocument:(id)arg1 animated:(BOOL)arg2 ;
-(id)openTabDocumentFromTabDocument:(id)arg1 inBackground:(BOOL)arg2 animated:(BOOL)arg3 ;
-(void)setActiveTabDocument:(id)arg1 ;
-(void)recentlyClosedTabViewController:(id)arg1 didSelectTabDocument:(id)arg2 ;
-(BOOL)tiltedTabView:(id)arg1 canCloseItem:(id)arg2 ;
-(void)tiltedTabView:(id)arg1 closeItem:(id)arg2 ;
-(void)tiltedTabView:(id)arg1 didMoveItem:(id)arg2 overItem:(id)arg3 ;
-(void)tiltedTabView:(id)arg1 didSelectItem:(id)arg2 ;
-(void)tiltedTabView:(id)arg1 relinquishContentView:(id)arg2 forItem:(id)arg3 ;
-(void)tiltedTabViewDidPresent:(id)arg1 ;
-(void)tiltedTabViewDidDismiss:(id)arg1 ;
-(id)currentItemForTiltedTabView:(id)arg1 ;
-(void)tiltedTabViewWillPresent:(id)arg1 ;
-(void)tiltedTabViewWillDismiss:(id)arg1 ;
-(id)tiltedTabView:(id)arg1 borrowContentViewForItem:(id)arg2 withTopBackdropView:(id*)arg3 ofHeight:(float)arg4 ;
-(float)tiltedTabView:(id)arg1 headerHeightForItem:(id)arg2 ;
-(void)tiltedTabView:(id)arg1 animateTopBackdropView:(id)arg2 hidden:(BOOL)arg3 ;
-(void)tiltedTabView:(id)arg1 requestSnapshotOfSize:(CGSize)arg2 withTransparentBorder:(BOOL)arg3 topBackdropHeight:(float)arg4 forItem:(id)arg5 completion:(/*^block*/ id)arg6 ;
-(void)tiltedTabView:(id)arg1 didSelectNavigationDestination:(id)arg2 ;
-(void)tabBarAddTab:(id)arg1 ;
-(void)tabBar:(id)arg1 closeItem:(id)arg2 ;
-(void)tabBarShowMoreTabs:(id)arg1 ;
-(BOOL)tabBar:(id)arg1 canCloseItem:(id)arg2 ;
-(void)tabBar:(id)arg1 activateItem:(id)arg2 ;
-(BOOL)tabBar:(id)arg1 canMoveItem:(id)arg2 ;
-(void)tabBar:(id)arg1 moveItem:(id)arg2 overItem:(id)arg3 ;
-(void)_auditTabCount;
-(void)_rotateDocumentIntoView:(id)arg1 ;
-(unsigned)maximumTabDocumentCount;
-(id)_oldestInactiveTabDocument;
-(void)_makeRoomForNewTabDocument:(id)arg1 ;
-(void)_tabCountDidChange;
-(void)_adjustOverflowForInsertedDocument:(id)arg1 ;
-(void)_updateTiltedTabViewItems;
-(void)_insertTabDocument:(id)arg1 afterTabDocument:(id)arg2 inBackground:(BOOL)arg3 animated:(BOOL)arg4 ;
-(BOOL)_isOverflowing;
-(id)_openBlankTabDocument;
-(void)_setTabBarItemsFixed:(BOOL)arg1 ;
-(BOOL)_shouldFocusPreviousDocumentWhenClosingDocument:(id)arg1 ;
-(void)_adjustOverflowForDocumentToBeRemoved:(id)arg1 willFocusPreviousDocument:(BOOL)arg2 ;
-(void)_adjustTopOfRightRotor;
-(void)_updateTiltedTabViewItemsAnimated:(BOOL)arg1 ;
-(id)_tabDocumentRepresentedByTabBarItem:(id)arg1 ;
-(void)_presentOverflowListController;
-(void)moveTabDocument:(id)arg1 overTabDocument:(id)arg2 ;
-(void)updateTabBarAnimated:(BOOL)arg1 completion:(/*^block*/ id)arg2 ;
-(BOOL)_createAndSwitchToNewBlankTabDocumentOpeningCaptiveLandingPageIfNecessary;
-(void)_cloudTabsDidUpdate:(id)arg1 ;
-(BOOL)usesTiltedTabView;
-(void)_updateTiltedTabViewCloudTabs;
-(void)_addNewActiveTiltedTabViewTab;
-(void)_dismissTiltedTabView;
-(id)_tabDocumentRepresentedByTiltedTabItem:(id)arg1 ;
-(void)_addNewActiveTiltedTabViewTabWithNavigationDestination:(id)arg1 ;
-(id)_nextDocumentInRotorAfter:(id)arg1 ;
-(BOOL)_isDocumentInLeftStack:(id)arg1 ;
-(void)_moveLeftStackDocumentIntoRightRotor:(id)arg1 ;
-(BOOL)_isDocumentInRightRotor:(id)arg1 ;
-(void)_rotateRightRotorDocumentIntoView:(id)arg1 ;
-(void)tabOverflowListController:(id)arg1 didSelectTabDocument:(id)arg2 ;
-(BOOL)usesTabBar;
-(BOOL)tabExposeButtonIndicatorExcludesBlankDocuments;
-(void)_saveStateFromTimer:(id)arg1 ;
-(void)_setSaveStateTimer:(id)arg1 ;
-(void)_clearStateValidateTimer;
-(void)_validateSavedState:(id)arg1 ;
-(BOOL)_readStateWithURL:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)tabBar;
-(void)resume;
@end

