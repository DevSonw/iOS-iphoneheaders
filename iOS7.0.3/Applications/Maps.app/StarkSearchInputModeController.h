/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:59:57 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/SearchCompletionsTableViewControllerDelegate.h>
#import <Maps/SearchManagerObserver.h>
#import <Maps/StarkSearchBarViewDelegate.h>
#import <Maps/MKWorldViewDelegate.h>
#import <Maps/StarkChromeModeController.h>

@protocol MapsChromeViews;
@class SearchCompletionsTableViewController, UIView, StarkSearchBarView, SearchInfo, StarkAlertViewController, StarkSearchGuidanceView, ChromeViewController, VKAttributedRouteMatch;

@interface StarkSearchInputModeController : NSObject <SearchCompletionsTableViewControllerDelegate, SearchManagerObserver, StarkSearchBarViewDelegate, MKWorldViewDelegate, StarkChromeModeController> {

	<MapsChromeViews>* _views;
	SearchCompletionsTableViewController* _searchCompletions;
	UIView* _shieldView;
	StarkSearchBarView* _searchBar;
	BOOL _presentedForInterruption;
	int _interruptionKind;
	/*^block*/ id _interruptionHandler;
	SearchInfo* _refinementResults;
	StarkAlertViewController* _alertView;
	BOOL _isAnimatingGuidance;
	BOOL _isSpeaking;
	StarkSearchGuidanceView* _guidanceView;
	/*^block*/ id _completion;
	BOOL _done;
	ChromeViewController* _chromeViewController;

}

@property (nonatomic,readonly) VKAttributedRouteMatch * currentRouteMatch; 
@property (assign,nonatomic) ChromeViewController * chromeViewController;               //@synthesize chromeViewController=_chromeViewController - In the implementation block
-(void)searchManager:(id)arg1 didReceiveResults:(id)arg2 scrollToResults:(BOOL)arg3 ;
-(id)chromeViewController;
-(void)setChromeViewController:(id)arg1 ;
-(void)layoutForUnobscuredBoundsChange;
-(void)becomeCurrentModeWithViews:(id)arg1 animated:(BOOL)arg2 state:(id)arg3 fromMode:(id)arg4 ;
-(void)resignCurrentModeAnimated:(BOOL)arg1 toMode:(id)arg2 ;
-(BOOL)popsWhenSuppressed;
-(void)willPopForSuppression;
-(BOOL)canPresentInterruptionOfKind:(int)arg1 ;
-(/*^block*/ id)presentInterruptionOfKind:(int)arg1 userInfo:(id)arg2 completionHandler:(/*^block*/ id)arg3 ;
-(id)starkChromeViewController;
-(void)layoutForInteractionModelChange;
-(BOOL)physicalButtonsBegan:(id)arg1 ;
-(void)searchCompletionsTableViewController:(id)arg1 receivedNoCompletionsForQuery:(id)arg2 ;
-(void)searchCompletionsTableViewController:(id)arg1 hasCompletionsForQuery:(id)arg2 ;
-(void)searchCompletionsTableViewController:(id)arg1 didSelectQueryCompletion:(id)arg2 forQuery:(id)arg3 ;
-(void)searchCompletionsTableViewController:(id)arg1 didSelectHistoryItem:(id)arg2 forQuery:(id)arg3 ;
-(void)searchCompletionsTableViewController:(id)arg1 didSelectSearchCompletion:(id)arg2 forQuery:(id)arg3 ;
-(void)searchCompletionsTableViewController:(id)arg1 didSelectRefinementResult:(id)arg2 forQuery:(id)arg3 ;
-(void)willPresentToHandleInterruptionOfKind:(int)arg1 userInfo:(id)arg2 completionHandler:(/*^block*/ id)arg3 ;
-(void)starkSearchBar:(id)arg1 willBeginEditingSearch:(id)arg2 ;
-(void)starkSearchBar:(id)arg1 willEndEditingSearch:(id)arg2 ;
-(void)starkSearchBar:(id)arg1 willEditSearchTextToString:(id)arg2 cause:(int)arg3 ;
-(void)starkSearchBarChosePerformSearch:(id)arg1 ;
-(void)starkSearchBarChoseCancel:(id)arg1 ;
-(id)nextResponderForStarkSearchBar:(id)arg1 ;
-(BOOL)starkSearchBarShouldForwardEvents:(id)arg1 ;
-(void)starkSearchBarDictationRecordingDidFail:(id)arg1 ;
-(void)guidanceAnimationDidFinish;
-(void)guidanceAnimationDidFinishEarlyWithTouch;
-(void)_layoutSearchBar;
-(void)_updateCompletions;
-(void)_presentAlertAnimated:(BOOL)arg1 ;
-(void)_startGuidanceAnimation;
-(void)cleanupAfterSearchGuidancePrompt;
-(void)_beginEditingIfPossible;
-(void)_endWithCause:(int)arg1 ;
-(void)_dismissAlertAnimated:(BOOL)arg1 ;
-(void)_updateCompletionsForSearchText:(id)arg1 ;
-(id)worldView:(id)arg1 viewForAnnotation:(id)arg2 ;
-(void)dealloc;
-(void)_cancel;
-(id)initWithCompletion:(/*^block*/ id)arg1 ;
@end

