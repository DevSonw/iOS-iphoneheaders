/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:59:46 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <Maps/MNETAManagerDelegate.h>

@protocol MNRouteManagerDelegate;
@class GEODirectionsRouteRequest, GEOWaypointSearchResultRequest, GEOMapRegion, MNRouteSet, MNTraceRecorder, MNTracePlayer, RoutePreloadSession, MNETAManager, NSData, GEODirectionsFeedbackCollector, GEORoute;

@interface MNRouteManager : NSObject <MNETAManagerDelegate> {

	GEODirectionsRouteRequest* _request;
	GEOWaypointSearchResultRequest* _origin;
	GEOWaypointSearchResultRequest* _destination;
	int _desiredTransportType;
	GEOMapRegion* _mapRegion;
	MNRouteSet* _activeRouteSet;
	int _routeState;
	<MNRouteManagerDelegate>* _delegate;
	MNTraceRecorder* _traceRecorder;
	MNTracePlayer* _tracePlayer;
	RoutePreloadSession* _routePreloadSession;
	MNETAManager* _etaManager;
	NSData* _prevRouteID;
	unsigned _prevStepIndex;
	GEODirectionsFeedbackCollector* _feedbackCollector;
	double _lastRereouteTime;
	GEORoute* _userSelectedRoute;
	BOOL _fromCurrentLocation;
	BOOL _preloadRoutes;

}

@property (nonatomic,retain) MNRouteSet * activeRouteSet;                                      //@synthesize activeRouteSet=_activeRouteSet - In the implementation block
@property (assign,nonatomic) int routeState; 
@property (nonatomic,retain) GEOWaypointSearchResultRequest * origin;                          //@synthesize origin=_origin - In the implementation block
@property (nonatomic,retain) GEOWaypointSearchResultRequest * destination;                     //@synthesize destination=_destination - In the implementation block
@property (nonatomic,readonly) int desiredTransportType;                                       //@synthesize desiredTransportType=_desiredTransportType - In the implementation block
@property (nonatomic,readonly) int currentRouteTransportType; 
@property (assign,nonatomic) <MNRouteManagerDelegate> * delegate;                              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) RoutePreloadSession * routePreloadSession;                      //@synthesize routePreloadSession=_routePreloadSession - In the implementation block
@property (nonatomic,retain) MNTraceRecorder * traceRecorder;                                  //@synthesize traceRecorder=_traceRecorder - In the implementation block
@property (nonatomic,retain) MNTracePlayer * tracePlayer;                                      //@synthesize tracePlayer=_tracePlayer - In the implementation block
@property (nonatomic,retain) GEODirectionsRouteRequest * request;                              //@synthesize request=_request - In the implementation block
@property (assign,nonatomic) GEORoute * currentRoute; 
@property (nonatomic,retain) NSData * prevRouteID;                                             //@synthesize prevRouteID=_prevRouteID - In the implementation block
@property (nonatomic,retain) GEORoute * userSelectedRoute;                                     //@synthesize userSelectedRoute=_userSelectedRoute - In the implementation block
@property (nonatomic,readonly) <MNRouteManagerTestingDelegate> * testingDelegate; 
+(id)defaultRouteAttributes;
+(id)defaultRouteAttributesForNavigation;
-(id)traceRecorder;
-(void)setTraceRecorder:(id)arg1 ;
-(void)setTracePlayer:(id)arg1 ;
-(id)activeRouteSet;
-(void)loadMaxRoutes:(unsigned)arg1 errorHandler:(/*^block*/ id)arg2 recordTrace:(BOOL)arg3 ;
-(void)cancelRoute;
-(void)selectRouteAtIndex:(unsigned)arg1 ;
-(id)tracePlayer;
-(void)stopNavETAUpdateRequests;
-(void)_updateRoutePreloading;
-(void)setUserSelectedRoute:(id)arg1 ;
-(void)setCurrentRoute:(id)arg1 ;
-(void)setPrevRouteID:(id)arg1 ;
-(int)routeState;
-(double)_straightLineDistanceToDestinationFromWaypoint:(id)arg1 ;
-(BOOL)_destinationShortEnoughForWalkingFromWaypoint:(id)arg1 ;
-(BOOL)_destinationTooLongForWalkingFromWayPoint:(id)arg1 ;
-(void)_handleRequesterResponse:(id)arg1 routeAttributes:(id)arg2 retrievedFromTrace:(BOOL)arg3 ;
-(void)_handleRequesterError:(id)arg1 problemDetails:(SCD_Struct_MN23*)arg2 ;
-(BOOL)_requestDirectionsFromTracePlayer:(id)arg1 finishedHandler:(/*^block*/ id)arg2 errorHandler:(/*^block*/ id)arg3 ;
-(void)setRouteState:(int)arg1 ;
-(void)_getNewDirectionsMaxRouteCount:(unsigned)arg1 from:(id)arg2 originalRouteID:(id)arg3 originalRouteZilchPoints:(id)arg4 originalDirectionsResponseID:(id)arg5 type:(int)arg6 includeAlternateTransportTypes:(BOOL)arg7 ;
-(id)userSelectedRoute;
-(void)_switchToContingentRoute:(id)arg1 atLocation:(id)arg2 routeCoordinate:(SCD_Struct_MN17)arg3 onRoute:(BOOL)arg4 ;
-(BOOL)findContingentRouteFrom:(id)arg1 transportType:(int)arg2 ;
-(void)setActiveRouteSet:(id)arg1 ;
-(void)_clearETAManager;
-(id)testingDelegate;
-(void)resetToNewRoute:(id)arg1 ;
-(void)etaManagerUpdatedETATime:(id)arg1 ;
-(void)etaManager:(id)arg1 forceSwitchToNewRoute:(id)arg2 ;
-(void)etaManager:(id)arg1 recommendsNewRoute:(id)arg2 oldEstimatedTime:(unsigned)arg3 newEstimatedTime:(unsigned)arg4 ;
-(void)etaManager:(id)arg1 receivedETAResponseWithETARoute:(id)arg2 etaBehavior:(int)arg3 routeRemainingDistance:(double)arg4 routeRemainingTime:(unsigned)arg5 ;
-(void)etaManagerUpdatedTrafficIncidents:(id)arg1 ;
-(id)initWithDirectionsFrom:(id)arg1 to:(id)arg2 mapRegion:(id)arg3 type:(int)arg4 fromCurrentLocation:(BOOL)arg5 preloadRoutes:(BOOL)arg6 ;
-(void)markCurrentRoute;
-(int)currentRouteTransportType;
-(void)recordCurrentRoute;
-(void)sendRouteFeedbackWithLocationWhereRouteWasCancelled:(id)arg1 ;
-(BOOL)recalculateRouteFrom:(id)arg1 stepIndex:(unsigned)arg2 forceRepeatedRecalc:(BOOL)arg3 transportType:(int)arg4 ;
-(void)cancelRecalculation;
-(void)switchToNewRouteIfNecessaryFrom:(id)arg1 transportType:(int)arg2 ;
-(void)startNavETAUpdateRequests;
-(void)startNavETAOverviewRequests;
-(void)forceReroutingWithRouteResponse:(id)arg1 request:(id)arg2 ;
-(int)desiredTransportType;
-(id)prevRouteID;
-(void)setRequest:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(id)origin;
-(void)setOrigin:(id)arg1 ;
-(id)request;
-(id)destination;
-(void)setDestination:(id)arg1 ;
-(void)reset;
-(id)currentRoute;
-(id)routePreloadSession;
-(void)updateLocation:(id)arg1 ;
@end

