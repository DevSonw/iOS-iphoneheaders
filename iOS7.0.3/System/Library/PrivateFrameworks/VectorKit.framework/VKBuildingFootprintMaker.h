/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:58:08 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKTileHeightInformation.h>

@class VKHeightfield, VKAnimation, GEOVectorTile, VKStylesheet, VGLMeshVendor, VGLTexture, NSArray;

@interface VKBuildingFootprintMaker : NSObject <VKTileHeightInformation> {

	float _maxHeight;
	VKHeightfield* _heightfield;
	VKAnimation* _animateOut;
	VKAnimation* _animateIn;
	float _alpha;
	float _scale;
	float _contentScale;
	GEOVectorTile* _geotile;
	VKStylesheet* _stylesheet;
	VKAnimation* _animateBuildingMode;
	vector<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *> >, vk_allocator<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *> > > >* _regularFacadeCollections;
	vector<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *> >, vk_allocator<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *> > > >* _realisticFacadeCollections;
	VGLMeshVendor* _pointyBuildingsMeshVendor;
	VGLMeshVendor* _footprintsMeshVendor;
	vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *> >* _sharedFacadeCollection;
	vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *> >* _regularFacadeCollection;
	VGLTexture* _shadowTexture;
	SCD_Struct_VK42 _shadowTextureMatrix;
	vector<VKBuildingHeightMap, vk_allocator<VKBuildingHeightMap> >* _landmarkHeights;
	VGLMeshVendor* _landmarksMeshVendor;
	DiscontinuityEdgeInfo* _sharedDiscontinuityEdgeInfo;
	DiscontinuityEdgeInfo* _regularDiscontinuityEdgeInfo;
	DiscontinuityEdgeInfo* _realisticDiscontinuityEdgeInfo;
	unordered_map<int, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *> >, std::__1::hash<int>, std::__1::equal_to<int>, vk_allocator<std::__1::pair<const int, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *> > > > >* _discontinuityEdgeInfoMap;
	BuildingTopMeshFactory* _topMeshFactory;
	VGLMeshVendor* _footprintStrokeMeshVendor;
	float _minLayeringHeight;
	float _maxLayeringHeight;

}

@property (nonatomic,readonly) NSArray * pointyBuildingsMeshes; 
@property (nonatomic,readonly) VGLTexture * shadowTexture; 
@property (nonatomic,readonly) const SCD_Struct_VK42* shadowTextureMatrix; 
@property (nonatomic,readonly) NSArray * landmarksMeshes; 
@property (nonatomic,readonly) NSArray * footprintStrokeMeshes; 
@property (nonatomic,readonly) NSArray * footprintsMeshes; 
@property (nonatomic,readonly) float minLayeringHeight; 
@property (nonatomic,readonly) float maxLayeringHeight; 
@property (nonatomic,readonly) float maxHeight;                                         //@synthesize maxHeight=_maxHeight - In the implementation block
@property (nonatomic,retain) VKAnimation * animateOut;                                  //@synthesize animateOut=_animateOut - In the implementation block
@property (nonatomic,retain) VKAnimation * animateIn;                                   //@synthesize animateIn=_animateIn - In the implementation block
@property (assign,nonatomic) float alpha;                                               //@synthesize alpha=_alpha - In the implementation block
@property (assign,nonatomic) float scale;                                               //@synthesize scale=_scale - In the implementation block
@property (nonatomic,retain) VKAnimation * animateBuildingMode;                         //@synthesize animateBuildingMode=_animateBuildingMode - In the implementation block
-(void)dealloc;
-(float)alpha;
-(void)setAlpha:(float)arg1 ;
-(float)scale;
-(void)setScale:(float)arg1 ;
-(id).cxx_construct;
-(id)initWithVectorTile:(id)arg1 stylesheet:(id)arg2 makeFacades:(BOOL)arg3 ;
-(BOOL)heightAtX:(float)arg1 Y:(float)arg2 outZ:(float*)arg3 ;
-(id)animateOut;
-(void)setAnimateIn:(id)arg1 ;
-(void)setAnimateOut:(id)arg1 ;
-(id)animateBuildingMode;
-(id)animateIn;
-(void)forEachTopMesh:(/*^block*/ id)arg1 topStrokeMesh:(/*^block*/ id)arg2 forVectorType:(int)arg3 ;
-(id)footprintsMeshes;
-(id)footprintStrokeMeshes;
-(const vector<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *> >, vk_allocator<std::__1::vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *> > > >*)facadeCollectionsWithVectorType:(int)arg1 ;
-(const vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *> >*)discontinuityEdgeInfoWithVectorType:(int)arg1 ;
-(float)minLayeringHeight;
-(float)maxLayeringHeight;
-(id)landmarksMeshes;
-(void)forEachTopMesh:(/*^block*/ id)arg1 forVectorType:(int)arg2 atLayer:(unsigned)arg3 ;
-(void)forEachTopStrokeMesh:(/*^block*/ id)arg1 forVectorType:(int)arg2 atLayer:(unsigned)arg3 ;
-(id)pointyBuildingsMeshes;
-(id)shadowTexture;
-(const SCD_Struct_VK42*)shadowTextureMatrix;
-(void)setAnimateBuildingMode:(id)arg1 ;
-(BOOL)_makeThreeDBuildingsMesh:(const SCD_Struct_VK105*)arg1 buildingCount:(unsigned)arg2 ;
-(void)_makeFootprintsMesh;
-(void)_makeMeshesWithLandmarksPresent:(BOOL)arg1 makeFacades:(BOOL)arg2 pointyFootprints:(unordered_map<unsigned int, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float> > >, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, vk_allocator<std::__1::pair<const unsigned int, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float> > > > > >*)arg3 useHiResFootprints:(BOOL)arg4 ;
-(void)_makeShadowTextureWithVectorTile:(id)arg1 skipLandmarks:(BOOL)arg2 pointyFootprints:(const unordered_map<unsigned int, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float> > >, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, vk_allocator<std::__1::pair<const unsigned int, std::__1::vector<geo::Vec2Imp<float>, vk_allocator<geo::Vec2Imp<float> > > > > >*)arg3 useHiResFootprints:(BOOL)arg4 landmarks:(const SCD_Struct_VK105*)arg5 landmarkCount:(unsigned)arg6 ;
-(void).cxx_destruct;
-(float)maxHeight;
@end

