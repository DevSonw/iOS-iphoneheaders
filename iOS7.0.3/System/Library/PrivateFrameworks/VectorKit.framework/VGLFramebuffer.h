/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:58:12 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@class VGLContext, VGLScreenCanvas, VGLTexture;

@interface VGLFramebuffer : NSObject {

	VGLContext* _context;
	VGLScreenCanvas* _canvas;
	unsigned _framebuffer;
	unsigned _renderbuffer;
	unsigned _depthbuffer;
	unsigned _multisampleFramebuffer;
	unsigned _multisampleRenderbuffer;
	unsigned _multisampleDepthbuffer;
	int _width;
	int _height;
	BOOL _createdWithDepth;
	BOOL _createdWithStencil;
	BOOL _isPresentable;
	BOOL _multisampleModeCurrent;
	BOOL _multisampleModeNext;
	VGLTexture* _texture;
	BOOL _usingMagicFramebuffer;
	int _magicFramebufferToken;

}

@property (nonatomic,readonly) BOOL isPresentable;                  //@synthesize isPresentable=_isPresentable - In the implementation block
@property (nonatomic,readonly) int width;                           //@synthesize width=_width - In the implementation block
@property (nonatomic,readonly) int height;                          //@synthesize height=_height - In the implementation block
@property (assign,nonatomic) BOOL useMultisampling; 
@property (assign,nonatomic) VGLContext * context;                  //@synthesize context=_context - In the implementation block
@property (assign,nonatomic) VGLScreenCanvas * canvas;              //@synthesize canvas=_canvas - In the implementation block
@property (nonatomic,readonly) unsigned framebuffer;                //@synthesize framebuffer=_framebuffer - In the implementation block
-(void)dealloc;
-(id)context;
-(int)width;
-(void)setContext:(id)arg1 ;
-(int)height;
-(id)canvas;
-(void)setUseMultisampling:(BOOL)arg1 ;
-(void)deleteUnusedFramebuffers;
-(void)preloadMultisampleFramebuffer;
-(id)initWithContext:(id)arg1 canvas:(id)arg2 depth:(BOOL)arg3 stencil:(BOOL)arg4 multisampling:(BOOL)arg5 ;
-(void)setCanvas:(id)arg1 ;
-(void)deleteResolveFramebuffers;
-(BOOL)useMultisampling;
-(BOOL)isPresentable;
-(void)makeTarget;
-(BOOL)_createResolveFramebuffer;
-(BOOL)_createSecondaryFramebufferWithDepth:(BOOL)arg1 stencil:(BOOL)arg2 ;
-(id)initWithContext:(id)arg1 canvas:(id)arg2 ;
-(void)_deallocResolveFramebuffer;
-(void)_deallocSecondaryFramebuffer;
-(void)_deallocMultisampleFramebuffer;
-(BOOL)_createMultisampleFramebufferWithDepth:(BOOL)arg1 stencil:(BOOL)arg2 ;
-(void)_bindFramebuffers;
-(id)initWithContext:(id)arg1 texture:(id)arg2 depth:(BOOL)arg3 stencil:(BOOL)arg4 ;
-(void)deleteFramebuffers;
-(unsigned)framebuffer;
-(void)finalize;
@end

