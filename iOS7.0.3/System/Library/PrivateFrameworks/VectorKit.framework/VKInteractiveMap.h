/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:57:59 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol VKInteractiveMap <NSObject>
@property (assign,nonatomic) <VKInteractiveMapDelegate> * delegate; 
@property (assign,nonatomic) BOOL trafficEnabled; 
@property (assign,nonatomic) BOOL staysCenteredDuringPinch; 
@property (assign,nonatomic) BOOL staysCenteredDuringRotation; 
@property (assign,nonatomic) BOOL isPitchable; 
@property (getter=isPitched,nonatomic,readonly) BOOL pitched; 
@property (getter=isFullyPitched,nonatomic,readonly) BOOL fullyPitched; 
@property (assign,nonatomic) int mapType; 
@property (assign,nonatomic) int shieldSize; 
@property (assign,nonatomic) int navigationShieldSize; 
@property (assign,nonatomic) int shieldIdiom; 
@property (assign,nonatomic) BOOL showsPointsOfInterest; 
@property (assign,nonatomic) BOOL showsBuildings; 
@property (nonatomic,retain) NSArray * alwaysVisibleTrafficIncidents; 
@property (nonatomic,readonly) double minimumZoomLevel; 
@property (nonatomic,readonly) double maximumZoomLevel; 
@property (assign,nonatomic) BOOL labelMarkerSelectionEnabled; 
@property (assign,nonatomic) BOOL localizeLabels; 
@property (assign,nonatomic) int labelScaleFactor; 
@property (nonatomic,retain) GEOMapRegion * mapRegion; 
@property (nonatomic,readonly) GEOMapRegion * mapRegionOfInterest; 
@property (nonatomic,readonly) double yaw; 
@property (nonatomic,readonly) double presentationYaw; 
@property (nonatomic,readonly) double pitch; 
@property (nonatomic,readonly) double altitude; 
@property (assign,nonatomic) int annotationTrackingZoomStyle; 
@property (assign,nonatomic) <VKRouteMatchedAnnotationPresentation> * routeLineSplitAnnotation; 
@property (getter=isAnimatingToTrackAnnotation,nonatomic,readonly) BOOL animatingToTrackAnnotation; 
@property (nonatomic,readonly) <VKTrackableAnnotation> * trackingAnnotation; 
@property (getter=isTrackingHeading,nonatomic,readonly) BOOL trackingHeading; 
@property (nonatomic,readonly) NSArray * visibleTileSets; 
@property (getter=isFullyDrawn,nonatomic,readonly) BOOL fullyDrawn; 
@property (nonatomic,readonly) VKAnchorWrapper * externalAnchors; 
@required
+(BOOL)supportsMapType:(int)arg1;
-(void)setDelegate:(id)arg1;
-(id)delegate;
-(double)altitude;
-(BOOL)labelMarkerSelectionEnabled;
-(void)setLabelMarkerSelectionEnabled:(BOOL)arg1;
-(int)mapType;
-(id)visibleTileSets;
-(id)attributionsForCurrentRegion;
-(BOOL)isShowingNoDataPlaceholders;
-(BOOL)trafficEnabled;
-(void)setTrafficEnabled:(BOOL)arg1;
-(BOOL)currentZoomLevelAllowsRotation;
-(void)setStaysCenteredDuringPinch:(BOOL)arg1;
-(BOOL)localizeLabels;
-(void)setLocalizeLabels:(BOOL)arg1;
-(int)labelScaleFactor;
-(void)setLabelScaleFactor:(int)arg1;
-(BOOL)staysCenteredDuringPinch;
-(void)setStaysCenteredDuringRotation:(BOOL)arg1;
-(BOOL)staysCenteredDuringRotation;
-(void)setIsPitchable:(BOOL)arg1;
-(BOOL)isPitchable;
-(void)debugHighlightLabelAtPoint:(CGPoint)arg1;
-(id)detailedDescription;
-(double)minimumZoomLevel;
-(double)maximumZoomLevel;
-(double)currentZoomLevel;
-(int)shieldSize;
-(void)setShieldSize:(int)arg1;
-(int)navigationShieldSize;
-(void)setNavigationShieldSize:(int)arg1;
-(int)shieldIdiom;
-(void)setShieldIdiom:(int)arg1;
-(BOOL)showsPointsOfInterest;
-(void)setShowsPointsOfInterest:(BOOL)arg1;
-(BOOL)showsBuildings;
-(void)setShowsBuildings:(BOOL)arg1;
-(int)annotationTrackingZoomStyle;
-(void)setAnnotationTrackingZoomStyle:(int)arg1;
-(id)alwaysVisibleTrafficIncidents;
-(void)setAlwaysVisibleTrafficIncidents:(id)arg1;
-(/*^block*/ id)annotationMarkerDeselectionCallback;
-(void)setAnnotationMarkerDeselectionCallback:(/*^block*/ id)arg1;
-(id)selectedAnnotationMarker;
-(id)annotationMarkers;
-(void)removeAnnotationMarker:(id)arg1;
-(void)addAnnotationMarker:(id)arg1 allowAnimation:(BOOL)arg2;
-(void)selectAnnotationMarker:(id)arg1;
-(id)persistentOverlays;
-(void)removePersistentOverlay:(id)arg1;
-(void)addPersistentOverlay:(id)arg1;
-(id)overlays;
-(void)removeOverlay:(id)arg1;
-(void)addOverlay:(id)arg1;
-(id)routeLineSplitAnnotation;
-(void)setRouteLineSplitAnnotation:(id)arg1;
-(void)deselectLabelMarker;
-(id)trackingAnnotation;
-(BOOL)isTrackingHeading;
-(void)stopTrackingAnnotation;
-(void)startTrackingAnnotation:(id)arg1 trackHeading:(BOOL)arg2 animated:(BOOL)arg3;
-(id)externalAnchors;
-(void)removeExternalAnchor:(id)arg1;
-(void)addExternalAnchor:(id)arg1;
-(void)setMapType:(int)arg1;
-(void)stylesheetAnimationDidEnd:(BOOL)arg1;
-(BOOL)canEnter3DMode;
-(void)stylesheetAnimationWillStartFromStyle:(int)arg1 toStyle:(int)arg2;
-(void)stylesheetAnimationDidProgress:(float)arg1;
-(void)requestStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(int)arg2 setupHandler:(/*^block*/ id)arg3;
-(float)_styleTransitionProgress;
-(void)_setStyleTransitionProgress:(float)arg1 targetStyle:(int)arg2 step:(int)arg3;
-(double)presentationYaw;
-(void)setMapRegion:(id)arg1 animated:(BOOL)arg2;
-(id)mapRegion;
-(id)mapRegionOfInterest;
-(id)consoleString:(BOOL)arg1;
-(VKPoint*)centerCoordinate;
-(void)setCenterCoordinate:(SCD_Struct_VK53)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(/*^block*/ id)arg6 completion:(/*^block*/ id)arg7;
-(void)setYaw:(double)arg1 animated:(BOOL)arg2;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(BOOL)arg4;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(BOOL)arg4 completion:(/*^block*/ id)arg5;
-(void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(/*^block*/ id)arg5;
-(double)durationToAnimateToMapRegion:(id)arg1;
-(SCD_Struct_VK53*)convertPoint:(CGPoint)arg1 toCoordinateFromLayer:(id)arg2;
-(SCD_Struct_VK53*)convertPoint:(CGPoint)arg1 toMapPointFromLayer:(id)arg2;
-(CGPoint*)convertMapPoint:(SCD_Struct_VK53)arg1 toPointToLayer:(id)arg2;
-(CGPoint*)convertCoordinate:(SCD_Struct_VK53)arg1 toPointToLayer:(id)arg2;
-(CGPoint*)convertCoordinate:(SCD_Struct_VK53)arg1 toCameraModelPointToLayer:(id)arg2;
-(id)annotationMarkerForSelectionAtPoint:(CGPoint)arg1 avoidCurrent:(BOOL)arg2;
-(id)labelMarkerForSelectionAtPoint:(CGPoint)arg1 selectableLabelsOnly:(BOOL)arg2;
-(void)selectLabelMarker:(id)arg1;
-(void)enter3DMode;
-(void)exit3DMode;
-(BOOL)isPitched;
-(BOOL)isFullyPitched;
-(void)panWithOffset:(CGPoint)arg1 relativeToScreenPoint:(CGPoint)arg2 animated:(BOOL)arg3 duration:(double)arg4 completionHandler:(/*^block*/ id)arg5;
-(void)deselectAnnotationMarker:(id)arg1;
-(/*^block*/ id)annotationRectTest;
-(/*^block*/ id)annotationCoordinateTest;
-(BOOL)shouldHideOffscreenSelectedAnnotation;
-(id)selectedLabelMarker;
-(id)labelMarkers;
-(BOOL)isAnimatingToTrackAnnotation;
-(id)viewportInfo;
-(BOOL)restoreViewportFromInfo:(id)arg1;
-(void)zoomToLevel:(double)arg1 withFocusPoint:(CGPoint)arg2;
-(void)zoom:(double)arg1 withFocusPoint:(CGPoint)arg2 completionHandler:(/*^block*/ id)arg3;
-(void)startPinchingWithFocusPoint:(CGPoint)arg1;
-(void)updatePinchWithFocusPoint:(CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
-(void)stopPinchingWithFocusPoint:(CGPoint)arg1;
-(void)startPanningAtPoint:(CGPoint)arg1;
-(void)updatePanWithTranslation:(CGPoint)arg1;
-(void)stopPanningAtPoint:(CGPoint)arg1;
-(void)didStartPanningDeceleration;
-(void)startRotatingWithFocusPoint:(CGPoint)arg1;
-(void)updateRotationWithFocusPoint:(CGPoint)arg1 newValue:(double)arg2;
-(void)stopRotatingWithFocusPoint:(CGPoint)arg1;
-(void)startPitchingWithFocusPoint:(CGPoint)arg1;
-(void)updatePitchWithFocusPoint:(CGPoint)arg1 translation:(double)arg2;
-(void)stopPitchingWithFocusPoint:(CGPoint)arg1;
-(BOOL)isPointValidForGesturing:(CGPoint)arg1;
-(void)stopSnappingAnimations;
-(BOOL)isFullyDrawn;
-(void)setMapRegion:(id)arg1;
-(VKPoint*)screenPointForPoint:(CGPoint)arg1;
-(double)pitch;
-(double)yaw;
@end

