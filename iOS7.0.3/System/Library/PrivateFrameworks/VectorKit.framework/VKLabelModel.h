/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:58:05 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKModelObject.h>
#import <VectorKit/LabelManagerDelegate.h>
#import <GeoServices/GEOResourceManifestTileGroupObserver.h>
#import <VectorKit/VKMapLayer.h>
#import <VectorKit/VKStylesheetObserver.h>
#import <VectorKit/VKMapModeObserver.h>

@protocol VKLabelModelDelegate;
@class NSArray, VKStylesheet;

@interface VKLabelModel : VKModelObject <LabelManagerDelegate, GEOResourceManifestTileGroupObserver, VKMapLayer, VKStylesheetObserver, VKMapModeObserver> {

	BOOL _debugSkipLabels;
	<VKLabelModelDelegate>* _delegate;
	BOOL _drawLabels;
	/*^block*/ id _observerIsReadyHook;
	shared_ptr<vk::LabelManager>* _labelManager;
	int _layoutStamp;
	vector<std::__1::shared_ptr<vk::InfoMapTile>, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile> > >* _currentTiles;
	bool _inRealistic;

}

@property (assign,nonatomic) <VKLabelModelDelegate> * delegate;                         //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL drawLabels;                                           //@synthesize drawLabels=_drawLabels - In the implementation block
@property (assign,nonatomic) BOOL localizeLabels; 
@property (assign,nonatomic) int labelScaleFactor; 
@property (assign,nonatomic) BOOL labelMarkerSelectionEnabled; 
@property (nonatomic,readonly) shared_ptr<vk::LabelManager>* labelManager;              //@synthesize labelManager=_labelManager - In the implementation block
@property (assign,nonatomic) int shieldSize; 
@property (assign,nonatomic) int navigationShieldSize; 
@property (assign,nonatomic) int shieldIdiom; 
@property (assign,nonatomic) BOOL showsPointsOfInterest; 
@property (nonatomic,retain) NSArray * alwaysVisibleTrafficIncidents; 
@property (nonatomic,readonly) VKStylesheet * stylesheet; 
+(BOOL)reloadOnStylesheetChange;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(id).cxx_construct;
-(void)setContentScale:(float)arg1 ;
-(unsigned)mapLayerPosition;
-(BOOL)labelMarkerSelectionEnabled;
-(void)setLabelMarkerSelectionEnabled:(BOOL)arg1 ;
-(id)stylesheet;
-(void)setStylesheet:(id)arg1 ;
-(void)setTrafficEnabled:(BOOL)arg1 ;
-(BOOL)localizeLabels;
-(void)setLocalizeLabels:(BOOL)arg1 ;
-(int)labelScaleFactor;
-(void)setLabelScaleFactor:(int)arg1 ;
-(void)clearScene;
-(int)shieldSize;
-(void)setShieldSize:(int)arg1 ;
-(int)navigationShieldSize;
-(void)setNavigationShieldSize:(int)arg1 ;
-(int)shieldIdiom;
-(void)setShieldIdiom:(int)arg1 ;
-(BOOL)showsPointsOfInterest;
-(void)setShowsPointsOfInterest:(BOOL)arg1 ;
-(id)alwaysVisibleTrafficIncidents;
-(void)setAlwaysVisibleTrafficIncidents:(id)arg1 ;
-(void)deselectLabelMarker;
-(void)setMapType:(int)arg1 ;
-(id)labelMarkerForSelectionAtPoint:(CGPoint)arg1 selectableLabelsOnly:(BOOL)arg2 ;
-(void)selectLabelMarker:(id)arg1 ;
-(id)selectedLabelMarker;
-(id)labelMarkers;
-(void)setRouteUserOffset:(PolylineCoordinate)arg1 ;
-(void)setCurrentLocationText:(id)arg1 ;
-(void)layoutScene:(id)arg1 withContext:(id)arg2 ;
-(unsigned)supportedRenderPasses;
-(void)drawScene:(id)arg1 withContext:(id)arg2 pass:(unsigned)arg3 ;
-(shared_ptr<vk::LabelManager>*)labelManager;
-(void)setDrawLabels:(BOOL)arg1 ;
-(void)prepareForStylesheetTransitionToMapDisplayStyle:(int)arg1 withReadinessBlock:(/*^block*/ id)arg2 ;
-(void)stylesheetWillChange;
-(void)stylesheetDidChange;
-(void)setVectorType:(int)arg1 ;
-(void)setLabelMode:(int)arg1 ;
-(void)stylesheetDoneChanging;
-(id)initWithPurpose:(unsigned)arg1 ;
-(void)willTapZoom;
-(void)didTapZoom;
-(void)willTransitionFrom:(int)arg1 To:(int)arg2 ;
-(void)didTransitionFrom:(int)arg1 To:(int)arg2 ;
-(id)focusedPolylinePainter;
-(void)setFocusedPolylinePainter:(id)arg1 ;
-(void)debugHighlightLabelAtScreenPoint:(CGPoint)arg1 ;
-(id)labelDebugString;
-(void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1 ;
-(void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1 ;
-(void)updateInfoMapTiles:(id)arg1 ;
-(void)labelManager:(LabelManager*)arg1 setNeedsLayout:(BOOL)arg2 ;
-(void)labelManager:(LabelManager*)arg1 setNeedsDisplay:(BOOL)arg2 ;
-(void)labelManager:(LabelManager*)arg1 selectedLabelMarkerWillDisappear:(id)arg2 ;
-(void)labelManager:(LabelManager*)arg1 pendingArtworkIsReady:(BOOL)arg2 ;
-(void)forEachDisplayedLabel:(/*^block*/ id)arg1 ;
-(BOOL)drawLabels;
-(void).cxx_destruct;
@end

