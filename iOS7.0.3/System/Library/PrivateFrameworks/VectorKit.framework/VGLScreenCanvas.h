/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:57:58 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <QuartzCore/CALayer.h>
#import <VectorKit/VGLCanvas.h>

@class VGLContext, VGLFramebuffer, VGLLayer;

@interface VGLScreenCanvas : CALayer <VGLCanvas> {

	VGLContext* _targetContext;
	int _canvasWidth;
	int _canvasHeight;
	BOOL _useDepthBuffer;
	BOOL _useStencilBuffer;
	BOOL _useMultisampling;
	BOOL _requiresMultisampling;
	VGLColor _glClearColor;
	CGContextRef _snapshotContext;
	BOOL _forceRecreateFramebuffer;
	BOOL _forceRecreateFramebufferAndKeepMultisampleFramebuffer;
	VGLFramebuffer* _targetBuffer;
	float _contentScale;
	VGLLayer* _glLayer;
	BOOL _isInBackground;

}

@property (assign,nonatomic) BOOL useDepthBuffer;                            //@synthesize useDepthBuffer=_useDepthBuffer - In the implementation block
@property (assign,nonatomic) BOOL useStencilBuffer;                          //@synthesize useStencilBuffer=_useStencilBuffer - In the implementation block
@property (assign,nonatomic) BOOL useMultisampling; 
@property (assign,nonatomic) VGLColor glClearColor;                          //@synthesize glClearColor=_glClearColor - In the implementation block
@property (nonatomic,readonly) BOOL currentSceneRequiresMSAA; 
@property (getter=isDrawable,nonatomic,readonly) BOOL drawable; 
@property (nonatomic,readonly) VGLLayer * glLayer;                           //@synthesize glLayer=_glLayer - In the implementation block
@property (assign,nonatomic) float contentScale;                             //@synthesize contentScale=_contentScale - In the implementation block
@property (nonatomic,readonly) CGSize size; 
@property (nonatomic,readonly) CGSize sizeInPixels; 
@property (nonatomic,readonly) VGLContext * vglContext;                      //@synthesize targetContext=_targetContext - In the implementation block
+(Class)contextClass;
-(void)setOpaque:(BOOL)arg1 ;
-(void)setNeedsDisplayOnBoundsChange:(BOOL)arg1 ;
-(void)dealloc;
-(void)setNeedsDisplay;
-(CGSize)size;
-(void)setBackgroundColor:(CGColorRef)arg1 ;
-(void)setBounds:(CGRect)arg1 ;
-(void)didReceiveMemoryWarning;
-(void)renderInContext:(CGContextRef)arg1 ;
-(void)setContentsGravity:(id)arg1 ;
-(void)setContentsScale:(float)arg1 ;
-(void)present;
-(id).cxx_construct;
-(void)setContentScale:(float)arg1 ;
-(float)contentScale;
-(void)willEnterForeground;
-(void)display;
-(void)didEnterBackground;
-(void)_createGLLayerIfNecessary;
-(void)_destroyFramebuffer;
-(void)_updateForceRecreateFramebuffer;
-(BOOL)currentSceneRequiresMSAA;
-(void)_destroyAndCreateFramebuffer;
-(void)_destroyAndCreateFramebufferAndKeepMultisampleFramebuffer;
-(void)setUseMultisampling:(BOOL)arg1 ;
-(void)didPresent;
-(BOOL)isEffectivelyHidden;
-(BOOL)canRender;
-(BOOL)wantsRender;
-(void)_destroyFramebufferAndKeepMultisampleFramebuffer;
-(void)createContextIfNecessary;
-(id)vglContext;
-(void)_createFramebuffer;
-(void)frameBufferDestroyed;
-(void)willDrawView;
-(void)didDrawView;
-(CGSize)sizeInPixels;
-(BOOL)isDrawable;
-(id)initWithContext:(id)arg1 inBackground:(BOOL)arg2 ;
-(void)setGlClearColor:(VGLColor)arg1 ;
-(void)drawWithTimestamp:(double)arg1 ;
-(BOOL)shouldRender;
-(void)preloadResources;
-(BOOL)useMultisampling;
-(BOOL)useDepthBuffer;
-(void)setUseDepthBuffer:(BOOL)arg1 ;
-(BOOL)useStencilBuffer;
-(void)setUseStencilBuffer:(BOOL)arg1 ;
-(VGLColor)glClearColor;
-(id)glLayer;
-(void)layoutSublayers;
@end

