/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:57:00 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/Radio.framework/Radio
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <Radio/NSFetchedResultsControllerDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSOperationQueue, BKSProcessAssertion, NSObject, NSManagedObjectContext, NSManagedObjectModel, NSFetchedResultsController, NSFetchRequest, NSPersistentStoreCoordinator, NSString, NSArray;

@interface RadioModel : NSObject <NSFetchedResultsControllerDelegate> {

	NSOperationQueue* _backgroundCleanupQueue;
	BKSProcessAssertion* _backgroundProcessAssertion;
	NSObject<OS_dispatch_queue>* _backgroundTaskAccessQueue;
	int _backgroundTaskCount;
	NSObject<OS_dispatch_source>* _backgroundTaskInvalidateTimerSource;
	NSManagedObjectContext* _context;
	BOOL _isBackgroundModel;
	NSManagedObjectModel* _model;
	int _modelChangedToken;
	BOOL _modelChangedTokenIsValid;
	int _modelDeletedToken;
	BOOL _modelDeletedTokenIsValid;
	NSFetchedResultsController* _stationFetchedResultsController;
	NSFetchRequest* _stationFetchRequest;
	NSPersistentStoreCoordinator* _storeCoordinator;
	NSFetchedResultsController* _trackHistoriesFetchedResultsController;
	NSFetchRequest* _trackHistoriesFetchRequest;
	int _transactionCount;
	NSFetchedResultsController* _wishlistedTracksFetchedResultsController;
	NSFetchRequest* _wishlistedTracksFetchRequest;

}

@property (assign,nonatomic) unsigned long long authenticatedAccountIdentifier; 
@property (assign,nonatomic) unsigned long long globalVersion; 
@property (nonatomic,copy) NSString * globalHash; 
@property (nonatomic,readonly) NSArray * stations; 
@property (nonatomic,copy) NSArray * stationSortOrdering; 
@property (nonatomic,readonly) NSArray * featuredStations; 
@property (nonatomic,readonly) NSArray * previewStations; 
@property (nonatomic,readonly) NSArray * trackHistories; 
@property (nonatomic,readonly) NSArray * trackHistorySections; 
@property (nonatomic,readonly) NSArray * wishlistedTracks; 
@property (nonatomic,readonly) NSArray * reportProblemIssueTypes; 
+(id)sharedModel;
+(id)backgroundModel;
+(void)initialize;
+(id)_radioDatabasePath;
+(void)deleteAllData;
+(id)_radioDirectoryPath;
+(unsigned)maxStationArtworkSize;
-(void)setDatabaseVersion:(long long)arg1 ;
-(long long)databaseVersion;
-(void)controller:(id)arg1 didChangeObject:(id)arg2 atIndexPath:(id)arg3 forChangeType:(unsigned)arg4 newIndexPath:(id)arg5 ;
-(void)controllerDidChangeContent:(id)arg1 ;
-(void)removeTrackForPlayback:(id)arg1 fromStation:(id)arg2 ;
-(unsigned long long)authenticatedAccountIdentifier;
-(id)stations;
-(id)stationSortOrdering;
-(id)stationWithID:(long long)arg1 ;
-(id)trackWithStoreID:(long long)arg1 ;
-(BOOL)canSkipTracksForStation:(id)arg1 ;
-(id)trackHistories;
-(void)insertHistoryForTrack:(id)arg1 stationID:(long long)arg2 stationHash:(id)arg3 stationName:(id)arg4 date:(id)arg5 ;
-(void)setCurrentPlayingTrack:(id)arg1 withTime:(double)arg2 forStation:(id)arg3 ;
-(id)stationWithHash:(id)arg1 ;
-(void)removeTracksForPlaybackFromAllStations;
-(unsigned long long)globalVersion;
-(id)audioClipWithStoreID:(long long)arg1 ;
-(void)noteTrackWasSkippedForStation:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)_init;
-(id)context;
-(void)performTransactionWithBlock:(/*^block*/ id)arg1 ;
-(id)_initBackgroundModelWithPersistentStoreCoordinator:(id)arg1 ;
-(void)_defaultRadioModelInitialization;
-(void)_prepareModel;
-(void)_postContextDidChangeNotification:(id)arg1 ;
-(void)_resetModel;
-(id)_databasePropertyValueForKey:(id)arg1 ;
-(unsigned)numberOfTracksSkippedForStation:(id)arg1 ;
-(id)convertObject:(id)arg1 ;
-(void)deleteAllData;
-(void)performWriteTransactionWithBlock:(/*^block*/ id)arg1 ;
-(id)wishlistedTracks;
-(void)deleteStation:(id)arg1 ;
-(void)_insertRevisionWithStationID:(long long)arg1 revisionType:(int)arg2 ;
-(id)_arrayByReplacingManagedObjectsInArray:(id)arg1 ;
-(id)newStationWithDictionary:(id)arg1 ;
-(void)insertHistoryForTrackStoreID:(long long)arg1 stationID:(long long)arg2 stationHash:(id)arg3 stationName:(id)arg4 date:(id)arg5 ;
-(void)_cullTrackHistoryIfNecessary;
-(id)stationWithPersistentID:(long long)arg1 ;
-(id)newAudioClipWithDictionary:(id)arg1 ;
-(id)_newManagedSkipHistoryWithSkipIdentifier:(id)arg1 ;
-(void)_addTimestamp:(double)arg1 toManagedSkipHistory:(id)arg2 withSkipIntervalForCulling:(double)arg3 ;
-(id)_newManagedSkipHistoryWithStationID:(long long)arg1 ;
-(id)_newManagedSkipHistoryWithStationHash:(id)arg1 ;
-(id)_managedSkipHistoryWithSkipIdentifier:(id)arg1 ;
-(unsigned)_numberOfSkipsUsedWithSkipTimestamps:(id)arg1 currentTimestamp:(double)arg2 skipInterval:(double)arg3 ;
-(id)_managedSkipHistoryWithStationID:(long long)arg1 ;
-(id)_managedSkipHistoryWithStationHash:(id)arg1 ;
-(void)_performTransactionAndSave:(BOOL)arg1 withBlock:(/*^block*/ id)arg2 ;
-(void)_setDatabasePropertyValue:(id)arg1 forKey:(id)arg2 ;
-(void)_contextDidSaveNotification:(id)arg1 ;
-(void)_internalAuthenticatedAccountIdentifierDidChangeNotification:(id)arg1 ;
-(void)_beginBackgroundTaskAssertion;
-(void)_endBackgroundTaskAssertion;
-(id)convertObjectsInSet:(id)arg1 ;
-(id)_setByReplacingManagedObjectsInSet:(id)arg1 ;
-(void)_createRadioDirectoryAndDatabaseIfNecessary;
-(id)convertObjects:(id)arg1 ;
-(void)deleteAllTrackHistory;
-(void)deleteTrackHistoryItem:(id)arg1 ;
-(void)deleteAllWishlistedTracks;
-(void)deleteTrackFromWishlist:(id)arg1 ;
-(void)deletePreviewStation:(id)arg1 ;
-(void)deleteStationWithID:(long long)arg1 ;
-(void)deleteUnreferencedTracks;
-(void)enumerateRevisionsSinceRevisionID:(long long)arg1 usingBlock:(/*^block*/ id)arg2 ;
-(id)featuredStations;
-(id)globalHash;
-(id)newFeaturedStationWithDictionary:(id)arg1 ;
-(id)newPreviewStationWithDictionary:(id)arg1 ;
-(void)markTracksNeedRefreshForStation:(id)arg1 ;
-(void)insertHistoryForTrack:(id)arg1 station:(id)arg2 date:(id)arg3 ;
-(id)newHistoryForTrack:(id)arg1 station:(id)arg2 date:(id)arg3 ;
-(id)newTrackWithDictionary:(id)arg1 ;
-(id)previewStations;
-(void)removeAllTracksForPlaybackFromStation:(id)arg1 ;
-(id)reportProblemIssueTypes;
-(void)setAuthenticatedAccountIdentifier:(unsigned long long)arg1 ;
-(void)setGlobalHash:(id)arg1 ;
-(void)setGlobalVersion:(unsigned long long)arg1 ;
-(void)setReportProblemIssueTypes:(id)arg1 ;
-(void)setStationSortOrdering:(id)arg1 ;
-(id)trackHistorySections;
-(void)copySkipHistoryFromStationHash:(id)arg1 toStationID:(long long)arg2 ;
-(void).cxx_destruct;
@end

