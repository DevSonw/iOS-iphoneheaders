/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:56:39 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
#import <PhotoLibraryServices/PLAlbumContainer.h>
#import <PhotoLibraryServices/PLIndexMapperDataSource.h>
#import <PhotoLibraryServices/PLIndexMappingCache.h>
#import <PhotoLibraryServices/PLDerivedAlbumListOrigin.h>

@protocol PLIndexMappingCache;
@class PLIndexMapper, NSMutableIndexSet, NSMutableOrderedSet, NSObject, PLManagedAlbumList, NSPredicate, PLPhotoLibrary, NSString, NSIndexSet;

@interface PLFilteredAlbumList : NSObject <PLAlbumContainer, PLIndexMapperDataSource, PLIndexMappingCache, PLDerivedAlbumListOrigin> {

	PLIndexMapper* _indexMapper;
	NSMutableIndexSet* _filteredIndexes;
	NSMutableOrderedSet* _weak_albums;
	NSObject<PLIndexMappingCache>* _derivedAlbumLists[5];
	PLManagedAlbumList* backingAlbumList;
	int filter;
	NSPredicate* predicate;

}

@property (nonatomic,readonly) int albumListType; 
@property (assign,nonatomic) int filter; 
@property (nonatomic,readonly) NSMutableOrderedSet * albums; 
@property (nonatomic,readonly) unsigned unreadAlbumsCount; 
@property (nonatomic,readonly) BOOL canEditAlbums; 
@property (nonatomic,readonly) PLPhotoLibrary * photoLibrary; 
@property (nonatomic,readonly) PLIndexMapper * indexMapper; 
@property (nonatomic,retain) PLManagedAlbumList * backingAlbumList; 
@property (nonatomic,retain) NSPredicate * predicate; 
@property (nonatomic,retain) NSMutableOrderedSet * _albums; 
@property (nonatomic,readonly) unsigned containersCount; 
@property (nonatomic,readonly) unsigned albumsCount; 
@property (nonatomic,readonly) id albumsSortingComparator; 
@property (nonatomic,readonly) NSString * _prettyDescription; 
@property (nonatomic,readonly) NSString * _typeDescription; 
@property (nonatomic,readonly) NSIndexSet * filteredIndexes; 
@property (nonatomic,readonly) <NSObject><NSCopying> * cachedIndexMapState; 
+(id)filteredAlbumList:(id)arg1 filter:(int)arg2 ;
-(void)dealloc;
-(id)description;
-(BOOL)isEmpty;
-(void)setFilter:(int)arg1 ;
-(id)identifier;
-(id)_typeDescription;
-(void)setPredicate:(id)arg1 ;
-(id)managedObjectContext;
-(id)predicate;
-(id)albums;
-(id)photoLibrary;
-(unsigned)albumsCount;
-(id)_prettyDescription;
-(void)unregisterAllDerivedAlbums;
-(id)filteredIndexes;
-(BOOL)shouldIncludeObjectAtIndex:(unsigned)arg1 ;
-(BOOL)mappedDataSourceChanged:(id)arg1 remoteNotificationData:(id)arg2 ;
-(Class)derivedChangeNotificationClass;
-(id)cachedIndexMapState;
-(id)indexMapper;
-(id)containers;
-(BOOL)canEditContainers;
-(id)containersRelationshipName;
-(unsigned)containersCount;
-(int)albumListType;
-(BOOL)hasAtLeastOneAlbum;
-(BOOL)canEditAlbums;
-(/*^block*/ id)albumsSortingComparator;
-(void)enumerateDerivedAlbumLists:(/*^block*/ id)arg1 ;
-(BOOL)albumHasFixedOrder:(NSObject*)arg1 ;
-(void)setNeedsReordering;
-(BOOL)needsReordering;
-(void)updateAlbumsOrderIfNeeded;
-(unsigned)unreadAlbumsCount;
-(void)registerDerivedAlbumList:(NSObject*)arg1 ;
-(id)initWithBackingAlbumList:(id)arg1 filter:(int)arg2 ;
-(void)setBackingAlbumList:(id)arg1 ;
-(id)backingAlbumList;
-(void)_backingContextDidChange:(id)arg1 ;
-(void)_invalidateFilteredIndexes;
-(id)_albums;
-(void)set_albums:(id)arg1 ;
-(unsigned)countOfFilteredAlbums;
-(unsigned)indexInFilteredAlbumsOfObject:(id)arg1 ;
-(id)objectInFilteredAlbumsAtIndex:(unsigned)arg1 ;
-(id)filteredAlbumsAtIndexes:(id)arg1 ;
-(void)getFilteredAlbums:(id*)arg1 range:(NSRange)arg2 ;
-(void)insertObject:(id)arg1 inFilteredAlbumsAtIndex:(unsigned)arg2 ;
-(void)removeObjectFromFilteredAlbumsAtIndex:(unsigned)arg1 ;
-(void)insertFilteredAlbums:(id)arg1 atIndexes:(id)arg2 ;
-(void)removeFilteredAlbumsAtIndexes:(id)arg1 ;
-(void)replaceObjectInFilteredAlbumsAtIndex:(unsigned)arg1 withObject:(id)arg2 ;
-(void)replaceFilteredAlbumsAtIndexes:(id)arg1 withFilteredValues:(id)arg2 ;
-(int)filter;
@end

