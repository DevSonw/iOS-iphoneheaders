/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:56:39 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
@interface PLSlalomUtilities : NSObject
+(BOOL)writeRegions:(id)arg1 toPath:(id)arg2 ;
+(id)regionsFromPath:(id)arg1 ;
+(id)defaultRegionsForDuration:(SCD_Struct_PL18)arg1 ;
+(id)plistFromRegions:(id)arg1 ;
+(id)regionsFromPlist:(id)arg1 ;
+(double)durationForBaseDuration:(double)arg1 slalomRegions:(id)arg2 ;
+(double)durationForManagedAsset:(id)arg1 applySlalomRegions:(BOOL)arg2 ;
+(id)assetFromManagedAsset:(id)arg1 applySlalomRegions:(BOOL)arg2 forExport:(BOOL)arg3 outDuration:(double*)arg4 outAudioMix:(id*)arg5 ;
+(id)assetFromVideoFilePath:(id)arg1 slalomRegions:(id)arg2 forExport:(BOOL)arg3 outDuration:(double*)arg4 outAudioMix:(id*)arg5 ;
+(id)exportPresetForAsset:(id)arg1 preferredPreset:(id)arg2 ;
+(void)configureExportSession:(id)arg1 forcePreciseConversion:(BOOL)arg2 ;
+(id)sharedConfiguration;
+(id)plistFromPath:(id)arg1 ;
+(id)_assetFromSourceAsset:(id)arg1 sourceDuration:(double)arg2 slalomRegions:(id)arg3 forExport:(BOOL)arg4 outDuration:(double*)arg5 outAudioMix:(id*)arg6 ;
+(id)scaledCompositionForAsset:(id)arg1 regions:(id)arg2 forExport:(BOOL)arg3 outTimeRangeMapper:(id*)arg4 ;
+(id)audioMixForScaledComposition:(id)arg1 timeRangeMapper:(id)arg2 ;
+(BOOL)_scaleComposition:(id)arg1 baseDuration:(double)arg2 regions:(id)arg3 forExport:(BOOL)arg4 outTimeRangeMapper:(id*)arg5 ;
+(double)_scaleWithinComposition:(id)arg1 fromCursor:(double)arg2 timeStep:(double)arg3 rate:(float)arg4 timeRangeMapper:(id)arg5 ;
+(float)_slalomRampVolume;
+(SCD_Struct_PL19)_timeRangeFromTime:(float)arg1 toTime:(float)arg2 ;
+(float)_slalomVolume;
+(id)_setVolume:(float)arg1 forSlalomRegionsInTrack:(id)arg2 timeRangeMapper:(id)arg3 ;
+(int)preferredTimeScale;
+(id)adjustRegions:(id)arg1 forNewStartTime:(double)arg2 endTime:(double)arg3 ;
+(id)regionsForStartTime:(double)arg1 endTime:(double)arg2 ;
@end

