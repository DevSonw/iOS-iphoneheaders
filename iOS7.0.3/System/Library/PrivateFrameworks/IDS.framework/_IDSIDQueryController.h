/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:55:19 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/IDS
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <IDS/IDSDaemonListenerProtocol.h>

@protocol OS_xpc_object, OS_dispatch_queue;
@class NSMutableDictionary, NSString, NSObject, NSMapTable;

@interface _IDSIDQueryController : NSObject <IDSDaemonListenerProtocol> {

	NSMutableDictionary* _listeners;
	NSMutableDictionary* _idStatusCache;
	NSMutableDictionary* _transactionIDToBlockMap;
	NSString* _rerouteService;
	NSObject<OS_xpc_object>* _connection;
	NSObject<OS_dispatch_queue>* _connectionQueue;
	NSObject<OS_dispatch_queue>* _queue;
	NSString* _serviceToken;
	NSMapTable* _delegateToInfo;
	NSMutableDictionary* _listenerIDToServicesMap;
	id _delegateContext;

}
-(void)dealloc;
-(id)init;
-(void)addDelegate:(id)arg1 queue:(id)arg2 ;
-(void)daemonDisconnected;
-(void)IDQueryCompletedWithFromURI:(id)arg1 idStatusUpdates:(id)arg2 service:(id)arg3 success:(BOOL)arg4 error:(id)arg5 ;
-(id)_squishFromURIFromIDStatusCache:(id)arg1 service:(id)arg2 ;
-(id)_cacheForService:(id)arg1 ;
-(void)_callDelegatesWithBlock:(/*^block*/ id)arg1 ;
-(void)_purgeIDStatusCache;
-(void)___oldDealloc;
-(id)__sendMessage:(id)arg1 queue:(id)arg2 reply:(/*^block*/ id)arg3 failBlock:(/*^block*/ id)arg4 waitForReply:(BOOL)arg5 ;
-(void)_disconnectFromQueryService;
-(void)_requestCacheForService:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)_requestCachedStatusForDestinations:(id)arg1 service:(id)arg2 listenerID:(id)arg3 completionBlock:(/*^block*/ id)arg4 ;
-(void)_requestStatusForDestinations:(id)arg1 service:(id)arg2 listenerID:(id)arg3 completionBlock:(/*^block*/ id)arg4 ;
-(void)_purgeIDStatusCacheAfter:(double)arg1 ;
-(id)_reroutedPrototypeService:(id)arg1 ;
-(id)_cachedStatusForDestination:(id)arg1 service:(id)arg2 ;
-(void)_updateCacheWithDictionary:(id)arg1 service:(id)arg2 ;
-(id)_delegateMapForListenerID:(id)arg1 service:(id)arg2 ;
-(void)_callDelegatesWithBlock:(/*^block*/ id)arg1 delegateMap:(id)arg2 ;
-(BOOL)_isListenerWithID:(id)arg1 listeningToService:(id)arg2 ;
-(void)_idStatusForDestinations:(id)arg1 service:(id)arg2 listenerID:(id)arg3 allowRenew:(BOOL)arg4 completionBlock:(/*^block*/ id)arg5 ;
-(BOOL)_refreshIDStatusForDestinations:(id)arg1 service:(id)arg2 listenerID:(id)arg3 allowRefresh:(BOOL)arg4 queue:(id)arg5 completionBlock:(/*^block*/ id)arg6 ;
-(BOOL)refreshIDStatusForDestinations:(id)arg1 service:(id)arg2 listenerID:(id)arg3 queue:(id)arg4 completionBlock:(/*^block*/ id)arg5 ;
-(BOOL)currentIDStatusForDestinations:(id)arg1 service:(id)arg2 listenerID:(id)arg3 queue:(id)arg4 completionBlock:(/*^block*/ id)arg5 ;
-(id)initWithDelegateContext:(id)arg1 queue:(id)arg2 ;
-(void)removeDelegate:(id)arg1 forService:(id)arg2 listenerID:(id)arg3 ;
-(BOOL)_warmupQueryCacheForService:(id)arg1 ;
-(BOOL)_flushQueryCacheForService:(id)arg1 ;
-(void)addDelegate:(id)arg1 forService:(id)arg2 listenerID:(id)arg3 queue:(id)arg4 ;
-(BOOL)_hasCacheForService:(id)arg1 ;
-(int)_currentCachedIDStatusForDestination:(id)arg1 service:(id)arg2 listenerID:(id)arg3 ;
-(BOOL)currentIDStatusForDestination:(id)arg1 service:(id)arg2 listenerID:(id)arg3 queue:(id)arg4 completionBlock:(/*^block*/ id)arg5 ;
-(BOOL)refreshIDStatusForDestination:(id)arg1 service:(id)arg2 listenerID:(id)arg3 queue:(id)arg4 completionBlock:(/*^block*/ id)arg5 ;
-(void)_connect;
-(void)addListenerID:(id)arg1 forService:(id)arg2 ;
-(BOOL)removeListenerID:(id)arg1 forService:(id)arg2 ;
-(void)removeDelegate:(id)arg1 ;
@end

