/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:09:46 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSSThemeAsset.h>
#import <iWorkImport/TSDPathPainter.h>
#import <iWorkImport/TSDMixing.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSMutableCopying.h>

@class TSUColor, TSDStrokePattern;

@interface TSDStroke : NSObject <TSSThemeAsset, TSDPathPainter, TSDMixing, NSCopying, NSMutableCopying> {

	TSUColor* mColor;
	float mWidth;
	float mActualWidth;
	int mCap;
	int mJoin;
	TSDStrokePattern* mPattern;
	float mMiterLimit;

}

@property (nonatomic,readonly) BOOL dontClearBackground; 
@property (nonatomic,readonly) BOOL empty; 
@property (nonatomic,readonly) BOOL solid; 
@property (nonatomic,retain) TSUColor * color; 
@property (assign,nonatomic) float width; 
@property (assign,nonatomic) float actualWidth; 
@property (assign,nonatomic) int cap; 
@property (assign,nonatomic) int join; 
@property (assign,nonatomic) float miterLimit; 
@property (nonatomic,retain) TSDStrokePattern * pattern; 
@property (nonatomic,readonly) BOOL isNullStroke; 
@property (nonatomic,readonly) BOOL isDash; 
@property (nonatomic,readonly) BOOL isRoundDash; 
@property (nonatomic,readonly) BOOL shouldRender; 
@property (nonatomic,readonly) BOOL supportsPattern; 
@property (nonatomic,readonly) BOOL supportsWidth; 
@property (nonatomic,readonly) BOOL supportsColor; 
@property (nonatomic,readonly) BOOL supportsLineOptions; 
@property (nonatomic,readonly) float suggestedMinimumLineWidth; 
@property (nonatomic,readonly) BOOL isFrame; 
@property (nonatomic,readonly) BOOL isNearlyWhite; 
@property (nonatomic,readonly) float dashSpacing; 
@property (nonatomic,readonly) BOOL drawsOutsideStrokeBounds; 
@property (nonatomic,readonly) TSDStrokeOutsets outsets; 
+(id)instanceWithArchive:(const StrokeArchive*)arg1 unarchiver:(id)arg2 ;
+(id)strokeWithColor:(id)arg1 width:(float)arg2 ;
+(id)emptyStroke;
+(BOOL)canMixWithNilObjects;
+(id)p_newStroke;
+(id)p_newEmptyStroke;
+(Class)mutableClass;
+(id)strokeWithColor:(id)arg1 width:(float)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 ;
+(id)stroke;
-(BOOL)isNearlyWhite;
-(void)saveToArchive:(StrokeArchive*)arg1 archiver:(id)arg2 ;
-(id)initWithArchive:(const StrokeArchive*)arg1 unarchiver:(id)arg2 ;
-(void)drawSwatchInRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(BOOL)isThemeEquivalent:(id)arg1 ;
-(SEL)mapThemeAssetSelector;
-(BOOL)isRoundDash;
-(float)actualWidth;
-(void)applyToContext:(CGContextRef)arg1 ;
-(void)applyToContext:(CGContextRef)arg1 insideStroke:(BOOL)arg2 ;
-(void)paintPath:(CGPathRef)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(CGContextRef)arg3 ;
-(void)aaDefeatedPaintLineEnd:(id)arg1 atPoint:(CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 inContext:(CGContextRef)arg5 ;
-(int)mixingTypeWithObject:(id)arg1 ;
-(id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2 ;
-(CGRect)boundsForLineEnd:(id)arg1 atPoint:(CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 transform:(CGAffineTransform)arg5 ;
-(void)applyToCAShapeLayer:(id)arg1 insideStroke:(BOOL)arg2 withScale:(float)arg3 ;
-(BOOL)isDash;
-(id)initWithColor:(id)arg1 width:(float)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 ;
-(id)initWithColor:(id)arg1 width:(float)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(float)arg6 ;
-(BOOL)supportsWidth;
-(BOOL)supportsLineOptions;
-(BOOL)supportsPattern;
-(BOOL)supportsColor;
-(void)setActualWidth:(float)arg1 ;
-(id)colorForCGContext:(CGContextRef)arg1 ;
-(void)paintRect:(CGRect)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(CGContextRef)arg3 ;
-(void)paintPath:(CGPathRef)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(CGContextRef)arg3 useFastDrawing:(BOOL)arg4 ;
-(void)paintLineEnd:(id)arg1 atPoint:(CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 inContext:(CGContextRef)arg5 useFastDrawing:(BOOL)arg6 ;
-(BOOL)isNullStroke;
-(BOOL)canApplyDirectlyToRepCALayer;
-(BOOL)canApplyToCAShapeLayer;
-(BOOL)drawsOutsideStrokeBounds;
-(BOOL)needsToExtendJoinsForBoundsCalculation;
-(CGRect)boundsForPath:(id)arg1 ;
-(TSDStrokeOutsets)outsets;
-(void)p_setPropertiesFromStroke:(id)arg1 ;
-(void)p_setPatternPropertiesFromStroke:(id)arg1 ;
-(void)applyInteriorWrapPropertiesToContext:(CGContextRef)arg1 insideStroke:(BOOL)arg2 ;
-(float)lineEndInsetAdjustment;
-(id)strokeLineEnd:(id)arg1 ;
-(void)paintPathWithNormalClip:(CGPathRef)arg1 wantsInteriorStroke:(BOOL)arg2 inContext:(CGContextRef)arg3 ;
-(void)paintLineEnd:(id)arg1 atPoint:(CGPoint)arg2 atAngle:(float)arg3 withScale:(float)arg4 inContext:(CGContextRef)arg5 ;
-(id)pathForLineEnd:(id)arg1 wrapPath:(BOOL)arg2 atPoint:(CGPoint)arg3 atAngle:(float)arg4 withScale:(float)arg5 ;
-(float)suggestedMinimumLineWidth;
-(void)applyToRepCALayer:(id)arg1 withScale:(float)arg2 ;
-(BOOL)prefersToApplyToCAShapeLayerDuringManipulation;
-(void)applyToCAShapeLayer:(id)arg1 withScale:(float)arg2 ;
-(BOOL)drawsInOneStep;
-(BOOL)shouldAntialiasDefeat;
-(id)strokeByTransformingByTransform:(CGAffineTransform)arg1 ;
-(BOOL)solid;
-(BOOL)dontClearBackground;
-(BOOL)isEqualToStroke:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned)hash;
-(id)description;
-(id)copyWithZone:(NSZoneRef)arg1 ;
-(float)miterLimit;
-(void)setMiterLimit:(float)arg1 ;
-(float)width;
-(void)setWidth:(float)arg1 ;
-(id)color;
-(void)setColor:(id)arg1 ;
-(id)mutableCopyWithZone:(NSZoneRef)arg1 ;
-(BOOL)isFrame;
-(int)cap;
-(void)setCap:(int)arg1 ;
-(void)setJoin:(int)arg1 ;
-(int)join;
-(void)paintRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(void)paintPath:(CGPathRef)arg1 inContext:(CGContextRef)arg2 ;
-(BOOL)empty;
-(float)dashSpacing;
-(BOOL)shouldRender;
-(id)pattern;
-(void)setPattern:(id)arg1 ;
@end

