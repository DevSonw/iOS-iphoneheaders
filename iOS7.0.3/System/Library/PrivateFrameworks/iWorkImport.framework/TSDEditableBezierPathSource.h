/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:09:48 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDPathSource.h>
#import <iWorkImport/TSDRealignablePathSource.h>
#import <iWorkImport/TSDMixing.h>

@class NSMutableArray, NSArray, TSDBezierNode;

@interface TSDEditableBezierPathSource : TSDPathSource <TSDRealignablePathSource, TSDMixing> {

	NSMutableArray* mSubpaths;
	unsigned mActiveSubpath;
	BOOL mHasLockedFlipTransform;
	CGAffineTransform mLockedFlipTransform;

}

@property (nonatomic,retain) NSMutableArray * subpaths; 
@property (nonatomic,retain) NSMutableArray * nodes; 
@property (nonatomic,retain) NSArray * nodeTypes; 
@property (nonatomic,readonly) TSDBezierNode * firstNode; 
@property (nonatomic,readonly) TSDBezierNode * lastNode; 
@property (assign,getter=isClosed,nonatomic) BOOL closed; 
@property (nonatomic,readonly) BOOL isOpen; 
@property (nonatomic,readonly) BOOL closeIfEndpointsAreEqual; 
@property (nonatomic,readonly) BOOL hasSelectedNode; 
@property (nonatomic,readonly) BOOL allNodesSelected; 
@property (nonatomic,readonly) BOOL canDeleteSelectedNodes; 
@property (nonatomic,readonly) CGRect nodeBounds; 
@property (nonatomic,readonly) BOOL isCompound; 
@property (nonatomic,readonly) CGPathRef subpathForSelection; 
+(id)editableBezierPathSourceWithPathSource:(id)arg1 ;
+(id)editableBezierPathSourceWithBezierPath:(id)arg1 ;
+(id)editableBezierPathSource;
-(void)saveToArchive:(PathSourceArchive*)arg1 ;
-(int)mixingTypeWithObject:(id)arg1 ;
-(id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2 ;
-(id)bezierPathWithoutFlips;
-(CGAffineTransform)pathFlipTransform;
-(CGPathRef)pathWithoutFlips;
-(void)setLockedFlipTransform:(BOOL)arg1 ;
-(void)alignToOrigin;
-(id)nodePriorToNode:(id)arg1 ;
-(id)nodeAfterNode:(id)arg1 ;
-(id)lastNode;
-(void)removeLastNode;
-(void)reverseDirection;
-(void)offsetSelectedNodesByDelta:(CGPoint)arg1 ;
-(void)offsetSelectedEdgesByDelta:(CGPoint)arg1 ;
-(BOOL)allNodesSelected;
-(BOOL)hasSelectedNode;
-(BOOL)canDeleteSelectedNodes;
-(void)deleteSelectedNodes;
-(void)selectAllNodes;
-(void)deselectAllNodes;
-(id)bezierNodeUnderPoint:(CGPoint)arg1 withTransform:(CGAffineTransform)arg2 andTolerance:(float)arg3 returningType:(int*)arg4 ;
-(id)insertNodeAtPoint:(CGPoint)arg1 tolerance:(float)arg2 ;
-(CGRect)nodeBounds;
-(void)sharpenAllNodes;
-(void)smoothNode:(id)arg1 ;
-(BOOL)closeIfEndpointsAreEqual;
-(void)convertToHobby;
-(void)setSubpaths:(id)arg1 ;
-(BOOL)isCompound;
-(void)deleteSelectedNodesForced:(BOOL)arg1 ;
-(void)toggleNode:(id)arg1 toType:(int)arg2 prevNode:(id)arg3 nextNode:(id)arg4 ;
-(void)smoothAllNodes;
-(id)subpathsForConnectingUsingFirstSubpathFirstNode:(BOOL*)arg1 andSecondPathFirstNode:(BOOL*)arg2 ;
-(id)splitEdge:(int)arg1 at:(float)arg2 fromSubpath:(int)arg3 ;
-(void)adjustGeometryForAlignToOrigin:(id)arg1 ;
-(Class)preferredRepClass;
-(float)distanceToPoint:(CGPoint)arg1 subpathIndex:(unsigned*)arg2 elementIndex:(unsigned*)arg3 tValue:(float*)arg4 threshold:(float)arg5 ;
-(BOOL)bezierPathUnderPoint:(CGPoint)arg1 withTransform:(CGAffineTransform)arg2 tolerance:(float)arg3 ;
-(void)toggleSelectedNodesToType:(int)arg1 ;
-(void)selectSubpathForNode:(id)arg1 toggle:(BOOL)arg2 ;
-(BOOL)canConnectSelectedNodes;
-(void)connectSelectedNodes;
-(BOOL)canCloseSelectedNodes;
-(void)closeSelectedNodes;
-(void)deleteSelectedEdges;
-(void)splitSelectedEdges;
-(void)splitSelectedNodes;
-(BOOL)canCutAtSelectedNodes;
-(void)cutAtSelectedNodes;
-(CGPathRef)subpathForSelection;
-(id)nodeTypes;
-(void)setNodeTypes:(id)arg1 ;
-(void)smoothCurveToPoint:(CGPoint)arg1 controlPoint1:(CGPoint)arg2 controlPoint2:(CGPoint)arg3 ;
-(void)updateSmoothNodes;
-(void)morphWithMorphInfo:(id)arg1 ;
-(void)addTemporarySmoothNodes;
-(void)setNaturalSize:(CGSize)arg1 ;
-(BOOL)isOpen;
-(id)subpaths;
-(void)setNodes:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(BOOL)isEqual:(id)arg1 ;
-(id)description;
-(void)moveToPoint:(CGPoint)arg1 ;
-(void)closePath;
-(id)copyWithZone:(NSZoneRef)arg1 ;
-(void)lineToPoint:(CGPoint)arg1 ;
-(id)firstNode;
-(CGSize)naturalSize;
-(void)setClosed:(BOOL)arg1 ;
-(BOOL)isClosed;
-(id)initWithArchive:(const PathSourceArchive*)arg1 ;
-(void)transformUsingAffineTransform:(CGAffineTransform)arg1 ;
-(void)curveToPoint:(CGPoint)arg1 controlPoint1:(CGPoint)arg2 controlPoint2:(CGPoint)arg3 ;
-(BOOL)isRectangular;
-(BOOL)isCircular;
-(id)nodes;
-(void)addNode:(id)arg1 ;
-(void)removeNode:(id)arg1 ;
-(void)setBezierPath:(id)arg1 ;
@end

