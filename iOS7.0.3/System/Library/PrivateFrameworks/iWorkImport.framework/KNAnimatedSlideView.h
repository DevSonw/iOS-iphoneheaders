/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:10:17 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDCanvasDelegate.h>
#import <iWorkImport/TSDConnectedInfoReplacing.h>

@class KNSlide, KNSlideNode, KNPlaybackSession, KNAnimatedSlideModel, NSIndexSet, NSMutableSet, NSMutableArray, TSUNoCopyDictionary, TSDCanvas, NSSet;

@interface KNAnimatedSlideView : NSObject <TSDCanvasDelegate, TSDConnectedInfoReplacing> {

	KNSlide* mSlide;
	KNSlideNode* mAlternateDestinationSlideNode;
	KNPlaybackSession* mSession;
	KNAnimatedSlideModel* mAnimatedSlideModel;
	unsigned mCurrentEventIndex;
	NSIndexSet* mEventIndexesToAnimate;
	BOOL mSlideIsBuildable;
	BOOL mTransitionInitialized;
	BOOL mShouldStopAnimations;
	NSMutableSet* mMovieRenderers;
	NSMutableSet* mBuildRenderers;
	unsigned mSlideNumber;
	double mTransitionStartTime;
	unsigned mAnimationsActive;
	unsigned mAnimationsStarted;
	BOOL mIsInDelayBeforeActiveAnimations;
	NSMutableArray* mChunks;
	TSUNoCopyDictionary* mBuildsToStartAfterMovieStartsMap;
	TSUNoCopyDictionary* mTextureSetForInfoMap;
	id mEventStartCallbackTarget;
	SEL mEventStartCallbackSelector;
	id mEventAnimationActiveCallbackTarget;
	SEL mEventAnimationActiveCallbackSelector;
	id mEventEndCallbackTarget;
	SEL mEventEndCallbackSelector;
	id mMovieStartCallbackTarget;
	SEL mMovieStartCallbackSelector;
	id mMovieEndCallbackTarget;
	SEL mMovieEndCallbackSelector;
	BOOL mEventTriggered;
	BOOL mQueuedTrigger;
	BOOL mSkipDelayOnTransition;
	TSDCanvas* mCanvas;
	int mIsTexturePreloadingCancelled;
	NSMutableSet* mTextureSets;

}

@property (assign,nonatomic) unsigned eventIndex; 
@property (nonatomic,readonly) unsigned eventCount; 
@property (nonatomic,readonly) BOOL hasBuilds; 
@property (nonatomic,readonly) BOOL isAnimating; 
@property (nonatomic,readonly) BOOL isNonMovieAnimationAnimating; 
@property (nonatomic,readonly) BOOL isNonMovieAnimationActive; 
@property (nonatomic,readonly) BOOL isDoneAnimating; 
@property (nonatomic,readonly) BOOL isMovieAnimating; 
@property (assign,nonatomic) BOOL eventHasTriggered; 
@property (assign,nonatomic) BOOL triggerQueued; 
@property (nonatomic,readonly) KNAnimatedSlideModel * model; 
@property (nonatomic,copy) NSIndexSet * eventIndexesToAnimate; 
@property (nonatomic,readonly) KNPlaybackSession * session; 
@property (nonatomic,readonly) NSSet * movieRenderers; 
@property (nonatomic,readonly) NSSet * animatingBuildRenderers; 
@property (assign,nonatomic) BOOL skipDelayOnTransition; 
@property (nonatomic,readonly) TSDCanvas * canvas; 
+(void)registerUserDefaults;
+(void)initialize;
-(unsigned)eventCount;
-(BOOL)shouldSuppressBackgrounds;
-(BOOL)isPrintingCanvas;
-(BOOL)shouldShowInstructionalText;
-(BOOL)isCanvasDrawingIntoPDF:(id)arg1 ;
-(id)infoToConnectToForConnectionLineConnectedToInfo:(id)arg1 ;
-(unsigned)slideNumber;
-(BOOL)hasBuilds;
-(id)repsCurrentlyVisible;
-(void)setTexture:(id)arg1 forRep:(id)arg2 ;
-(id)infosVisibleAtEvent:(unsigned)arg1 ignoreBuildVisibility:(BOOL)arg2 ;
-(void)setEventIndex:(unsigned)arg1 ;
-(id)animatingBuildRenderers;
-(void)pauseAnimations;
-(void)resumeAnimationsIfPaused;
-(void)renderCurrentEventPreparingNextEvent:(BOOL)arg1 ;
-(void)addAnimatedBuild:(id)arg1 ;
-(void)removeAnimatedBuild:(id)arg1 ;
-(void)clearAnimatedBuilds;
-(id)movieRenderers;
-(CGImageRef)copyImageOfCurrentEvent;
-(void)beginRenderingEvent:(unsigned)arg1 onBaseLayer:(id)arg2 shouldPrepareBuildAnimation:(BOOL)arg3 completionHandler:(/*^block*/ id)arg4 ;
-(void)renderEvent:(unsigned)arg1 intoContext:(CGContextRef)arg2 ignoreBuildVisibility:(BOOL)arg3 ;
-(void)cancelRendering;
-(BOOL)hasTransitionAtEventIndex:(int)arg1 ;
-(id)initForSlideNode:(id)arg1 session:(id)arg2 ;
-(void)setupTransition;
-(void)renderEvent:(unsigned)arg1 onBaseLayer:(id)arg2 shouldPrepareBuildAnimation:(BOOL)arg3 ;
-(void)interruptAndReset;
-(void)registerForMovieStartCallback:(SEL)arg1 target:(id)arg2 ;
-(void)p_tearDownTextures;
-(void)p_setupTransitionStartTime;
-(void)p_resetMovieTextures;
-(void)p_clearMovieRenderers;
-(void)p_animateBuild:(id)arg1 afterDelay:(double)arg2 ;
-(void)buildHasFinishedAnimating:(id)arg1 ;
-(void)p_removeMovieRenderer:(id)arg1 ;
-(BOOL)p_shouldSkipActionBuild:(id)arg1 onMovieInfo:(id)arg2 ;
-(void)triggerNextEvent;
-(id)infosCurrentlyVisible;
-(BOOL)p_shouldAddInfoToTree:(id)arg1 ;
-(id)p_infosForSlide;
-(void)p_renderTexturesForEvent:(unsigned)arg1 onBaseLayer:(id)arg2 intoContext:(CGContextRef)arg3 shouldPrepareBuildAnimation:(BOOL)arg4 ignoreBuildVisibility:(BOOL)arg5 ;
-(void)p_preloadTexturesForEvent:(unsigned)arg1 ignoreBuildVisibility:(BOOL)arg2 priority:(long)arg3 completionHandler:(/*^block*/ id)arg4 ;
-(void)renderEvent:(unsigned)arg1 shouldPrepareBuildAnimation:(BOOL)arg2 shouldPrepareTransition:(BOOL)arg3 ;
-(void)triggerNextEventIgnoringDelay:(BOOL)arg1 ;
-(id)eventIndexesToAnimate;
-(BOOL)isDoneAnimating;
-(void)p_animateCurrentEventIgnoringDelays:(BOOL)arg1 ;
-(void)p_stopAllMovieRenderers;
-(id)p_getRenderersAtEventIndex:(int)arg1 ;
-(void)transitionHasFinishedAnimating:(id)arg1 ;
-(void)p_animateTransition:(id)arg1 ;
-(void)movieHasFinishedPlayback:(id)arg1 ;
-(void)p_addMovieRenderer:(id)arg1 ;
-(void)p_movieStarted:(id)arg1 ;
-(void)p_animateBuild:(id)arg1 ;
-(void)p_animateBuild:(id)arg1 isMoviePlayback:(BOOL)arg2 ;
-(void)registerForEventStartCallback:(SEL)arg1 target:(id)arg2 ;
-(void)registerForEventAnimationActiveCallback:(SEL)arg1 target:(id)arg2 ;
-(void)registerForEventEndCallback:(SEL)arg1 target:(id)arg2 ;
-(void)registerForMovieEndCallback:(SEL)arg1 target:(id)arg2 ;
-(BOOL)isNonMovieAnimationActive;
-(BOOL)isNonMovieAnimationAnimating;
-(BOOL)isMovieAnimating;
-(void)renderCurrentEvent;
-(BOOL)playAutomaticEvents;
-(void)setEventIndexesToAnimate:(id)arg1 ;
-(BOOL)isAtFirstEvent;
-(void)setNewDestinationSlideNode:(id)arg1 ;
-(id)textureSetForRep:(id)arg1 ;
-(BOOL)eventHasTriggered;
-(void)setEventHasTriggered:(BOOL)arg1 ;
-(BOOL)skipDelayOnTransition;
-(void)setSkipDelayOnTransition:(BOOL)arg1 ;
-(BOOL)triggerQueued;
-(void)setTriggerQueued:(BOOL)arg1 ;
-(id)session;
-(unsigned)eventIndex;
-(void)dealloc;
-(BOOL)isAnimating;
-(id)model;
-(void)reset;
-(id)documentRoot;
-(id)canvas;
-(void)stopAnimations;
@end

