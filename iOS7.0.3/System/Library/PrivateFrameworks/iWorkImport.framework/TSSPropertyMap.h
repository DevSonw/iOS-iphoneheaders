/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:09:57 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <CoreFoundation/NSCopying.h>
#import <iWorkImport/TSSPropertySource.h>

@interface TSSPropertyMap : NSObject <NSCopying, TSSPropertySource> {

	TSSPropertyStoreRef mStore;

}
+(id)propertyMap;
+(id)propertyMapWithPropertyMap:(id)arg1 ;
+(id)propertyMapWithPropertiesAndValues:(int)arg1 ;
-(void)filterWithProperties:(id)arg1 ;
-(void)addValuesFromPropertyMap:(id)arg1 ;
-(id)propertyMapWithProperties:(id)arg1 ;
-(void)removeValueForProperty:(int)arg1 ;
-(int)intValueForProperty:(int)arg1 ;
-(void)enumeratePropertiesAndObjectsUsingBlock:(/*^block*/ id)arg1 ;
-(void)removeValuesFromPropertyMap:(id)arg1 ;
-(void)removeValuesForProperties:(id)arg1 ;
-(id)boxedObjectForProperty:(int)arg1 ;
-(float)floatValueForProperty:(int)arg1 ;
-(BOOL)containsProperty:(int)arg1 ;
-(void)setFloatValue:(float)arg1 forProperty:(int)arg2 ;
-(id)initWithPropertiesAndValues:(int)arg1 ;
-(BOOL)definesProperty:(int)arg1 ;
-(void)setIntValue:(int)arg1 forProperty:(int)arg2 ;
-(id)objectForProperty:(int)arg1 ;
-(void)setBoxedObject:(id)arg1 forProperty:(int)arg2 ;
-(void)setBoolValue:(BOOL)arg1 forProperty:(int)arg2 ;
-(id)initWithPropertyMap:(id)arg1 ;
-(void)minusPropertyMap:(id)arg1 ;
-(float)CGFloatValueForProperty:(int)arg1 ;
-(double)doubleValueForProperty:(int)arg1 ;
-(id)initWithFirstKey:(int)arg1 andArgumentList:(void*)arg2 ;
-(void)p_getAllKeys:(int*)arg1 ;
-(id)old_description;
-(void)setDoubleValue:(double)arg1 forProperty:(int)arg2 ;
-(void)setCGFloatValue:(float)arg1 forProperty:(int)arg2 ;
-(BOOL)containsAnyPropertyInProperties:(id)arg1 ;
-(void)removeAllPropertyValues;
-(id)diffOnlyDifferences:(id)arg1 ;
-(id)diffPropertyNames:(id)arg1 ;
-(id)propertyMapByAddingValuesFromPropertyMap:(id)arg1 ;
-(id)propertyMapByRemovingValuesFromPropertyMap:(id)arg1 ;
-(id)propertyMapByRemovingValuesForProperties:(id)arg1 ;
-(void)pSetArrayOfObjects:(id)arg1 forProperty:(int)arg2 ;
-(void)pSetArrayOfFloats:(float)arg1 forProperty:(int)arg2 ;
-(void)pSetRepeatedArrayOfInts:(const RepeatedField<int>*)arg1 forProperty:(int)arg2 defaultValues:(int)arg3 min:(int)arg4 max:(int)arg5 validator:(id)arg6 usePreviousValueOnDefault:(BOOL)arg7 ;
-(void)pSetArrayOfInts:(int)arg1 forProperty:(int)arg2 ;
-(void)pSetArrayOfBools:(bool)arg1 forProperty:(int)arg2 ;
-(void)pSetRepeatedArrayOfFloats:(const RepeatedField<float>*)arg1 forProperty:(int)arg2 defaultValues:(float)arg3 validator:(id)arg4 ;
-(void)pSetRepeatedArrayOfInts:(const RepeatedField<int>*)arg1 forProperty:(int)arg2 defaultValues:(int)arg3 min:(int)arg4 max:(int)arg5 validator:(id)arg6 ;
-(void)pSetRepeatedArrayOfBools:(const RepeatedField<bool>*)arg1 forProperty:(int)arg2 defaultValues:(bool)arg3 validator:(id)arg4 ;
-(void)dealloc;
-(unsigned)count;
-(id)init;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned)hash;
-(id)description;
-(id)initWithCapacity:(unsigned)arg1 ;
-(id)allKeys;
-(id)copyWithZone:(NSZoneRef)arg1 ;
-(void)setObject:(id)arg1 forProperty:(int)arg2 ;
-(id)mutableCopyWithZone:(NSZoneRef)arg1 ;
-(id)allProperties;
-(id)diff:(id)arg1 ;
@end

