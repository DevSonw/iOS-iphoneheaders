/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:09:14 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


#import <iWorkImport/iWorkImport-Structs.h>
@class TSPObject, NSHashTable;

@interface TSPArchiverBase : NSObject {

	TSPObject* _object;
	auto_ptr<google::protobuf::Message>* _message;
	unsigned long long _messageVersion;
	hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule> > >* _fieldRules;
	FieldPath* _currentFieldPath;
	NSHashTable* _strongReferences;
	NSHashTable* _weakReferences;
	NSHashTable* _commandToModelReferences;
	NSHashTable* _lazyReferences;
	NSHashTable* _dataReferences;

}

@property (nonatomic,readonly) BOOL forPasteboard; 
@property (nonatomic,readonly) TSPObject * object;                                  //@synthesize object=_object - In the implementation block
@property (assign,nonatomic) unsigned long long messageVersion;                     //@synthesize messageVersion=_messageVersion - In the implementation block
@property (nonatomic,readonly) NSHashTable * strongReferences;                      //@synthesize strongReferences=_strongReferences - In the implementation block
@property (nonatomic,readonly) NSHashTable * weakReferences;                        //@synthesize weakReferences=_weakReferences - In the implementation block
@property (nonatomic,readonly) NSHashTable * commandToModelReferences;              //@synthesize commandToModelReferences=_commandToModelReferences - In the implementation block
@property (nonatomic,readonly) NSHashTable * lazyReferences;                        //@synthesize lazyReferences=_lazyReferences - In the implementation block
@property (nonatomic,readonly) NSHashTable * dataReferences;                        //@synthesize dataReferences=_dataReferences - In the implementation block
-(void)setStrongReference:(id)arg1 message:(Reference*)arg2 ;
-(void)setWeakReference:(id)arg1 message:(Reference*)arg2 ;
-(void)setStrongLazyReference:(id)arg1 message:(Reference*)arg2 ;
-(void)setDataReference:(id)arg1 message:(DataReference*)arg2 ;
-(void)setMustUnderstandRuleForFieldPath:(int*)arg1 ;
-(void)setRule:(int)arg1 forFieldPath:(int*)arg2 ;
-(void)setIgnoreAndPreserveRuleForFieldPath:(int*)arg1 ;
-(void)setIgnoreAndDropRuleForFieldPath:(int*)arg1 ;
-(Message*)messageWithNewFunction:(/*function pointer*/ void*)arg1 ;
-(void)releaseMessage;
-(BOOL)forPasteboard;
-(void)setStrongReferenceArray:(id)arg1 message:(RepeatedPtrField<TSP::Reference>*)arg2 ;
-(void)setWeakReferenceArray:(id)arg1 message:(RepeatedPtrField<TSP::Reference>*)arg2 ;
-(void)setStrongLazyReferenceArray:(id)arg1 message:(RepeatedPtrField<TSP::Reference>*)arg2 ;
-(void)setWeakLazyReference:(id)arg1 message:(Reference*)arg2 ;
-(void)setDataReferenceArray:(id)arg1 message:(RepeatedPtrField<TSP::DataReference>*)arg2 ;
-(void)setMustUnderstandRuleForField:(int)arg1 ;
-(void)setIgnoreAndPreserveRuleForField:(int)arg1 ;
-(void)setIgnoreAndDropRuleForField:(int)arg1 ;
-(void)scopedRulesForField:(int)arg1 usingBlock:(/*^block*/ id)arg2 ;
-(void)enumerateRulesUsingBlock:(/*^block*/ id)arg1 ;
-(unsigned long long)messageVersion;
-(void)setMessageVersion:(unsigned long long)arg1 ;
-(id)strongReferences;
-(id)weakReferences;
-(id)commandToModelReferences;
-(id)lazyReferences;
-(id)dataReferences;
-(void)dealloc;
-(id)init;
-(Message*)message;
-(id)object;
-(id).cxx_construct;
-(void)cleanup;
-(id)initWithObject:(id)arg1 ;
-(void).cxx_destruct;
@end

