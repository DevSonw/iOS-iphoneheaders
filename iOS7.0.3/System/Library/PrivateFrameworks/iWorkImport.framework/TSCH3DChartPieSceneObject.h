/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:09:27 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSCH3DChartElementSceneObject.h>

@interface TSCH3DChartPieSceneObject : TSCH3DChartElementSceneObject
+(float)geometrySpaceRadius;
+(Class)propertiesClass;
+(id)chartSeriesType;
+(BOOL)shouldCreateMeshSeriesStorage;
+(id)createBoundsForSeries:(id)arg1 ;
+(MeshData)createMeshForSeries:(id)arg1 ;
+(unsigned)p_boundsStepsForAngle:(double)arg1 ;
+(id)p_boundsDataBufferWithDepthFactor:(float)arg1 angleRange:(const range<double>*)arg2 includeEndPoints:(BOOL)arg3 ;
+(id)p_wholePieBounds;
+(float)calculateHalfAngleForSeries:(id)arg1 ;
+(id)createGeometryWithStartAngle:(float)arg1 endAngle:(float)arg2 bevel:(BOOL)arg3 bevelEdges:(BOOL)arg4 ;
+(id)wholePieBoundsResource;
-(void)postAddDataToGeometryResourceAnimationData:(id)arg1 ;
-(BOOL)alwaysRenderForElementBlendAnimationClip;
-(BOOL)growAnimationSequenceInOrderForChartDeliveryStyle:(unsigned)arg1 ;
-(BOOL)growAnimationLinearInterpolationForChartDeliveryStyle:(unsigned)arg1 ;
-(void)sortElements:(vector<TSCH3D::RenderElementInfo, std::__1::allocator<TSCH3D::RenderElementInfo> >*)arg1 pipeline:(id)arg2 ;
-(BOOL)shouldRenderEachValue;
-(void)renderLabelsSceneObject:(id)arg1 pipeline:(id)arg2 enumerator:(id)arg3 properties:(id)arg4 ;
-(void)updateElementEffectsStates:(const RenderElementInfo*)arg1 depthToWidthRatio:(float)arg2 ;
-(BOOL)transparencyDepthMask;
-(void)updateTilingEffect:(TexCoordTilingShaderEffectState*)arg1 properties:(id)arg2 textureTiling:(id)arg3 depth:(float)arg4 percentOfTotal:(float)arg5 ;
-(float)explosionAtElementIndex:(const tvec2<int>*)arg1 forScene:(id)arg2 ;
-(void)setExplosion:(float)arg1 atElementIndex:(const tvec2<int>*)arg2 forScene:(id)arg3 ;
-(Class)chartBoundsLayoutSceneDelegateClass;
-(Class)resizer3DClass;
-(Class)getBounds3DClass;
-(EdgeDetectionParameters)edgeDetectionParameters;
@end

