/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:09:09 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol GQHContext;
#import <iWorkImport/iWorkImport-Structs.h>
@class GQHXML, GQHTableState, GQSDocument;

@interface GQHState : NSObject {

	GQHXML* mHtmlDoc;
	CGSize mScale;
	CFStringRef mStyleData;
	GQHTableState* mTableState;
	GQSDocument* mProcessorState;
	CFDictionaryRef mStyleIndexes;
	CFDictionaryRef mStyleNameMap;
	CFArrayRef mImplicitStyles;
	int mColoredBackgroundLayerCount;
	int mMultiColumnedDepth;
	CFArrayRef mGraphicPropertiesStack;
	int mParagraphCount;
	int mParagraphIndex;
	int mCachedCellStyleIndex;
	CFDictionaryRef mCachedTableStyles;
	int mCachedTextStyleIndex;
	CFDictionaryRef mCachedTextStyles;
	int mInlineStyleIndex;
	CFDictionaryRef mInlineStyles;
	CFDictionaryRef mColorStrings;
	<GQHContext>* mShapeContext;
	int mOutlineLevel;
	int mOutlineStyleType;
	int mShapeIDCounter;
	unsigned mTextScale;

}
-(id)tableState;
-(unsigned)textScale;
-(BOOL)useOutline;
-(id)htmlDoc;
-(void)setParagraphCount:(int)arg1 ;
-(void)setParagraphIndex:(int)arg1 ;
-(id)processorState;
-(BOOL)drawablesNeedCssZOrdering;
-(CFStringRef)cssZOrderClassForDrawable:(id)arg1 ;
-(BOOL)shouldMapLinkWithUrl:(CFStringRef)arg1 ;
-(void)addedDrawableWithBounds:(CGRect)arg1 ;
-(BOOL)allowInlineWrap;
-(CFStringRef)getColorString:(id)arg1 ;
-(void)setColoredBackground:(BOOL)arg1 ;
-(CFStringRef)createUniqueShapeId:(const char*)arg1 ;
-(id)shapeContext;
-(void)enterGraphicObject;
-(void)leaveGraphicObject;
-(BOOL)finishMainHtml;
-(id)initWithState:(id)arg1 documentSize:(CGSize)arg2 ;
-(CFStringRef)cssZOrderClassForDrawableUid:(const char*)arg1 ;
-(void)addStyle:(CFStringRef)arg1 className:(CFStringRef)arg2 srcStyle:(id)arg3 ;
-(CFStringRef)className:(id)arg1 ;
-(CFStringRef)makeInlineStyle:(CFStringRef)arg1 inDocument:(id)arg2 ;
-(CFStringRef)makeInlineStyle:(CFStringRef)arg1 ;
-(void)addCachedStyle:(CFStringRef)arg1 ;
-(void)setOutlineStyleType:(int)arg1 ;
-(BOOL)needAbsolutelyPositionedTables;
-(void)pushImplicitStyle:(id)arg1 ;
-(id)implicitStyle;
-(void)popImplicitStyle;
-(int)outlineStyleType;
-(BOOL)coloredBackground;
-(CFStringRef)cachedClassStringForTextStyle:(id)arg1 implicitStyle:(id)arg2 isColoredBackground:(BOOL)arg3 outlineLevel:(int)arg4 outlineType:(int)arg5 isSpan:(BOOL)arg6 ;
-(int)paragraphIndex;
-(CFStringRef)addCachedClassStringForTextStyle:(id)arg1 implicitStyle:(id)arg2 isColoredBackground:(BOOL)arg3 outlineLevel:(int)arg4 outlineType:(int)arg5 isSpan:(BOOL)arg6 baseClassString:(CFStringRef)arg7 cssCachedStyle:(id)arg8 ;
-(void)setTextScale:(unsigned)arg1 ;
-(void)invalidateTextScale;
-(id)initWithState:(id)arg1 needIndexFile:(BOOL)arg2 documentSize:(CGSize)arg3 ;
-(int)indexForStyle:(const char*)arg1 ;
-(void)setMultiColumned:(BOOL)arg1 ;
-(CFStringRef)createStyleName:(id)arg1 type:(const char*)arg2 ;
-(BOOL)multiColumned;
-(CFStringRef)cachedClassStringForCellStyle:(id)arg1 fillStyle:(id)arg2 cellClass:(Class)arg3 vectorStyles:(id*)arg4 groupLevel:(unsigned short)arg5 hasFormula:(BOOL)arg6 ;
-(CFStringRef)addCacheForCellStyle:(id)arg1 fillStyle:(id)arg2 cellClass:(Class)arg3 vectorStyles:(id*)arg4 groupLevel:(unsigned short)arg5 hasFormula:(BOOL)arg6 baseClassString:(CFStringRef)arg7 cssCachedStyle:(id)arg8 ;
-(void)dealloc;
-(CGSize)scale;
-(void)setScale:(CGSize)arg1 ;
-(id).cxx_construct;
-(int)paragraphCount;
-(void)setOutlineLevel:(int)arg1 ;
-(int)outlineLevel;
-(id)initWithState:(id)arg1 ;
@end

