/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:09:51 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDGLDataBufferAccessor.h>

@class NSMutableArray, NSMutableDictionary, NSArray;

@interface TSDGLDataBuffer : NSObject <TSDGLDataBufferAccessor> {

	unsigned mCurrentBufferIndex;
	NSMutableArray* mArrayBuffers;
	NSMutableDictionary* mAttributeToArrayBuffersDictionary;
	unsigned mElementArrayCount;
	unsigned short* mGLElementData;
	BOOL mGLElementDataBufferWasSetup;
	unsigned mGLElementDataBuffer;
	CGSize mGLElementMeshSize;
	unsigned mGLElementQuadParticleCount;
	unsigned mGLVertexArrayObjects[2];
	BOOL _isUpdatingRawDataBuffer;
	BOOL _didTeardown;
	BOOL _isDoubleBuffered;
	unsigned _vertexCount;
	NSArray* _vertexAttributes;
	unsigned _drawMode;

}

@property (readonly) unsigned vertexCount;                    //@synthesize vertexCount=_vertexCount - In the implementation block
@property (readonly) NSArray * vertexAttributes;              //@synthesize vertexAttributes=_vertexAttributes - In the implementation block
@property (assign,nonatomic) unsigned drawMode;               //@synthesize drawMode=_drawMode - In the implementation block
@property (readonly) BOOL isDoubleBuffered;                   //@synthesize isDoubleBuffered=_isDoubleBuffered - In the implementation block
-(void)setGLfloat:(float)arg1 forAttribute:(id)arg2 atIndex:(unsigned)arg3 ;
-(float)GLfloatForAttribute:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)setCGFloat:(float)arg1 forAttribute:(id)arg2 atIndex:(unsigned)arg3 ;
-(CGSize)GLPoint2DForAttribute:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)setGLPoint2D:(CGSize)arg1 forAttribute:(id)arg2 atIndex:(unsigned)arg3 ;
-(SCD_Struct_TS478)GLPoint3DForAttribute:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)setGLPoint3D:(SCD_Struct_TS478)arg1 forAttribute:(id)arg2 atIndex:(unsigned)arg3 ;
-(tquat<float>)GLPoint4DForAttribute:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)setGLPoint4D:(tquat<float>)arg1 forAttribute:(id)arg2 atIndex:(unsigned)arg3 ;
-(void)setGLushort:(unsigned short)arg1 forIndexElement:(unsigned)arg2 ;
-(id)initWithVertexAttributes:(id)arg1 vertexCount:(unsigned)arg2 indexElementCount:(unsigned)arg3 doubleBuffered:(BOOL)arg4 ;
-(id)initWithVertexAttributes:(id)arg1 meshSize:(CGSize)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 textureFlipped:(BOOL)arg4 includeCenterAttribute:(BOOL)arg5 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 textureFlipped:(BOOL)arg4 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 meshSize:(CGSize)arg3 ;
-(BOOL)isDoubleBuffered;
-(void)p_setupGLElementArrayBufferIfNecessary;
-(void)drawWithShader:(id)arg1 range:(NSRange)arg2 ;
-(void)enableElementArrayBuffer;
-(id)vertexAttributes;
-(BOOL)p_setAttributeUpdateData:(SCD_Struct_TS479*)arg1 fromAttribute:(id)arg2 ;
-(id)initWithVertexAttributes:(id)arg1 quadParticleCount:(unsigned)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 ;
-(id)initWithVertexRect:(CGRect)arg1 textureRect:(CGRect)arg2 textureFlipped:(BOOL)arg3 ;
-(unsigned short)GLushortForIndexElement:(unsigned)arg1 ;
-(void)disableElementArrayBuffer;
-(void)drawWithShader:(id)arg1 ;
-(void)setDataForAttribute:(id)arg1 atIndex:(unsigned)arg2 fromAttribute:(id)arg3 dataBuffer:(id)arg4 index:(unsigned)arg5 ;
-(id)vertexAttributeNamed:(id)arg1 ;
-(void)updateDataBufferAttributes:(id)arg1 withBlock:(/*^block*/ id)arg2 ;
-(void)dealloc;
-(id)description;
-(unsigned)drawMode;
-(void)setDrawMode:(unsigned)arg1 ;
-(void)teardown;
-(unsigned)vertexCount;
@end

