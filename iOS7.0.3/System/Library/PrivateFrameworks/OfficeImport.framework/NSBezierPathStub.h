/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:56:21 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <OfficeImport/OfficeImport-Structs.h>
#import <CoreFoundation/NSCopying.h>

@interface NSBezierPathStub : NSObject <NSCopying> {

	int _segmentCount;
	int _segmentMax;
	PATHSEGMENT* _head;
	int _lastSubpathIndex;
	int _elementCount;
	float _lineWidth;
	CGRect _controlPointBounds;
	float _miterLimit;
	float _flatness;
	float* _dashedLinePattern;
	unsigned _dashedLineCount;
	float _dashedLinePhase;
	void* _path;
	id _private[4];
	struct {
		unsigned _flags : 8;
		unsigned _pathState : 2;
		unsigned _unused : 22;
	}  _bpFlags;

}
+(id)bezierPath;
+(id)bezierPathWithRect:(CGRect)arg1 ;
+(id)bezierPathWithOvalInRect:(CGRect)arg1 ;
+(float)lineWidth;
+(void)setLineWidth:(float)arg1 ;
+(unsigned)lineCapStyle;
+(void)setLineCapStyle:(unsigned)arg1 ;
+(unsigned)lineJoinStyle;
+(void)setLineJoinStyle:(unsigned)arg1 ;
+(float)miterLimit;
+(void)setMiterLimit:(float)arg1 ;
+(float)flatness;
+(void)setFlatness:(float)arg1 ;
+(void)initialize;
+(void)fillRect:(CGRect)arg1 ;
+(CGContextRef)currentCGContext;
+(unsigned)windingRule;
+(void)setWindingRule:(unsigned)arg1 ;
+(void)setCurrentCGContext:(CGContextRef)arg1 ;
+(id)bezierPathWithRoundedRect:(CGRect)arg1 xRadius:(float)arg2 yRadius:(float)arg3 ;
+(void)strokeRect:(CGRect)arg1 ;
+(void)clipRect:(CGRect)arg1 ;
+(void)strokeLineFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 ;
+(void)drawPackedGlyphs:(const char*)arg1 atPoint:(CGPoint)arg2 ;
+(void)setDefaultMiterLimit:(float)arg1 ;
+(float)defaultMiterLimit;
+(void)setDefaultFlatness:(float)arg1 ;
+(float)defaultFlatness;
+(void)setDefaultWindingRule:(unsigned)arg1 ;
+(unsigned)defaultWindingRule;
+(void)setDefaultLineCapStyle:(unsigned)arg1 ;
+(unsigned)defaultLineCapStyle;
+(void)setDefaultLineJoinStyle:(unsigned)arg1 ;
+(unsigned)defaultLineJoinStyle;
+(void)setDefaultLineWidth:(float)arg1 ;
+(float)defaultLineWidth;
+(void)drawString:(id)arg1 atPoint:(CGPoint)arg2 withFontName:(id)arg3 andHeight:(float)arg4 color:(id)arg5 alignToTop:(BOOL)arg6 currentTransformStruct:(CGAffineTransform)arg7 ;
-(void)dealloc;
-(CGRect)bounds;
-(id)init;
-(id)description;
-(void)moveToPoint:(CGPoint)arg1 ;
-(void)closePath;
-(void)addClip;
-(id)copyWithZone:(NSZoneRef)arg1 ;
-(void)removeAllPoints;
-(id)bezierPathByReversingPath;
-(BOOL)isEmpty;
-(CGPoint)currentPoint;
-(BOOL)containsPoint:(CGPoint)arg1 ;
-(void)setLineDash:(const float*)arg1 count:(int)arg2 phase:(float)arg3 ;
-(void)getLineDash:(float*)arg1 count:(int*)arg2 phase:(float*)arg3 ;
-(void)fill;
-(void)stroke;
-(void)lineToPoint:(CGPoint)arg1 ;
-(void)appendBezierPath:(id)arg1 ;
-(void)appendBezierPathWithRect:(CGRect)arg1 ;
-(void)appendBezierPathWithOvalInRect:(CGRect)arg1 ;
-(void)appendBezierPathWithArcWithCenter:(CGPoint)arg1 radius:(float)arg2 startAngle:(float)arg3 endAngle:(float)arg4 clockwise:(BOOL)arg5 ;
-(float)lineWidth;
-(void)setLineWidth:(float)arg1 ;
-(unsigned)lineCapStyle;
-(void)setLineCapStyle:(unsigned)arg1 ;
-(unsigned)lineJoinStyle;
-(void)setLineJoinStyle:(unsigned)arg1 ;
-(float)miterLimit;
-(void)setMiterLimit:(float)arg1 ;
-(float)flatness;
-(void)setFlatness:(float)arg1 ;
-(id).cxx_construct;
-(int)elementCount;
-(unsigned)elementAtIndex:(int)arg1 ;
-(void)appendBezierPathWithRoundedRect:(CGRect)arg1 xRadius:(float)arg2 yRadius:(float)arg3 ;
-(unsigned)windingRule;
-(void)setWindingRule:(unsigned)arg1 ;
-(void)_deviceMoveToPoint:(CGPoint)arg1 ;
-(void)_deviceLineToPoint:(CGPoint)arg1 ;
-(void)_deviceCurveToPoint:(CGPoint)arg1 controlPoint1:(CGPoint)arg2 controlPoint2:(CGPoint)arg3 ;
-(void)_deviceClosePath;
-(unsigned)elementAtIndex:(int)arg1 associatedPoints:(CGPoint*)arg2 ;
-(void)_doUserPathWithOp:(unsigned char)arg1 inContext:(CGContextRef)arg2 ;
-(void)subdivideBezierWithFlatness:(float)arg1 startPoint:(CGPoint)arg2 controlPoint1:(CGPoint)arg3 controlPoint2:(CGPoint)arg4 endPoint:(CGPoint)arg5 ;
-(void)flattenIntoPath:(id)arg1 ;
-(void)_doPath;
-(CGRect)controlPointBounds;
-(int)_segmentIndexForElementIndex:(int)arg1 ;
-(void)appendBezierPathWithArcWithCenter:(CGPoint)arg1 radius:(float)arg2 startAngle:(float)arg3 endAngle:(float)arg4 ;
-(void)transformUsingAffineTransform:(id)arg1 ;
-(void)_appendArcSegmentWithCenter:(CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4 ;
-(void)curveToPoint:(CGPoint)arg1 controlPoint1:(CGPoint)arg2 controlPoint2:(CGPoint)arg3 ;
-(id)_copyFlattenedPath;
-(void)relativeMoveToPoint:(CGPoint)arg1 ;
-(void)relativeLineToPoint:(CGPoint)arg1 ;
-(void)relativeCurveToPoint:(CGPoint)arg1 controlPoint1:(CGPoint)arg2 controlPoint2:(CGPoint)arg3 ;
-(void)setClip;
-(id)bezierPathByFlatteningPath;
-(void)setAssociatedPoints:(CGPoint*)arg1 atIndex:(int)arg2 ;
-(void)appendBezierPathWithPoints:(CGPoint*)arg1 count:(int)arg2 ;
-(void)appendBezierPathWithArcFromPoint:(CGPoint)arg1 toPoint:(CGPoint)arg2 radius:(float)arg3 ;
-(int)_locationOfPoint:(CGPoint)arg1 ;
-(BOOL)isHitByPoint:(CGPoint)arg1 ;
-(BOOL)isHitByRect:(CGRect)arg1 ;
-(BOOL)isHitByPath:(id)arg1 ;
-(BOOL)isStrokeHitByPoint:(CGPoint)arg1 ;
-(BOOL)isStrokeHitByRect:(CGRect)arg1 ;
-(BOOL)isStrokeHitByPath:(id)arg1 ;
-(BOOL)cachesBezierPath;
-(void)setCachesBezierPath:(BOOL)arg1 ;
-(void)_addPathSegment:(int)arg1 point:(CGPoint)arg2 ;
-(void)finalize;
@end

