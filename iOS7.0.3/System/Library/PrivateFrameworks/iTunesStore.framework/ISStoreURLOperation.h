/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:58:39 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <iTunesStore/ISURLOperation.h>

@class NSNumber;

@interface ISStoreURLOperation : ISURLOperation {

	NSNumber* _authenticatedDSID;
	BOOL _canSendGUIDParameter;
	BOOL _ignorePreexistingSecureToken;
	BOOL _needsAuthentication;
	BOOL _needsURLBag;
	BOOL _performsMachineDataActions;
	BOOL _shouldSendXTokenHeader;
	BOOL _urlKnownToBeTrusted;
	BOOL _useUserSpecificURLBag;

}

@property (@dynamic) <ISStoreURLOperationDelegate> * delegate; 
@property (assign) BOOL canSendGUIDParameter; 
@property (assign) BOOL needsURLBag;                                         //@synthesize needsURLBag=_needsURLBag - In the implementation block
@property (assign) BOOL needsAuthentication;                                 //@synthesize needsAuthentication=_needsAuthentication - In the implementation block
@property (assign) BOOL performsMachineDataActions; 
@property (assign) BOOL shouldSendXTokenHeader; 
@property (assign) BOOL useUserSpecificURLBag;                               //@synthesize useUserSpecificURLBag=_useUserSpecificURLBag - In the implementation block
@property (assign) BOOL urlKnownToBeTrusted;                                 //@synthesize urlKnownToBeTrusted=_urlKnownToBeTrusted - In the implementation block
@property (assign,nonatomic) BOOL ignorePreexistingSecureToken; 
@property (retain) NSNumber * authenticatedDSID;                             //@synthesize authenticatedDSID=_authenticatedDSID - In the implementation block
+(void)_addITunesStoreHeadersToRequest:(id)arg1 withURLBag:(id)arg2 accountIdentifier:(id)arg3 ;
+(id)_restrictionsHeaderValue;
+(id)propertyListOperationWithURLBagKey:(id)arg1 ;
+(id)pingOperationWithUrl:(id)arg1 ;
+(void)addITunesStoreHeadersToRequest:(id)arg1 withAccountIdentifier:(id)arg2 ;
+(void)handleITunesStoreResponseHeaders:(id)arg1 withAccountIdentifier:(id)arg2 ;
+(id)itemPingOperationWithIdentifier:(unsigned long long)arg1 urlBagKey:(id)arg2 ;
-(void)dealloc;
-(id)init;
-(void)run;
-(void)handleResponse:(id)arg1 ;
-(void)_setStoreFrontIdentifier:(id)arg1 isTransient:(BOOL)arg2 ;
-(id)_copyAuthenticationContext;
-(BOOL)shouldFollowRedirectWithRequest:(id)arg1 returningError:(id*)arg2 ;
-(BOOL)handleRedirectFromDataProvider:(id)arg1 error:(id*)arg2 ;
-(void)setNeedsURLBag:(BOOL)arg1 ;
-(BOOL)_canSendTokenToURL:(id)arg1 ;
-(id)_copyURLBagContext;
-(BOOL)canSendGUIDParameter;
-(BOOL)shouldSendXTokenHeader;
-(id)_account;
-(id)_copyAuthenticationContextForAttemptNumber:(int)arg1 ;
-(BOOL)_authenticateWithContext:(id)arg1 error:(id*)arg2 ;
-(void)_runURLOperation;
-(BOOL)_isErrorTokenError:(id)arg1 ;
-(void)setIgnorePreexistingSecureToken:(BOOL)arg1 ;
-(BOOL)urlKnownToBeTrusted;
-(BOOL)useUserSpecificURLBag;
-(BOOL)needsURLBag;
-(id)_resolvedURLInBagContext:(id)arg1 URLBag:(id*)arg2 ;
-(void)_addStandardQueryParametersForURL:(id)arg1 ;
-(BOOL)ignorePreexistingSecureToken;
-(BOOL)performsMachineDataActions;
-(void)setCanSendGUIDParameter:(BOOL)arg1 ;
-(void)setPerformsMachineDataActions:(BOOL)arg1 ;
-(void)setShouldSendXTokenHeader:(BOOL)arg1 ;
-(void)setUseUserSpecificURLBag:(BOOL)arg1 ;
-(id)authenticatedAccountDSID;
-(BOOL)needsAuthentication;
-(void)setNeedsAuthentication:(BOOL)arg1 ;
-(void)setUrlKnownToBeTrusted:(BOOL)arg1 ;
-(id)newRequestWithURL:(id)arg1 ;
-(id)authenticatedDSID;
-(void)setAuthenticatedDSID:(id)arg1 ;
@end

