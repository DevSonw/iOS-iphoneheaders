/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:58:38 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/NSOperation.h>

@protocol ISOperationDelegate;
@class NSError, NSLock, NSRunLoop, SSOperationProgress, NSString, NSArray, NSMutableArray;

@interface ISOperation : NSOperation {

	<ISOperationDelegate>* _delegate;
	NSError* _error;
	NSLock* _lock;
	NSRunLoop* _operationRunLoop;
	ISOperation* _parentOperation;
	SSOperationProgress* _progress;
	BOOL _shouldMessageMainThread;
	NSString* _powerAssertionIdentifier;
	NSArray* _serializationLockIdentifiers;
	NSMutableArray* _subOperations;
	BOOL _shouldRunWithBackgroundPriority;
	BOOL _stopped;
	BOOL _success;
	id _threadSafeDelegate;

}

@property (assign) <ISOperationDelegate> * delegate; 
@property (assign) BOOL shouldMessageMainThread; 
@property (retain) NSString * powerAssertionIdentifier;                     //@synthesize powerAssertionIdentifier=_powerAssertionIdentifier - In the implementation block
@property (readonly) NSString * uniqueKey; 
@property (assign) BOOL shouldRunWithBackgroundPriority;                    //@synthesize shouldRunWithBackgroundPriority=_shouldRunWithBackgroundPriority - In the implementation block
@property (retain) NSError * error;                                         //@synthesize error=_error - In the implementation block
@property (assign) BOOL success;                                            //@synthesize success=_success - In the implementation block
@property (readonly) int progressWeight; 
@property (retain) ISOperation * parentOperation;                           //@synthesize parentOperation=_parentOperation - In the implementation block
@property (nonatomic,readonly) SSOperationProgress * progress; 
@property (retain) NSRunLoop * operationRunLoop;                            //@synthesize operationRunLoop=_operationRunLoop - In the implementation block
@property (readonly) id threadSafeDelegate; 
@property (copy) NSArray * serializationLockIdentifiers; 
-(void)setScriptOptions:(id)arg1 ;
-(void)sendCompletionCallback:(id)arg1 ;
-(BOOL)success;
-(void)setError:(id)arg1 ;
-(id)uniqueKey;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(void)lock;
-(void)unlock;
-(void)cancel;
-(void)run;
-(void)main;
-(id)progress;
-(id)error;
-(void)_keepAliveTimer:(id)arg1 ;
-(void)setParentOperation:(id)arg1 ;
-(void)_addSubOperation:(id)arg1 ;
-(void)dispatchCompletionBlock;
-(void)_removeSubOperation:(id)arg1 ;
-(BOOL)stopRunLoop;
-(id)operationRunLoop;
-(BOOL)shouldFailAfterUniquePredecessorError:(id)arg1 ;
-(id)powerAssertionIdentifier;
-(BOOL)shouldRunWithBackgroundPriority;
-(void)_main:(BOOL)arg1 ;
-(void)_failAfterException;
-(id)parentOperation;
-(id)copyActivePowerAssertionIdentifiers;
-(id)serializationLockIdentifiers;
-(void)_sendErrorToDelegate:(id)arg1 ;
-(void)setOperationRunLoop:(id)arg1 ;
-(void)sendProgressToDelegate;
-(void)_sendWillStartToDelegate;
-(void)run:(BOOL)arg1 ;
-(void)_sendSuccessToDelegate;
-(int)progressWeight;
-(long)runRunLoopUntilStopped;
-(BOOL)runSubOperation:(id)arg1 onQueue:(id)arg2 error:(id*)arg3 ;
-(BOOL)shouldMessageMainThread;
-(id)copySerializationLocks;
-(void)releasePowerAssertionsDuringBlock:(/*^block*/ id)arg1 ;
-(void)sendDidTakeSerializationLocks;
-(void)setSerializationLockIdentifiers:(id)arg1 ;
-(void)setPowerAssertionIdentifier:(id)arg1 ;
-(void)setShouldRunWithBackgroundPriority:(BOOL)arg1 ;
-(id)loadedURLBagWithContext:(id)arg1 returningError:(id*)arg2 ;
-(BOOL)copyAccountID:(id*)arg1 byAuthenticatingWithContext:(id)arg2 returningError:(id*)arg3 ;
-(BOOL)loadSoftwareMapReturningError:(id*)arg1 ;
-(void)setShouldMessageMainThread:(BOOL)arg1 ;
-(id)threadSafeDelegate;
-(id)authenticatedAccountDSID;
-(BOOL)loadURLBagWithContext:(id)arg1 returningError:(id*)arg2 ;
-(void)setSuccess:(BOOL)arg1 ;
-(BOOL)runSubOperation:(id)arg1 returningError:(id*)arg2 ;
@end

