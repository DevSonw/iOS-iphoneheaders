/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:07:24 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/MediaRemote.framework/Support/mediaremoted
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <mediaremoted/mediaremoted-Structs.h>
@class TRConnection, NSTimer, NSObject, CTCallCenter, NSMutableDictionary, NSMapTable, MRMediaRemoteClient, NSMutableSet;

@interface MRMediaRemoteServer : NSObject {

	TRConnection* _activeConnection;
	TRConnection* _activeConnectionBeforeInterruption;
	MROriginRef _activeOrigin;
	MROriginRef _activeOriginBeforeInterruption;
	BOOL _activeOriginBeforeInterruptionShouldResume;
	NSTimer* _activeBeforeInterruptionInvalidationTimer;
	NSObject<OS_dispatch_queue>* _queue;
	NSObject<OS_dispatch_queue>* _nowPlayingQueue;
	CTCallCenter* _callCenter;
	NSMutableDictionary* _clientStateForPIDs;
	BOOL _ignoreNextAuthenticationFailurePortStatus;
	int _nowPlayingApplicationDidChangeToken;
	int _nowPlayingApplicationIsPlayingDidChangeToken;
	NSMapTable* _nowPlayingInfoClientsForTouchRemoteOrigins;
	NSMutableDictionary* _nowPlayingInfoClientsForPIDs;
	unsigned _originDiscoveryCount;
	MRMediaRemoteClient* _overrideClient;
	unsigned _routeDiscoveryCount;
	NSMutableSet* _runAssertions;
	int _relaunchedNowPlayingAppPid;
	int _delayedPlayCommandToRelaunchedAppAttempts;

}

@property (nonatomic,retain) MRMediaRemoteClient * overrideClient;              //@synthesize overrideClient=_overrideClient - In the implementation block
+(id)server;
-(void)_invalidateClient:(id)arg1 ;
-(void)_nowPlayingAppDidChangeNotification:(id)arg1 ;
-(id)addRunAssertionWithName:(id)arg1 ;
-(void)removeRunAssertion:(id)arg1 ;
-(void)_unregisterAVSystemControllerNotifications;
-(void)_currentRouteHasVolumeControlDidChangeNotification:(id)arg1 ;
-(void)_nowPlayingAppIsPlayingDidChangeNotification:(id)arg1 ;
-(void)_avSystemControllerServerDiedNotification:(id)arg1 ;
-(void)_setActiveConnectionBeforeInterruption:(id)arg1 ;
-(void)_setActiveOriginBeforeInterruption:(MROriginRef)arg1 ;
-(void)_activeBeforeInterruptionInvalidationTimerAction:(id)arg1 ;
-(BOOL)nowPlayingClientIsPlaying;
-(void)_sendTouchRemoteCommand:(unsigned)arg1 routeUID:(id)arg2 optionsData:(id)arg3 ;
-(void)setActiveOrigin:(MROriginRef)arg1 ;
-(void)_setActiveConnection:(id)arg1 ;
-(void)_clearActiveBeforeInterruptionInformation;
-(void)_registerAVSystemControllerNotifications;
-(void)_postAvailableOriginsDidChange;
-(void)removeClientForPID:(int)arg1 ;
-(void)setOverrideClient:(id)arg1 ;
-(void)_postNowPlayingApplicationDidChange;
-(void)_postNowPlayingAppIsPlayingDidChange;
-(void)removeTouchRemoteNowPlayingInfoClientForOrigin:(MROriginRef)arg1 ;
-(MROriginRef)activeOrigin;
-(void)removeLocalNowPlayingInfoClientForPID:(int)arg1 ;
-(void)_ignorePortStatusTimeout;
-(id)_mediaRemoteNowPlayingInfoFromTouchRemoteNowPlayingInfo:(id)arg1 ;
-(void)_updateActiveConnectionBeforeInterruptionShouldResumeWithNewNowPlayingInfo:(id)arg1 ;
-(void)setNowPlayingInfo:(id)arg1 forOrigin:(MROriginRef)arg2 pid:(int)arg3 withArtworkData:(id)arg4 mergePolicy:(unsigned char)arg5 ;
-(id)existingTouchRemoteNowPlayingInfoClientForOrigin:(MROriginRef)arg1 ;
-(void)_setTouchRemoteNowPlayingInfo:(id)arg1 forOrigin:(MROriginRef)arg2 ;
-(int)localNowPlayingPIDForNowPlayingInfo;
-(id)existingLocalNowPlayingInfoClientForPID:(int)arg1 ;
-(id)touchRemoteNowPlayingInfoClientForOrigin:(MROriginRef)arg1 ;
-(id)localNowPlayingInfoClientForPID:(int)arg1 ;
-(id)existingNowPlayingInfoClientForOrigin:(MROriginRef)arg1 pid:(int)arg2 ;
-(id)nowPlayingInfoClientForOrigin:(MROriginRef)arg1 pid:(int)arg2 ;
-(void)removeNowPlayingInfoClientForOrigin:(MROriginRef)arg1 pid:(int)arg2 ;
-(void)_postNowPlayingInfoDidChangeNotification;
-(void)_postNowPlayingInfoDidChangeNotificationForOrigin:(MROriginRef)arg1 ;
-(void)_clientInvalidatedNotification:(id)arg1 ;
-(void)_nowPlayingInfoClientDidInvalidateNotification:(id)arg1 ;
-(void)_audioSessionInterruptionNotification:(id)arg1 ;
-(void)_browserDidFindServiceNotification:(id)arg1 ;
-(void)_XPCServerDidAcceptClientConnectionNotification:(id)arg1 ;
-(void)_sendCommand:(unsigned)arg1 routeUID:(id)arg2 optionsData:(id)arg3 ;
-(void)_postActiveOriginDidChange;
-(int)localNowPlayingPID;
-(id)activeNowPlayingInfoClient;
-(BOOL)localNowPlayingApplicationIsPlaying;
-(void)_sendLocalCommand:(unsigned)arg1 routeUID:(id)arg2 optionsData:(id)arg3 ;
-(unsigned)_translatedCommandForContextualCommand:(unsigned)arg1 ;
-(BOOL)_isValidAVRCPCommand:(unsigned)arg1 ;
-(void)_pickRouteWithUID:(id)arg1 ;
-(id)localNowPlayingClient;
-(id)iPodClient;
-(void)_cancelProcessAssertionForClient:(id)arg1 ;
-(void)_delayedSendPlayCommandToRelaunchedApp;
-(void)_connection:(id)arg1 didReceiveNowPlayingInfoUpdatePacketEvent:(id)arg2 ;
-(void)_connection:(id)arg1 didReceiveNowPlayingArtworkUpdatePacketEvent:(id)arg2 ;
-(id)availableOrigins;
-(void)setPickedRoute:(id)arg1 withPassword:(id)arg2 options:(unsigned)arg3 ;
-(BOOL)_routeIsActiveWithUID:(id)arg1 ;
-(id)overrideClient;
-(void)_portStatusDidChangeNotification:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)_init;
-(id)allClients;
-(id)pickableRoutesForCategory:(id)arg1 ;
-(void)addClient:(id)arg1 ;
-(id)clientForPID:(int)arg1 ;
-(void)beginOriginDiscovery;
-(void)endOriginDiscovery;
-(void)beginRouteDiscovery;
-(void)endRouteDiscovery;
-(void)_pickableRoutesDidChangeNotification:(id)arg1 ;
-(void)_XPCServerDidInvalidateClientConnectionNotification:(id)arg1 ;
-(void)_connectionDidCloseNotification:(id)arg1 ;
-(void)_browserDidRemoveServiceNotification:(id)arg1 ;
@end

