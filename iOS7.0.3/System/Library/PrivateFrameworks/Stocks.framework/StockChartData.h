/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:57:26 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/Stocks.framework/Stocks
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


#import <Stocks/Stocks-Structs.h>
@class StockGraphImageSet, NSArray, Stock, NSDate, NSTimeZone;

@interface StockChartData : NSObject {

	StockGraphImageSet* _graphImageSets[2];
	NSArray* _labelInfoArrays[4];
	int _labelAlignments[2];
	BOOL _isUnavailable;
	BOOL _hasVolume;
	Stock* _stock;
	int _chartInterval;
	SCD_Struct_St0* _stockValues;
	unsigned _stockValueCount;
	NSArray* _interestingIndexes;
	NSDate* _marketOpenDate;
	NSDate* _marketCloseDate;
	NSTimeZone* _marketTimeZone;
	SCD_Struct_St0* _minValue;
	SCD_Struct_St0* _maxValue;
	int _yAxisFractionDigits;
	double _expirationTime;

}

@property (assign,nonatomic,__weak) Stock * stock;                      //@synthesize stock=_stock - In the implementation block
@property (assign,nonatomic) int chartInterval;                         //@synthesize chartInterval=_chartInterval - In the implementation block
@property (readonly) SCD_Struct_St0* stockValues;                       //@synthesize stockValues=_stockValues - In the implementation block
@property (readonly) unsigned stockValueCount;                          //@synthesize stockValueCount=_stockValueCount - In the implementation block
@property (nonatomic,retain) NSArray * interestingIndexes;              //@synthesize interestingIndexes=_interestingIndexes - In the implementation block
@property (nonatomic,retain) NSDate * marketOpenDate;                   //@synthesize marketOpenDate=_marketOpenDate - In the implementation block
@property (nonatomic,retain) NSDate * marketCloseDate;                  //@synthesize marketCloseDate=_marketCloseDate - In the implementation block
@property (nonatomic,retain) NSTimeZone * marketTimeZone;               //@synthesize marketTimeZone=_marketTimeZone - In the implementation block
@property (assign,nonatomic) SCD_Struct_St0* minValue;                  //@synthesize minValue=_minValue - In the implementation block
@property (assign,nonatomic) SCD_Struct_St0* maxValue;                  //@synthesize maxValue=_maxValue - In the implementation block
@property (assign,nonatomic) double expirationTime;                     //@synthesize expirationTime=_expirationTime - In the implementation block
@property (assign,nonatomic) BOOL isUnavailable;                        //@synthesize isUnavailable=_isUnavailable - In the implementation block
@property (assign,nonatomic) BOOL hasVolume;                            //@synthesize hasVolume=_hasVolume - In the implementation block
@property (assign,nonatomic) int yAxisFractionDigits;                   //@synthesize yAxisFractionDigits=_yAxisFractionDigits - In the implementation block
-(void)dealloc;
-(id)description;
-(SCD_Struct_St0*)minValue;
-(void)setMaxValue:(SCD_Struct_St0*)arg1 ;
-(void)setMinValue:(SCD_Struct_St0*)arg1 ;
-(SCD_Struct_St0*)maxValue;
-(void)setStock:(id)arg1 ;
-(id)imageSetForStockGraphSize:(int)arg1 ;
-(id)stock;
-(id)initWithStock:(id)arg1 interval:(int)arg2 ;
-(SCD_Struct_St0*)allocateStockValuesWithCount:(unsigned)arg1 ;
-(void)setImageSet:(id)arg1 forStockGraphSize:(int)arg2 ;
-(void)clearAllImageSets;
-(id)labelInfoArrayForYAxis:(BOOL)arg1 detailedMode:(BOOL)arg2 ;
-(void)setLabelInfoArray:(id)arg1 forYAxis:(BOOL)arg2 detailedMode:(BOOL)arg3 ;
-(int)labelAlignmentForDetailedMode:(BOOL)arg1 ;
-(void)setLabelAlignment:(int)arg1 forDetailedMode:(BOOL)arg2 ;
-(int)chartInterval;
-(void)setChartInterval:(int)arg1 ;
-(SCD_Struct_St0*)stockValues;
-(unsigned)stockValueCount;
-(id)interestingIndexes;
-(void)setInterestingIndexes:(id)arg1 ;
-(id)marketOpenDate;
-(void)setMarketOpenDate:(id)arg1 ;
-(id)marketCloseDate;
-(void)setMarketCloseDate:(id)arg1 ;
-(id)marketTimeZone;
-(void)setMarketTimeZone:(id)arg1 ;
-(BOOL)isUnavailable;
-(void)setIsUnavailable:(BOOL)arg1 ;
-(BOOL)hasVolume;
-(void)setHasVolume:(BOOL)arg1 ;
-(int)yAxisFractionDigits;
-(void)setYAxisFractionDigits:(int)arg1 ;
-(void).cxx_destruct;
-(void)setExpirationTime:(double)arg1 ;
-(double)expirationTime;
@end

