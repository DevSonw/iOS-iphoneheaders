/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:55:48 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <MobileTimer/MobileTimer-Structs.h>
#import <UIKit/UIView.h>
#import <MobileTimer/Clock.h>

@protocol HandView;
@class UIImage, UIImageView, UIView, NSDate, NSCalendar, NSTimeZone;

@interface AnalogClockView : UIView <Clock> {

	int _runMode;
	UIImage* _faceDayImage;
	UIImage* _faceNightImage;
	UIImageView* _faceView;
	UIView<HandView>* _dayHands[3];
	UIView<HandView>* _nightHands[3];
	UIImageView* _middleDotDay;
	UIImageView* _middleDotNight;
	UIImageView* _middleRedDot;
	NSDate* _time;
	BOOL _nighttime;
	double _seconds;
	int _flutterIndex;
	BOOL _isRenderStateStale;
	NSCalendar* _calendar;
	BOOL _minuteHourAnimationTriggered;

}

@property (assign,nonatomic) int runMode;                                      //@synthesize runMode=_runMode - In the implementation block
@property (nonatomic,readonly) int style; 
@property (nonatomic,readonly) UIImageView * faceView;                         //@synthesize faceView=_faceView - In the implementation block
@property (nonatomic,readonly) int hour; 
@property (nonatomic,readonly) int minute; 
@property (nonatomic,retain) NSDate * time;                                    //@synthesize time=_time - In the implementation block
@property (nonatomic,retain) NSTimeZone * timeZone; 
@property (getter=isNighttime,nonatomic,readonly) BOOL nighttime;              //@synthesize nighttime=_nighttime - In the implementation block
@property (getter=isStarted,nonatomic,readonly) BOOL started; 
+(id)resourcePath;
+(UIEdgeInsets)shadowInsets;
+(void)initialize;
+(int)style;
+(id)imageInBundleForName:(id)arg1 ;
+(float)faceRadius;
+(BOOL)doesFaceHaveShadow;
+(CGPoint)handRotationalCenterForHand:(int)arg1 ;
+(BOOL)shouldCacheImageOnDiskForType:(int)arg1 dayTime:(BOOL)arg2 ;
+(id)makeClockFaceForDaytime:(BOOL)arg1 ;
+(id)makeClockHand:(int)arg1 daytime:(BOOL)arg2 ;
+(id)overHourHandDotImageForDaytime:(BOOL)arg1 ;
+(id)makeOverSecondHandDotImage;
+(float)numeralInset;
+(id)analogClockWithStyle:(int)arg1 ;
+(void)registerClock:(id)arg1 ;
+(void)unregisterClock:(id)arg1 ;
+(id)cacheTopLevelPath;
+(id)cacheVersionHash;
+(void)updateFlutterForAllTicking;
+(void)registerTickingClock:(id)arg1 ;
+(void)registerSweepingClock:(id)arg1 ;
+(void)updateTimeForAllTicking;
+(void)updateTimeForAllSweeping;
+(void)unregisterTickingClock:(id)arg1 ;
+(void)unregisterSweepingClock:(id)arg1 ;
+(Class)classForStyle:(int)arg1 ;
+(CGSize)clockSize;
+(id)cacheVersionedPath;
+(id)imageCacheNameForType:(int)arg1 daytime:(BOOL)arg2 ;
+(id)dayTimeFaceColor;
+(id)dayTimeTextColor;
+(id)nightTimeFaceColor;
+(id)nightTimeTextColor;
+(ShadowInfo)shadowInfoAtIndex:(unsigned)arg1 ;
+(id)numeralFont;
+(void)adjustNumberalCenter:(CGPoint*)arg1 forNumeralIndex:(int)arg2 ;
+(id)imageForType:(int)arg1 dayTime:(BOOL)arg2 generation:(/*^block*/ id)arg3 ;
+(float)overHourHandDotSize;
+(id)dayTimeOverHourHandDotColor;
+(id)nightTimeOverHourHandDotColor;
+(id)makeDotImageSize:(float)arg1 color:(id)arg2 ;
+(float)overSecondHandDotSize;
+(id)clockFaceForDaytime:(BOOL)arg1 ;
+(id)clockHand:(int)arg1 daytime:(BOOL)arg2 ;
+(BOOL)hasOverHourHandDot;
+(id)overHourHandDotForDayTime:(BOOL)arg1 ;
+(BOOL)hasOverSecondHandDot;
+(id)overSecondHandDotImage;
+(BOOL)isClockRegistered:(id)arg1 ;
+(CGSize)sizeForStyle:(int)arg1 ;
+(UIEdgeInsets)insetsForStyle:(int)arg1 ;
+(id)overSecondHandDotColor;
+(CGPoint)shadowRotationalCenterForHand:(int)arg1 ;
-(void)dealloc;
-(id)init;
-(void)setFrame:(CGRect)arg1 ;
-(void)setTimeZone:(id)arg1 ;
-(int)style;
-(CGSize)intrinsicContentSize;
-(int)hour;
-(void)setTime:(id)arg1 ;
-(id)time;
-(void)start;
-(double)updateInterval;
-(id)timeZone;
-(int)minute;
-(void)stop;
-(BOOL)isStarted;
-(double)coarseUpdateInterval;
-(void)setRunMode:(int)arg1 ;
-(void)updateFlutter;
-(void)updateTimeContinuously:(int)arg1 ;
-(int)runMode;
-(void)setHandTransformForHandIndex:(int)arg1 ;
-(void)setHandAngle:(float)arg1 forHandIndex:(int)arg2 ;
-(void)updateTimeAnimated:(BOOL)arg1 ;
-(void)setTime:(id)arg1 animated:(BOOL)arg2 ;
-(void)setNighttime:(BOOL)arg1 ;
-(id)faceView;
-(BOOL)isNighttime;
-(void)updateTime;
@end

