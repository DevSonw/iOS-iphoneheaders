/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:55:40 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/MediaStream.framework/MediaStream
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol MSPowerBudgetDelegate, OS_dispatch_queue;
@class NSString, MSPBTimerContext, NSObject;

@interface MSPowerBudget : NSObject {

	BOOL _workQueueIsFileTransferAllowed;
	BOOL _workQueueIsExternalPowered;
	BOOL _workQueueIsForeground;
	<MSPowerBudgetDelegate>* _delegate;
	NSString* _focusAlbumGUID;
	NSString* _focusAssetCollectionGUID;
	NSString* _personID;
	MSPBTimerContext* _workQueuePushTimerContext;
	MSPBTimerContext* _workQueuePostForegroundTimerContext;
	MSPBTimerContext* _workQueueGlobalResetSyncTimerContext;
	NSObject<OS_dispatch_queue>* _workQueue;
	double _maxActiveTimeAfterPush;
	double _maxActiveTimeAfterLossOfForeground;
	double _maxActiveTimeAfterGlobalResetSync;

}

@property (assign,nonatomic,__weak) <MSPowerBudgetDelegate> * delegate;                                                //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) double maxActiveTimeAfterPush;                                                            //@synthesize maxActiveTimeAfterPush=_maxActiveTimeAfterPush - In the implementation block
@property (assign,nonatomic) double maxActiveTimeAfterLossOfForeground;                                                //@synthesize maxActiveTimeAfterLossOfForeground=_maxActiveTimeAfterLossOfForeground - In the implementation block
@property (assign,nonatomic) double maxActiveTimeAfterGlobalResetSync;                                                 //@synthesize maxActiveTimeAfterGlobalResetSync=_maxActiveTimeAfterGlobalResetSync - In the implementation block
@property (nonatomic,retain) NSString * focusAlbumGUID;                                                                //@synthesize focusAlbumGUID=_focusAlbumGUID - In the implementation block
@property (nonatomic,retain) NSString * focusAssetCollectionGUID;                                                      //@synthesize focusAssetCollectionGUID=_focusAssetCollectionGUID - In the implementation block
@property (nonatomic,retain) NSString * personID;                                                                      //@synthesize personID=_personID - In the implementation block
@property (getter=isFileTransferAllowed,nonatomic,readonly) BOOL fileTransferAllowed; 
@property (getter=hasForegroundFocus,nonatomic,readonly) BOOL foregroundFocus; 
@property (nonatomic,readonly) BOOL hasActiveTimers; 
@property (assign,setter=workQueueSetFileTransferAllowed:,nonatomic) BOOL workQueueIsFileTransferAllowed;              //@synthesize workQueueIsFileTransferAllowed=_workQueueIsFileTransferAllowed - In the implementation block
@property (assign,setter=workQueueSetExternalPowered:,nonatomic) BOOL workQueueIsExternalPowered;                      //@synthesize workQueueIsExternalPowered=_workQueueIsExternalPowered - In the implementation block
@property (assign,setter=workQueueSetForeground:,nonatomic) BOOL workQueueIsForeground;                                //@synthesize workQueueIsForeground=_workQueueIsForeground - In the implementation block
@property (nonatomic,retain) MSPBTimerContext * workQueuePushTimerContext;                                             //@synthesize workQueuePushTimerContext=_workQueuePushTimerContext - In the implementation block
@property (nonatomic,retain) MSPBTimerContext * workQueuePostForegroundTimerContext;                                   //@synthesize workQueuePostForegroundTimerContext=_workQueuePostForegroundTimerContext - In the implementation block
@property (nonatomic,retain) MSPBTimerContext * workQueueGlobalResetSyncTimerContext;                                  //@synthesize workQueueGlobalResetSyncTimerContext=_workQueueGlobalResetSyncTimerContext - In the implementation block
@property (nonatomic,retain) NSObject<OS_dispatch_queue> * workQueue;                                                  //@synthesize workQueue=_workQueue - In the implementation block
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(id)workQueue;
-(void)setFocusAlbumGUID:(id)arg1 ;
-(void)setFocusAssetCollectionGUID:(id)arg1 ;
-(void)shutDown;
-(id)focusAssetCollectionGUID;
-(void)setWorkQueue:(id)arg1 ;
-(id)focusAlbumGUID;
-(void)workQueueSetPushTimerDate:(id)arg1 ;
-(void)workQueueSetPostForegroundTimerDate:(id)arg1 ;
-(void)workQueueSetGlobalResetSyncTimerDate:(id)arg1 ;
-(void)workQueueRecomputeFileTransferAllowed;
-(id)workQueuePushTimerContext;
-(void)setWorkQueuePushTimerContext:(id)arg1 ;
-(void)workQueueCommitPersistedValues;
-(id)workQueuePostForegroundTimerContext;
-(void)setWorkQueuePostForegroundTimerContext:(id)arg1 ;
-(id)workQueueGlobalResetSyncTimerContext;
-(void)setWorkQueueGlobalResetSyncTimerContext:(id)arg1 ;
-(BOOL)workQueueIsExternalPowered;
-(BOOL)workQueueIsForeground;
-(void)setIsFileTransferAllowed:(BOOL)arg1 ;
-(double)workQueueMaxActiveTimeAfterPush;
-(void)workQueueSetForeground:(BOOL)arg1 ;
-(double)workQueueMaxActiveTimeAfterLossOfForeground;
-(double)workQueueMaxActiveTimeAfterGlobalResetSync;
-(void)workQueueSetExternalPowered:(BOOL)arg1 ;
-(double)maxActiveTimeAfterPush;
-(void)setMaxActiveTimeAfterPush:(double)arg1 ;
-(double)maxActiveTimeAfterGlobalResetSync;
-(void)setMaxActiveTimeAfterGlobalResetSync:(double)arg1 ;
-(double)maxActiveTimeAfterLossOfForeground;
-(void)setMaxActiveTimeAfterLossOfForeground:(double)arg1 ;
-(BOOL)isFileTransferAllowed;
-(BOOL)hasForegroundFocus;
-(BOOL)hasActiveTimers;
-(void)workQueueSetIsFileTransferAllowed:(BOOL)arg1 ;
-(void)didReceivePushNotification;
-(void)didBeginForegroundFocus;
-(void)didEndForegroundFocus;
-(void)didReceiveGlobalResetSync;
-(void)didBeginExternalPower;
-(void)didEndExternalPower;
-(void)_postForegroundTimerDidExpire:(id)arg1 ;
-(void)_globalResetSyncTimerDidExpire:(id)arg1 ;
-(BOOL)workQueueIsFileTransferAllowed;
-(void)workQueueSetFileTransferAllowed:(BOOL)arg1 ;
-(id)personID;
-(void)setPersonID:(id)arg1 ;
-(void).cxx_destruct;
@end

