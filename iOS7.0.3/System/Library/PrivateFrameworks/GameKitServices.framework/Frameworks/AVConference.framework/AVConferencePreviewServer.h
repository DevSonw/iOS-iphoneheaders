/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:55:02 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_source, OS_dispatch_queue, VideoCaptureProtocol, AVConferencePreviewDelegate;
#import <AVConference/AVConference-Structs.h>
@class NSObject, NSMutableArray, VideoAttributes, CALayer;

@interface AVConferencePreviewServer : NSObject {

	int currentWidth;
	int currentHeight;
	int currentFrameRate;
	int previewFrameCount;
	int captureFrameCount;
	int encodedFrameCount;
	NSObject<OS_dispatch_source>* cameraHealthMonitor;
	int pendingWidth;
	int pendingHeight;
	int pendingFrameRate;
	unsigned currentCameraID;
	BOOL firstPreviewFrame;
	CAImageQueueRef localCAImageQueue;
	OpaqueFigImageQueueRef localVideoImageQueue;
	CAImageQueueRef localCAImageQueueBack;
	OpaqueFigImageQueueRef localVideoImageQueueBack;
	NSMutableArray* activeConferences;
	NSMutableArray* inactiveConferences;
	VideoAttributes* localVideoAttributes;
	CGSize localScreenPortraitAspectRatio;
	CGSize localScreenLandscapeAspectRatio;
	CGSize localExpectedPortraitAspectRatio;
	CGSize localExpectedLandscapeAspectRatio;
	NSObject<OS_dispatch_queue>* avConferencePreviewServerQueue;
	NSObject<OS_dispatch_queue>* avConferencePreviewServerConferenceQueue;
	NSObject<OS_dispatch_queue>* avConferencePreviewServerNotificationQueue;
	NSObject<OS_dispatch_queue>* avConferencePreviewServerVariablesQueue;
	NSObject<VideoCaptureProtocol>* avCapture;
	int localVideoSlot;
	int localVideoSlotBack;
	OpaqueVTPixelTransferSessionRef transferSession;
	CVPixelBufferPoolRef bufferPool;
	BOOL resize;
	CALayer* localVideoLayer;
	NSObject<AVConferencePreviewDelegate>* appDelegate;
	double falteredRenderingtimeStamp;

}

@property (nonatomic,retain) NSObject<AVConferencePreviewDelegate> * appDelegate; 
+(id)AVConferencePreviewServerSingleton;
-(oneway void)release;
-(id)retain;
-(void)dealloc;
-(id)init;
-(id)autorelease;
-(unsigned)retainCount;
-(id)allocWithZone:(NSZoneRef)arg1 ;
-(id)copyWithZone:(NSZoneRef)arg1 ;
-(id)localScreenAttributesForVideoAttributes:(id)arg1 ;
-(BOOL)setLocalScreenAttributes:(id)arg1 ;
-(CGSize)localScreenRatioForScreenOrientation:(int)arg1 ;
-(CGSize)localExpectedRatioForScreenOrientation:(int)arg1 ;
-(id)drawingContext;
-(BOOL)setFrameRatePercentage:(id)arg1 percentage:(double)arg2 ;
-(BOOL)registerForFrames:(id)arg1 width:(int)arg2 height:(int)arg3 frameRate:(int)arg4 unpausing:(BOOL)arg5 ;
-(BOOL)deregisterForFrames:(id)arg1 ;
-(void)setCaptureWidth:(int)arg1 height:(int)arg2 rate:(int)arg3 ;
-(id)localVideoAttributes;
-(BOOL)captureVideoWidth:(int*)arg1 height:(int*)arg2 frameRate:(int*)arg3 ;
-(void)startCaptureWithWidth:(int)arg1 height:(int)arg2 frameRate:(int)arg3 unpausing:(BOOL)arg4 ;
-(void)pausePreview;
-(void)stopPreview;
-(BOOL)setLocalVideoAttributes:(id)arg1 ;
-(int)localVideoSlot:(BOOL)arg1 ;
-(BOOL)isRunningPreview;
-(void)beginPreviewToPIPAnimation;
-(void)endPreviewToPIPAnimation;
-(void)beginPIPToPreviewAnimation;
-(void)endPIPToPreviewAnimation;
-(CVBufferRef)resizeFrame:(CVBufferRef)arg1 ;
-(BOOL)enqueueFrameToQueueFront:(BOOL)arg1 frame:(CVBufferRef)arg2 frameTime:(SCD_Struct_VC18)arg3 ;
-(void)previewVideoWidth:(int*)arg1 height:(int*)arg2 frameRate:(int*)arg3 ;
-(void)stopCapture;
-(void)handleAVCaptureError:(long)arg1 error:(id)arg2 ;
-(void)changeCameraToPendingSettingsWithReset:(BOOL)arg1 ;
-(void)resetCameraToPreviewSettingsForced:(BOOL)arg1 ;
-(void)reconnectClientLayerFront:(BOOL)arg1 ;
-(long)createVideoCaptureWithWidth:(int)arg1 height:(int)arg2 frameRate:(int)arg3 useBackFacingCamera:(BOOL)arg4 ;
-(void)disconnectClientLayers;
-(void)startPreviewUnpausing:(BOOL)arg1 ;
-(void)setCaptureWidth:(int)arg1 height:(int)arg2 rate:(int)arg3 forced:(BOOL)arg4 ;
-(BOOL)onCaptureFrame:(CVBufferRef)arg1 frameTime:(SCD_Struct_VC18)arg2 preview:(BOOL)arg3 isSwitching:(BOOL)arg4 cameraType:(int)arg5 ;
-(CFDictionaryRef)copyCameraColorInfo;
-(BOOL)registerForFrames:(id)arg1 unpausing:(BOOL)arg2 ;
-(BOOL)isConferenceRegisteredForFrames:(id)arg1 ;
-(id)copyLocalVideoAttributes;
-(id)copyLocalScreenAttributesForVideoAttributes:(id)arg1 ;
-(BOOL)setCaptureCamera:(unsigned)arg1 ;
-(unsigned)captureCamera;
-(BOOL)setLocalVideoLayer:(id)arg1 ;
-(id)localVideoLayer;
-(id)appDelegate;
-(void)setAppDelegate:(id)arg1 ;
@end

