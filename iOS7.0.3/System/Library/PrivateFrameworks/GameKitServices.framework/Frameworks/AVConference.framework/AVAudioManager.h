/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:55:02 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <AVConference/AVConference-Structs.h>
@class NSDictionary, NSObject, AVAudioDevice, NSNumber, NSString, NSMutableArray;

@interface AVAudioManager : NSObject {

	int direction;
	int audioRefCount;
	int connectionRefCount;
	int internalBlockSize;
	int hardwareSampleRate;
	AudioStreamBasicDescription vpioFormat;
	BOOL usingFloat;
	BOOL isGKVoiceChat;
	BOOL enableSpeakerPhone;
	BOOL isUsingSuppression;
	BOOL isTetheredDisplayMode;
	BOOL shouldSetupAudioSession;
	int clientPID;
	NSDictionary* backMicSource;
	NSDictionary* frontMicSource;
	opaque_pthread_mutex_t audioLock;
	NSObject<OS_dispatch_queue>* cmSessionQueue;
	NSObject<OS_dispatch_queue>* inputDeviceQueue;
	tagHANDLE* hAUIO;
	AVAudioDevice* targetInputDevice;
	int inferredOperatingMode;
	opaqueCMSessionRef cmSession;
	int cmSessionRefCount;
	float fLastStartAudioSessionCall;
	NSDictionary* requestedSessionParams;
	NSNumber* currentClientPriority;
	NSString* currentAudioCategory;
	NSString* currentAudioMode;
	unsigned long currentVPOperatingMode;
	BOOL currentAudioRecordingMode;
	int currentSampleRate;
	int currentMinSamplesPerFrame;
	BOOL currentReceiverStatus;
	AudioEventQueue_tRef eventQ;
	NSMutableArray* spkrConfList;
	NSMutableArray* micConfList;
	BOOL micInUse;
	BOOL spkrInUse;

}

@property (assign) BOOL shouldSetupAudioSession; 
@property (getter=isSpeakerPhoneEnabled) BOOL enableSpeakerPhone; 
@property (assign,nonatomic) int clientPID; 
@property (assign,nonatomic) BOOL isUsingSuppression; 
@property (assign,nonatomic) BOOL isGKVoiceChat; 
@property (nonatomic,readonly) BOOL usingFloat; 
@property (nonatomic,readonly) int inferredOperatingMode; 
@property (retain) AVAudioDevice * targetInputDevice; 
+(id)defaultAVAudioManager;
-(id)init;
-(void)setDirection:(int)arg1 ;
-(void)setMicrophoneMuted:(BOOL)arg1 ;
-(void)setEnableSpeakerPhone:(BOOL)arg1 ;
-(BOOL)isSpeakerPhoneEnabled;
-(void)startAudioIOWithFarEndVersionInfo:(VoiceIOFarEndVersionInfo*)arg1 minSamplesPerFrame:(int)arg2 internalFormat:(AudioStreamBasicDescription)arg3 allowAudioRecording:(BOOL)arg4 operatingMode:(int)arg5 completionHandler:(/*^block*/ id)arg6 ;
-(void)stopAudioIO;
-(void)setIsGKVoiceChat:(BOOL)arg1 ;
-(BOOL)isGKVoiceChat;
-(int)inferredOperatingMode;
-(void)setSamplesPerFrame:(int)arg1 ;
-(void)getVpioFormat:(AudioStreamBasicDescription*)arg1 ;
-(void)enableMetering:(BOOL)arg1 isInputMeter:(BOOL)arg2 ;
-(void)setIsUsingSuppression:(BOOL)arg1 ;
-(BOOL)isUsingSuppression;
-(BOOL)usingFloat;
-(void)onCaptureSound:(char*)arg1 numBytes:(int)arg2 numSamples:(int)arg3 timeStamp:(unsigned)arg4 timeStampDelta:(int)arg5 bufferedSamples:(int)arg6 hostTime:(double)arg7 averagePower:(float)arg8 voiceActivity:(unsigned long)arg9 ;
-(void)onPlaySound:(char*)arg1 numBytes:(int)arg2 numSamples:(int)arg3 timeStamp:(unsigned)arg4 averagePower:(float)arg5 ;
-(int)clientPID;
-(void)addConference:(id)arg1 ;
-(void)removeConference:(id)arg1 ;
-(id)currentInputDevice;
-(void)setClientPID:(int)arg1 ;
-(BOOL)setCurrentInputDevice:(id)arg1 ;
-(void)setShouldSetupAudioSession:(BOOL)arg1 ;
-(void)selectMicForDirection;
-(void)cleanupAUIOSetupWithResult:(long)arg1 completionHandler:(/*^block*/ id)arg2 ;
-(void)processEventQueue;
-(void)AUIOSetup:(VoiceIOFarEndVersionInfo*)arg1 minSamplesPerFrame:(int)arg2 allowAudioRecording:(BOOL)arg3 ignoreRefCount:(BOOL)arg4 operatingMode:(int)arg5 completionHandler:(/*^block*/ id)arg6 ;
-(unsigned long)startAudioSessionWithCompletionHandler:(/*^block*/ id)arg1 dispatchQueue:(id)arg2 ;
-(void)stopAudioSession:(unsigned long)arg1 ;
-(void)AUIOTeardown:(BOOL)arg1 ;
-(void)tearDownAudioSession:(unsigned long)arg1 forceTearDown:(BOOL)arg2 ;
-(void)tearDownAudioIO:(BOOL)arg1 ;
-(void)audioSessionClientDied:(int)arg1 ;
-(void)setAudioSessionParameters:(id)arg1 ;
-(void)setupAudioNotifications;
-(BOOL)projectionModeEnabledState;
-(void)setAudioSessionProperties;
-(void)resetAudioSessionProperties;
-(unsigned long)setupAudioSession;
-(void)invalidateCurrentAudioParams;
-(void)setupInputBeamforming;
-(void)setupVPBlockFormat;
-(void)setSampleRate;
-(void)setBlockSize:(BOOL)arg1 ;
-(BOOL)forceSampleRate:(double*)arg1 ;
-(BOOL)forceBufferFrames:(int*)arg1 ;
-(opaqueCMSessionRef)cmSessionRef;
-(BOOL)shouldSetupAudioSession;
-(void)handleAudioInterruption:(opaqueCMSessionRef)arg1 interruptionInfo:(CFDictionaryRef)arg2 cmd:(unsigned)arg3 ;
-(void)setBlockSizeDispatch:(BOOL)arg1 ;
-(id)targetInputDevice;
-(void)setTargetInputDevice:(id)arg1 ;
@end

