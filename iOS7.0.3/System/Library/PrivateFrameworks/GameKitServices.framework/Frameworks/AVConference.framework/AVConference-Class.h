/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:55:00 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol AVConferenceDelegate;
#import <AVConference/AVConference-Structs.h>
@class AVConferenceXPCClient, NSObject, NSDictionary, CALayer, NSTimer;

@interface AVConference : NSObject {

	id weakAVConference;
	AVConferenceXPCClient* connection;
	id opaqueConf;
	BOOL useServer;
	BOOL runningInServer;
	NSObject<AVConferenceDelegate>* delegate;
	NSDictionary* serverBag;
	CALayer* remoteLayerFront;
	CALayer* remoteLayerBack;
	CALayer* remoteSubLayerFront;
	CALayer* remoteSubLayerBack;
	BOOL shouldDisplayVideoInfoLayer;
	BOOL shouldDisplayVideoInfoLayer_;
	BOOL shouldDisplayNetworkQualityGraph_;
	NSTimer* networkQualityUpdateTimer_;
	CALayer* networkQualityGraphLayer_;

}

@property (assign) BOOL shouldDisplayNetworkQualityGraph; 
@property (assign) BOOL shouldDisplayVideoInfoLayer; 
@property (getter=isUsingViceroyBlobFormat) BOOL useViceroyBlobFormat; 
@property (assign) NSObject<AVConferenceDelegate> * delegate; 
@property (assign,getter=isMicrophoneMuted,nonatomic) BOOL microphoneMuted; 
@property (assign,getter=isOutputMeteringEnabled,nonatomic) BOOL outputMeteringEnabled; 
@property (assign,getter=isInputMeteringEnabled,nonatomic) BOOL inputMeteringEnabled; 
@property (readonly) float outputMeterLevel; 
@property (readonly) float inputMeterLevel; 
@property (assign,nonatomic) BOOL requiresWifi; 
@property (readonly) int localFrameHeight; 
@property (readonly) int localFrameWidth; 
@property (getter=isSpeakerPhoneEnabled) BOOL enableSpeakerPhone; 
@property (readonly) unsigned natType; 
@property (retain) CALayer * networkQualityGraphLayer; 
@property (retain) NSTimer * networkQualityUpdateTimer; 
+(void)refreshLoggingParameters;
+(void)setAudioSessionProperties:(id)arg1 ;
+(void)startAudioSession;
+(void)stopAudioSession;
+(unsigned)doBlockingConnectionCheck:(BOOL)arg1 ;
+(unsigned)doBlockingConnectionCheck;
+(short)addressPointerFromBlob:(id)arg1 ;
+(id)externalAddressForSelfConnectionBlob:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(BOOL)setActive:(BOOL)arg1 ;
-(void)handleGKSConnectivitySettingsUpdate:(id)arg1 ;
-(void)updateGKSConnectivitySettings;
-(void)setShouldDisplayNetworkQualityGraph:(BOOL)arg1 ;
-(BOOL)shouldDisplayNetworkQualityGraph;
-(void)setShouldDisplayVideoInfoLayer:(BOOL)arg1 ;
-(BOOL)shouldDisplayVideoInfoLayer;
-(void)serverDied;
-(void)registerBlocksForVCNotifications;
-(void)listenForNotifications;
-(void)stopListeningForNotifications;
-(void)setRemoteVideoLayer:(void*)arg1 ;
-(void)setRemoteVideoBackLayer:(void*)arg1 ;
-(void)deregisterBlocksForVCNotifications;
-(id)newRandomParticipantID;
-(void)startNetworkQualityUpdateTimer;
-(void)updateCapabilities:(id)arg1 ;
-(BOOL)startConnectionWithCallID:(int)arg1 oldCallID:(int)arg2 usingInviteData:(id)arg3 isCaller:(BOOL)arg4 relayResponseDict:(id)arg5 didOriginateRelayRequest:(BOOL)arg6 capabilities:(id)arg7 error:(id*)arg8 ;
-(double)networkQualityForCallID:(int)arg1 ;
-(id)networkQualityGraphLayer;
-(float)networkQuality;
-(id)networkQualityUpdateTimer;
-(BOOL)updateNetworkQualityGraph;
-(void)setNetworkQualityUpdateTimer:(id)arg1 ;
-(int)getConferenceOperatingMode;
-(void)setConferenceOperatingMode:(int)arg1 ;
-(id)localScreenAttributesForVideoAttributes:(id)arg1 ;
-(void)setLocalScreenAttributes:(id)arg1 ;
-(unsigned)doBlockingConnectionCheck;
-(int)initializeNewCall;
-(void)warmupForCall;
-(BOOL)isUsingViceroyBlobFormat;
-(void)setUseViceroyBlobFormat:(BOOL)arg1 ;
-(void)setSetSessionID:(id)arg1 forCallID:(int)arg2 ;
-(void)addGKSCallEvent:(id)arg1 sessionID:(id)arg2 ;
-(void)sendARPLData:(id)arg1 toCallID:(int)arg2 ;
-(void)inviteDictionaryForCallID:(int)arg1 remoteInviteDictionary:(id)arg2 nonCellularCandidateTimeout:(double)arg3 block:(/*^block*/ id)arg4 queue:(id)arg5 ;
-(id)callMetadataForCallID:(int)arg1 ;
-(void)setPeerCN:(id)arg1 callID:(int)arg2 ;
-(void)setSessionID:(id)arg1 callID:(int)arg2 ;
-(BOOL)requiresWifi;
-(void)setRequiresWifi:(BOOL)arg1 ;
-(id)convertBlobtoOldBlob:(id)arg1 ;
-(id)convertBlobtoNewBlob:(id)arg1 ;
-(BOOL)startConnectionWithCallID:(int)arg1 usingInviteData:(id)arg2 isCaller:(BOOL)arg3 relayResponseDict:(id)arg4 didOriginateRelayRequest:(BOOL)arg5 capabilities:(id)arg6 error:(id*)arg7 ;
-(void)stopCallID:(int)arg1 ;
-(void)remoteCancelledCallID:(int)arg1 ;
-(void)sendProtobuf:(id)arg1 withType:(int)arg2 forCallID:(int)arg3 ;
-(void)setCallReport:(int)arg1 withReport:(id)arg2 ;
-(int)lastActiveCallID;
-(void)setLastActiveCallID:(int)arg1 ;
-(void)receivedRealTimeData:(id)arg1 fromParticipantID:(id)arg2 ;
-(void)processRemoteIPChange:(id)arg1 callID:(int)arg2 ;
-(BOOL)isOutputMeteringEnabled;
-(void)setOutputMeteringEnabled:(BOOL)arg1 ;
-(BOOL)isInputMeteringEnabled;
-(void)setInputMeteringEnabled:(BOOL)arg1 ;
-(float)outputMeterLevel;
-(BOOL)getIsAudioPaused:(BOOL*)arg1 callID:(int)arg2 error:(id*)arg3 ;
-(BOOL)getIsVideoPaused:(BOOL*)arg1 callID:(int)arg2 error:(id*)arg3 ;
-(float)inputMeterLevel;
-(void)setMicrophoneMuted:(BOOL)arg1 ;
-(BOOL)isMicrophoneMuted;
-(id)currentAudioInputDevice;
-(BOOL)setAudioInputDevice:(id)arg1 ;
-(void)stopNetworkQualityUpdateTimer;
-(void*)remoteVideoLayer;
-(void*)remoteVideoBackLayer;
-(double)localFramerateForCallID:(int)arg1 ;
-(double)localBitrateForCallID:(int)arg1 ;
-(double)remoteFramerateForCallID:(int)arg1 ;
-(double)remoteBitrateForCallID:(int)arg1 ;
-(int)localFrameHeight;
-(int)localFrameWidth;
-(int)remoteFrameHeightForCallID:(int)arg1 ;
-(int)remoteFrameWidthForCallID:(int)arg1 ;
-(double)remotePacketLossRateForCallID:(int)arg1 ;
-(double)localPacketLossRateForCallID:(int)arg1 ;
-(double)roundTripTimeForCallID:(int)arg1 ;
-(id)statsForCallID:(int)arg1 ;
-(void)setEnableSpeakerPhone:(BOOL)arg1 ;
-(BOOL)isSpeakerPhoneEnabled;
-(unsigned)natType;
-(BOOL)setPauseAudio:(BOOL)arg1 callID:(int)arg2 error:(id*)arg3 ;
-(BOOL)setPauseVideo:(BOOL)arg1 callID:(int)arg2 error:(id*)arg3 ;
-(BOOL)setServerInfo:(id)arg1 ;
-(void)videoConference:(id)arg1 didStartSession:(BOOL)arg2 withCallID:(unsigned long)arg3 error:(id)arg4 ;
-(void)videoConference:(id)arg1 didStartSession:(BOOL)arg2 withCallID:(unsigned long)arg3 withUserInfo:(id)arg4 error:(id)arg5 ;
-(void)videoConference:(id)arg1 didStopWithCallID:(unsigned long)arg2 error:(id)arg3 ;
-(void)videoConference:(id)arg1 didStopWithCallID:(unsigned long)arg2 error:(id)arg3 callMetadata:(id)arg4 ;
-(void)videoConference:(id)arg1 localIPChange:(id)arg2 withCallID:(unsigned long)arg3 ;
-(void)videoConference:(id)arg1 receivedNoRemotePacketsForTime:(double)arg2 callID:(unsigned long)arg3 ;
-(void)videoConference:(id)arg1 remoteMediaStalled:(BOOL)arg2 callID:(unsigned long)arg3 ;
-(void)videoConference:(id)arg1 didReceiveFirstRemoteFrameForCallID:(unsigned long)arg2 ;
-(void)videoConference:(id)arg1 didRemoteVideoAttributesChange:(id)arg2 forCallID:(unsigned long)arg3 ;
-(void)videoConference:(id)arg1 remoteAudioPaused:(BOOL)arg2 callID:(unsigned long)arg3 ;
-(void)videoConference:(id)arg1 remoteVideoPaused:(BOOL)arg2 callID:(unsigned long)arg3 ;
-(void)videoConference:(id)arg1 didRemoteScreenAttributesChange:(id)arg2 forCallID:(unsigned long)arg3 ;
-(void)videoConference:(id)arg1 updateInputMeterLevel:(float)arg2 ;
-(void)videoConference:(id)arg1 updateOutputMeterLevel:(float)arg2 ;
-(void)videoConference:(id)arg1 inititiateRelayRequest:(unsigned long)arg2 requestDict:(id)arg3 ;
-(void)videoConference:(id)arg1 sendRelayUpdate:(unsigned long)arg2 updateDict:(id)arg3 ;
-(void)videoConference:(id)arg1 cancelRelayRequest:(unsigned long)arg2 requestDict:(id)arg3 ;
-(void)videoConference:(id)arg1 videoQualityNotificationForCallID:(unsigned long)arg2 isDegraded:(BOOL)arg3 isRemote:(BOOL)arg4 ;
-(void)videoConference:(id)arg1 withCallID:(unsigned long)arg2 networkHint:(BOOL)arg3 ;
-(void)videoConference:(id)arg1 didReceiveARPLData:(id)arg2 forCallID:(unsigned long)arg3 ;
-(void)videoConference:(id)arg1 didChangeLocalVariablesForCallID:(unsigned long)arg2 ;
-(void)processRelayRequestResponse:(int)arg1 responseDict:(id)arg2 didOriginateRequest:(BOOL)arg3 ;
-(void)processRelayUpdate:(int)arg1 updateDict:(id)arg2 didOriginateRequest:(BOOL)arg3 ;
-(void)processCancelRelayRequest:(int)arg1 cancelDict:(id)arg2 didOriginateRequest:(BOOL)arg3 ;
-(void)setNetworkQualityGraphLayer:(id)arg1 ;
-(void)setRemoteVideoLayerContentsRect:(CGRect)arg1 camera:(int)arg2 ;
-(void)serverReconnected;
@end

