/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:55:00 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


#import <AVConference/AVConference-Structs.h>
@class NSMutableArray, NSString, NSMutableDictionary, NSNumber, NSDictionary;

@interface SDPMini : NSObject {

	NSMutableArray* _videoAttributes;
	NSString* _sdpUsername;
	NSMutableDictionary* _audioParameters;
	NSString* origin;
	NSMutableArray* audioPayloads;
	NSMutableArray* secondaryAudioPayloads;
	NSMutableArray* videoPayloads;
	NSString* sessionIP;
	NSNumber* audioRTPPort;
	NSNumber* audioRTCPPort;
	NSNumber* audioRTPID;
	NSNumber* videoRTPPort;
	NSNumber* videoRTCPPort;
	NSNumber* videoRTPID;
	BOOL allowRTCPFB;
	NSNumber* answerBandwidth;
	NSNumber* maxBandwidth;
	BOOL allowsDynamicMaxBitrate;
	BOOL allowsContentsChangeWithAspectPreservation;
	NSDictionary* featuresListDict;
	NSNumber* aacBlockSize;
	NSNumber* audioUnitModel;
	BOOL allowAudioRecording;

}

@property (nonatomic,retain) NSString * origin; 
@property (nonatomic,readonly) NSMutableArray * audioPayloads; 
@property (nonatomic,readonly) NSMutableArray * secondaryAudioPayloads; 
@property (nonatomic,readonly) NSMutableArray * videoPayloads; 
@property (nonatomic,retain) NSString * sessionIP; 
@property (nonatomic,retain) NSNumber * audioRTPPort; 
@property (nonatomic,retain) NSNumber * audioRTCPPort; 
@property (nonatomic,retain) NSNumber * audioRTPID; 
@property (nonatomic,retain) NSNumber * videoRTPPort; 
@property (nonatomic,retain) NSNumber * videoRTCPPort; 
@property (nonatomic,retain) NSNumber * videoRTPID; 
@property (assign,nonatomic) BOOL allowRTCPFB; 
@property (nonatomic,retain) NSNumber * answerBandwidth; 
@property (nonatomic,retain) NSNumber * maxBandwidth; 
@property (assign,nonatomic) BOOL allowsDynamicMaxBitrate; 
@property (nonatomic,retain) NSDictionary * featuresListDict; 
@property (assign,nonatomic) BOOL allowsContentsChangeWithAspectPreservation; 
@property (nonatomic,retain) NSNumber * aacBlockSize; 
@property (nonatomic,retain) NSNumber * audioUnitModel; 
@property (assign,nonatomic) BOOL allowAudioRecording; 
-(void)dealloc;
-(id)init;
-(id)origin;
-(void)setOrigin:(id)arg1 ;
-(id)initWithString:(id)arg1 ;
-(id)SDPUsername;
-(void)parseSDPFromString:(id)arg1 ;
-(id)composeSessionString;
-(id)composeAudioString;
-(id)composeVideoString;
-(BOOL)setVideoPayloads:(int*)arg1 count:(int)arg2 ;
-(id)toStringWithVideoEnabled:(BOOL)arg1 ;
-(id)audioPayloads;
-(id)secondaryAudioPayloads;
-(id)videoPayloads;
-(id)sessionIP;
-(void)setSessionIP:(id)arg1 ;
-(id)audioRTPPort;
-(void)setAudioRTPPort:(id)arg1 ;
-(id)audioRTCPPort;
-(void)setAudioRTCPPort:(id)arg1 ;
-(id)audioRTPID;
-(void)setAudioRTPID:(id)arg1 ;
-(id)videoRTPPort;
-(void)setVideoRTPPort:(id)arg1 ;
-(id)videoRTCPPort;
-(void)setVideoRTCPPort:(id)arg1 ;
-(id)videoRTPID;
-(void)setVideoRTPID:(id)arg1 ;
-(BOOL)allowRTCPFB;
-(void)setAllowRTCPFB:(BOOL)arg1 ;
-(id)answerBandwidth;
-(void)setAnswerBandwidth:(id)arg1 ;
-(id)maxBandwidth;
-(void)setMaxBandwidth:(id)arg1 ;
-(BOOL)allowsDynamicMaxBitrate;
-(void)setAllowsDynamicMaxBitrate:(BOOL)arg1 ;
-(id)featuresListDict;
-(void)setFeaturesListDict:(id)arg1 ;
-(id)aacBlockSize;
-(void)setAacBlockSize:(id)arg1 ;
-(id)audioUnitModel;
-(void)setAudioUnitModel:(id)arg1 ;
-(BOOL)allowsContentsChangeWithAspectPreservation;
-(void)setAllowsContentsChangeWithAspectPreservation:(BOOL)arg1 ;
-(BOOL)allowAudioRecording;
-(void)setAllowAudioRecording:(BOOL)arg1 ;
-(id)composeBandwidthString;
-(id)composeFLSString;
-(id)composeAudioFMTPForPayload:(id)arg1 ;
-(id)parseIP:(id)arg1 ;
-(void)parseBandwidth:(id)arg1 ;
-(void)parseMedia:(id)arg1 ;
-(void)parseSessionAttributes:(id)arg1 ;
-(void)parseAudioMediaAttributes:(id)arg1 ;
-(void)parseVideoMediaAttributes:(id)arg1 ;
-(id)parseRTPID:(id)arg1 ;
-(id)parseRTCPPort:(id)arg1 ;
-(void)parseAudioFormatAttribute:(id)arg1 ;
-(int)rulesFramerate:(int)arg1 ;
-(void)rulesImageSize:(int)arg1 pWidth:(int*)arg2 pHeight:(int*)arg3 ;
-(void)setUseSbr:(BOOL)arg1 blockSize:(int)arg2 forAACFormat:(int)arg3 ;
-(BOOL)getUseSbr:(BOOL*)arg1 blockSize:(int*)arg2 forAACFormat:(int)arg3 ;
-(void)setVideoRTCPFB:(BOOL)arg1 useNACK:(BOOL)arg2 ;
-(void)createVideoImageAttr:(int)arg1 direction:(int)arg2 dimensions:(imageTag*)arg3 count:(int)arg4 ;
-(id)videoImageAttributes:(int)arg1 ;
-(id)getVideoSendImages:(id)arg1 ;
-(void)fillImageStruct:(id)arg1 imageStruct:(imageTag*)arg2 ;
-(id)getVideoRecvImages:(id)arg1 ;
-(void)getNegotiatedResolutionForPayload:(int)arg1 withRule:(id)arg2 direction:(int)arg3 result:(imageTag*)arg4 remoteSupportsHD:(BOOL)arg5 ;
-(void)addVideoImageAttr:(id)arg1 ForPayload:(int)arg2 ;
-(BOOL)supportImage:(id)arg1 width:(int)arg2 height:(int)arg3 rate:(int)arg4 ;
-(void)fillImageArray:(id)arg1 imageArray:(imageTag*)arg2 ;
-(BOOL)videoDisplayAttribute:(int*)arg1 withHeight:(int*)arg2 ;
@end

