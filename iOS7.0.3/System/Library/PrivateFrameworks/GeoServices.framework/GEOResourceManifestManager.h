/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:55:08 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <GeoServices/GeoServices-Structs.h>
#import <GeoServices/GEOResourceManifestServerProxyDelegate.h>

@protocol GEOResourceManifestServerProxy;
@class NSHashTable, GEOActiveTileGroup, NSLock, NSDictionary, NSMutableArray, GEOLocalizationRegionsInfo;

@interface GEOResourceManifestManager : NSObject <GEOResourceManifestServerProxyDelegate> {

	<GEOResourceManifestServerProxy>* _serverProxy;
	NSHashTable* _serverProxyObservers;
	GEOActiveTileGroup* _activeTileGroup;
	NSLock* _activeTileGroupLock;
	NSDictionary* _resourceNamesToPaths;
	NSMutableArray* _tileGroupObservers;
	NSLock* _tileGroupObserversLock;
	GEOLocalizationRegionsInfo* _localizationRegionsInfo;
	NSMutableArray* _networkActivityHandlers;
	BOOL _isUpdatingManifest;
	BOOL _isLoadingResources;
	NSLock* _resourceNamesToPathsLock;

}

@property (nonatomic,readonly) <GEOResourceManifestServerProxy> * serverProxy;              //@synthesize serverProxy=_serverProxy - In the implementation block
@property (nonatomic,readonly) BOOL hasActiveTileGroup; 
@property (nonatomic,readonly) GEOActiveTileGroup * activeTileGroup; 
+(void)disableServerConnection;
+(void)useRemoteProxy;
+(void)useLocalProxy;
+(void)setHiDPI:(BOOL)arg1 ;
+(void)setCallerWillStartServer;
+(id)modernManager;
+(id)sharedManager;
-(id)authToken;
-(void)dealloc;
-(id)init;
-(id)multiTileURLStringForTileKey:(const GEOTileKey*)arg1 useStatusCodes:(BOOL*)arg2 ;
-(id)serverProxy;
-(void)forceUpdate;
-(id)localizationURLStringIfNecessaryForTileKey:(const GEOTileKey*)arg1 ;
-(id)languageForTileKey:(const GEOTileKey*)arg1 ;
-(void)startObservingDevResources;
-(void)stopObservingDevResources;
-(oneway void)serverProxyDidChangeActiveTileGroup:(id)arg1 finishedCallback:(/*^block*/ id)arg2 ;
-(int)mapMatchingTileSetStyle;
-(double)timeToLiveForTileKey:(const GEOTileKey*)arg1 ;
-(BOOL)isAvailableForTileKey:(const GEOTileKey*)arg1 ;
-(BOOL)supportsTileStyle:(int)arg1 size:(int)arg2 scale:(int)arg3 ;
-(void)_buildResourceNamesToPaths;
-(oneway void)serverProxyWillStartUpdatingResourceManifest;
-(oneway void)serverProxyDidStopUpdatingResourceManifest;
-(oneway void)serverProxyWillStartLoadingResources;
-(oneway void)serverProxyDidStopLoadingResources;
-(void)setManifestToken:(id)arg1 completionHandler:(/*^block*/ id)arg2 ;
-(BOOL)hasResourceManifest;
-(void)getResourceManifestWithHandler:(/*^block*/ id)arg1 ;
-(void)setActiveTileGroupIdentifier:(unsigned)arg1 ;
-(void)resetActiveTileGroup;
-(void)_notifyObserversOfResourcesChange;
-(void)addServerProxyObserver:(id)arg1 ;
-(void)removeServerProxyObserver:(id)arg1 ;
-(unsigned)mapMatchingZoomLevel;
-(id)_activeTileSetForKey:(const GEOTileKey*)arg1 ;
-(void)addNetworkActivityHandler:(/*^block*/ id)arg1 ;
-(unsigned)activeTileGroupIdentifier;
-(void)devResourcesFolderDidChange;
-(void)_localeChanged:(id)arg1 ;
-(void)openServerConnection;
-(void)closeServerConnection;
-(id)detailedDescription;
-(id)activeTileGroup;
-(BOOL)hasActiveTileGroup;
-(void)addTileGroupObserver:(id)arg1 queue:(id)arg2 ;
-(void)removeTileGroupObserver:(id)arg1 ;
-(id)allResourceNames;
-(unsigned)versionForTileKey:(const GEOTileKey*)arg1 ;
-(id)baseURLStringForTileKey:(const GEOTileKey*)arg1 ;
-(id)pathForResourceWithName:(id)arg1 ;
@end

