/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:54:07 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@class NSString, NSMutableArray;

@interface AXValidationManager : NSObject {

	BOOL _shouldLogToConsole;
	BOOL _shouldCrashOnError;
	BOOL _shouldReportToServer;
	BOOL _forceDoNotReport;
	BOOL _debugBuild;
	unsigned _numberOfValidationErrors;
	NSString* _validationTargetName;
	NSString* _overrideProcessName;
	NSMutableArray* _consoleErrorMessages;

}

@property (assign,nonatomic) BOOL forceDoNotReport;                              //@synthesize forceDoNotReport=_forceDoNotReport - In the implementation block
@property (nonatomic,copy) NSString * validationTargetName;                      //@synthesize validationTargetName=_validationTargetName - In the implementation block
@property (nonatomic,copy) NSString * overrideProcessName;                       //@synthesize overrideProcessName=_overrideProcessName - In the implementation block
@property (assign,getter=isDebugBuild,nonatomic) BOOL debugBuild;                //@synthesize debugBuild=_debugBuild - In the implementation block
@property (assign,nonatomic) BOOL shouldLogToConsole;                            //@synthesize shouldLogToConsole=_shouldLogToConsole - In the implementation block
@property (assign,nonatomic) BOOL shouldCrashOnError;                            //@synthesize shouldCrashOnError=_shouldCrashOnError - In the implementation block
@property (assign,nonatomic) BOOL shouldReportToServer;                          //@synthesize shouldReportToServer=_shouldReportToServer - In the implementation block
@property (assign,nonatomic) unsigned numberOfValidationErrors;                  //@synthesize numberOfValidationErrors=_numberOfValidationErrors - In the implementation block
@property (nonatomic,retain) NSMutableArray * consoleErrorMessages;              //@synthesize consoleErrorMessages=_consoleErrorMessages - In the implementation block
+(id)sharedInstance;
-(void)dealloc;
-(id)init;
-(void)setOverrideProcessName:(id)arg1 ;
-(void)setValidationTargetName:(id)arg1 ;
-(void)setConsoleErrorMessages:(id)arg1 ;
-(void)performValidations:(/*^block*/ id)arg1 withPreValidationHandler:(/*^block*/ id)arg2 postValidationHandler:(/*^block*/ id)arg3 safeCategoryInstallationHandler:(/*^block*/ id)arg4 ;
-(void)setNumberOfValidationErrors:(unsigned)arg1 ;
-(void)setForceDoNotReport:(BOOL)arg1 ;
-(void)setDebugBuild:(BOOL)arg1 ;
-(void)setShouldLogToConsole:(BOOL)arg1 ;
-(void)setShouldCrashOnError:(BOOL)arg1 ;
-(void)setShouldReportToServer:(BOOL)arg1 ;
-(id)validationTargetName;
-(unsigned)numberOfValidationErrors;
-(void)_printConsoleReport:(BOOL)arg1 isDelayed:(BOOL)arg2 ;
-(void)installSafeCategories:(/*^block*/ id)arg1 afterDelay:(double)arg2 validationTargetName:(id)arg3 overrideProcessName:(id)arg4 forceDoNotReport:(BOOL)arg5 ;
-(BOOL)isDebugBuild;
-(id)consoleErrorMessages;
-(id)overrideProcessName;
-(BOOL)_validateClass:(id)arg1 hasMethod:(id)arg2 methodType:(int)arg3 returnType:(id)arg4 arguments:(id)arg5 ;
-(BOOL)validateProtocol:(id)arg1 hasMethod:(id)arg2 isInstanceMethod:(BOOL)arg3 isRequired:(BOOL)arg4 ;
-(BOOL)installSafeCategory:(id)arg1 canInteractWithTargetClass:(BOOL)arg2 ;
-(void)performValidations:(/*^block*/ id)arg1 withPreValidationHandler:(/*^block*/ id)arg2 postValidationHandler:(/*^block*/ id)arg3 ;
-(void)installSafeCategories:(/*^block*/ id)arg1 afterDelay:(double)arg2 validationTargetName:(id)arg3 overrideProcessName:(id)arg4 ;
-(BOOL)validateClass:(id)arg1 ;
-(BOOL)validateClass:(id)arg1 isKindOfClass:(id)arg2 ;
-(BOOL)validateClass:(id)arg1 hasInstanceVariable:(id)arg2 ;
-(BOOL)validateClass:(id)arg1 hasInstanceVariable:(id)arg2 withType:(char*)arg3 ;
-(BOOL)validateClass:(id)arg1 hasInstanceMethod:(id)arg2 ;
-(BOOL)validateClass:(id)arg1 hasClassMethod:(id)arg2 returnType:(char*)arg3 parameterCount:(unsigned)arg4 ;
-(BOOL)validateClass:(id)arg1 hasInstanceMethod:(id)arg2 returnType:(char*)arg3 parameterCount:(unsigned)arg4 ;
-(BOOL)validateClass:(id)arg1 hasClassMethod:(id)arg2 ;
-(BOOL)validateClass:(id)arg1 hasProperty:(id)arg2 ;
-(BOOL)validateClass:(id)arg1 conformsToProtocol:(id)arg2 ;
-(BOOL)validateProtocol:(id)arg1 hasOptionalInstanceMethod:(id)arg2 ;
-(BOOL)validateProtocol:(id)arg1 hasRequiredInstanceMethod:(id)arg2 ;
-(BOOL)validateProtocol:(id)arg1 hasOptionalClassMethod:(id)arg2 ;
-(BOOL)validateProtocol:(id)arg1 hasRequiredClassMethod:(id)arg2 ;
-(BOOL)validateProtocol:(id)arg1 hasProperty:(id)arg2 ;
-(BOOL)installSafeCategory:(id)arg1 ;
-(BOOL)shouldLogToConsole;
-(BOOL)shouldCrashOnError;
-(BOOL)shouldReportToServer;
-(BOOL)forceDoNotReport;
@end

