/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:54:08 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <AccessibilityUtilities/AXTimer.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSObject;

@interface AXDispatchTimer : NSObject <AXTimer> {

	BOOL _active;
	BOOL _pending;
	BOOL _cancelled;
	BOOL _automaticallyCancelPendingBlockUponSchedulingNewBlock;
	NSObject<OS_dispatch_queue>* _dispatchQueue;
	NSObject<OS_dispatch_source>* _dispatchTimer;

}

@property (assign,getter=isCancelled,nonatomic) BOOL cancelled;                                       //@synthesize cancelled=_cancelled - In the implementation block
@property (assign,nonatomic) BOOL automaticallyCancelPendingBlockUponSchedulingNewBlock;              //@synthesize automaticallyCancelPendingBlockUponSchedulingNewBlock=_automaticallyCancelPendingBlockUponSchedulingNewBlock - In the implementation block
@property (assign,getter=isActive,nonatomic) BOOL active;                                             //@synthesize active=_active - In the implementation block
@property (assign,getter=isPending,nonatomic) BOOL pending;                                           //@synthesize pending=_pending - In the implementation block
@property (nonatomic,retain) NSObject<OS_dispatch_queue> * dispatchQueue;                             //@synthesize dispatchQueue=_dispatchQueue - In the implementation block
@property (nonatomic,retain) NSObject<OS_dispatch_source> * dispatchTimer;                            //@synthesize dispatchTimer=_dispatchTimer - In the implementation block
-(id)dispatchQueue;
-(void)dealloc;
-(id)init;
-(BOOL)isActive;
-(void)setCancelled:(BOOL)arg1 ;
-(BOOL)isCancelled;
-(void)cancel;
-(void)setActive:(BOOL)arg1 ;
-(void)_reallyCancel;
-(BOOL)automaticallyCancelPendingBlockUponSchedulingNewBlock;
-(void)setDispatchTimer:(id)arg1 ;
-(id)dispatchTimer;
-(void)afterDelay:(double)arg1 processBlock:(/*^block*/ id)arg2 ;
-(void)setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:(BOOL)arg1 ;
-(void)afterDelay:(double)arg1 processBlock:(/*^block*/ id)arg2 cancelBlock:(/*^block*/ id)arg3 ;
-(id)initWithTargetSerialQueue:(id)arg1 ;
-(void)setPending:(BOOL)arg1 ;
-(BOOL)isPending;
-(void)setDispatchQueue:(id)arg1 ;
@end

