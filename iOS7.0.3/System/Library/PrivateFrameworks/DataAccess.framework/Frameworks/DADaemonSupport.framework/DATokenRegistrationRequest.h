/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:54:52 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DADaemonSupport.framework/DADaemonSupport
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <libTelephonyUtilDynamic.dylib/NSURLConnectionDelegate.h>

@protocol DATokenRegistrationDelegate;
@class DARefreshWrapper, NSData, NSString, NSMutableURLRequest, NSURLConnection;

@interface DATokenRegistrationRequest : NSObject <NSURLConnectionDelegate> {

	<DATokenRegistrationDelegate>* _delegate;
	DARefreshWrapper* _wrapper;
	NSData* _token;
	NSString* _pushKey;
	NSString* _onBehalfOfBundleIdentifier;
	NSMutableURLRequest* _request;
	NSURLConnection* _connection;

}

@property (assign) <DATokenRegistrationDelegate> * delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) DARefreshWrapper * wrapper;                          //@synthesize wrapper=_wrapper - In the implementation block
@property (readonly) NSData * token;                                      //@synthesize token=_token - In the implementation block
@property (readonly) NSString * pushKey;                                  //@synthesize pushKey=_pushKey - In the implementation block
@property (retain) NSMutableURLRequest * request;                         //@synthesize request=_request - In the implementation block
@property (nonatomic,retain) NSURLConnection * connection;                //@synthesize connection=_connection - In the implementation block
+(id)requestWithToken:(id)arg1 pushKey:(id)arg2 wrapper:(id)arg3 onBehalfOf:(id)arg4 ;
-(id)pushKey;
-(void)setRequest:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(void)cancel;
-(id)request;
-(void)connection:(id)arg1 didFailWithError:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(void)connectionDidFinishLoading:(id)arg1 ;
-(void)connection:(id)arg1 didReceiveResponse:(id)arg2 ;
-(id)connection;
-(void)setConnection:(id)arg1 ;
-(id)initWithToken:(id)arg1 pushKey:(id)arg2 wrapper:(id)arg3 onBehalfOf:(id)arg4 ;
-(void)sendRegistrationRequest;
-(id)wrapper;
-(id)token;
-(void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2 ;
-(BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 ;
@end

