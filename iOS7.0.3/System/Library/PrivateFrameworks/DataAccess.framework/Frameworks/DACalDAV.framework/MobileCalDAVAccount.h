/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:54:49 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/DataAccess.framework/Frameworks/DACalDAV.framework/DACalDAV
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <DACalDAV/DACalDAV-Structs.h>
#import <DataAccess/DAAccount.h>

@class NSMutableDictionary, MobileCalDAVPrincipal, NSMutableSet, NSString, CalDAVPrincipalSearchPropertySet, CoreDAVDiscoveryTaskGroup, MobileCalDAVAccountRefreshActor, CalDAVRefreshContext, DACoreDAVLogger, CalDAVServerVersion, DACoreDAVTaskManager, NSDictionary, NSURL, NSSet, NSTimeZone, NSDate;

@interface MobileCalDAVAccount : DAAccount {

	NSMutableDictionary* _principals;
	MobileCalDAVPrincipal* _mainPrincipal;
	int _preferredEventDaysToSync;
	int _preferredToDoDaysToSync;
	NSMutableSet* _calendars;
	BOOL _subscribedCalendarsChanged;
	NSString* _collectionSetName;
	CalDAVPrincipalSearchPropertySet* _searchPropertySet;
	CoreDAVDiscoveryTaskGroup* _checkValidityTaskGroup;
	MobileCalDAVAccountRefreshActor* _actor;
	BOOL _isRefreshing;
	BOOL _isSpinning;
	BOOL _needsAccountPropertyRefresh;
	CalDAVRefreshContext* _refreshContext;
	NSMutableSet* _searchTaskSet;
	DACoreDAVLogger* _curLogger;
	CalDAVServerVersion* _serverVersion;
	NSMutableDictionary* _itemIDsToMoveActions;
	NSMutableSet* _movedItemURLStrings;
	int _wasMigrated;
	BOOL _searchQueriesShouldCancel;
	int _calDAVAccountVersion;

}

@property (nonatomic,readonly) DACoreDAVTaskManager * taskManager; 
@property (retain) MobileCalDAVPrincipal * mainPrincipal;                       //@synthesize mainPrincipal=_mainPrincipal - In the implementation block
@property (readonly) NSDictionary * principals;                                 //@synthesize principals=_principals - In the implementation block
@property (retain) NSURL * collectionSetURL; 
@property (retain) id searchPropertySet; 
@property (retain) NSString * overriddenServer; 
@property (retain) NSString * overriddenScheme; 
@property (assign) int overriddenPort; 
@property (assign) BOOL isWritable; 
@property (assign) BOOL wasMigrated; 
@property (assign) BOOL needsAccountPropertyRefresh;                            //@synthesize needsAccountPropertyRefresh=_needsAccountPropertyRefresh - In the implementation block
@property (assign) BOOL isRefreshing;                                           //@synthesize isRefreshing=_isRefreshing - In the implementation block
@property (readonly) NSMutableDictionary * itemIDsToMoveActions;                //@synthesize itemIDsToMoveActions=_itemIDsToMoveActions - In the implementation block
@property (readonly) NSSet * movedItemURLStrings;                               //@synthesize movedItemURLStrings=_movedItemURLStrings - In the implementation block
@property (readonly) NSSet * calendars; 
@property (nonatomic,retain) NSDictionary * subscribedCalendars; 
@property (nonatomic,copy) NSString * calendarHomeSyncToken; 
@property (assign) int calDAVAccountVersion;                                    //@synthesize calDAVAccountVersion=_calDAVAccountVersion - In the implementation block
@property (assign) CalDAVServerVersion * serverVersion; 
@property (assign) int preferredEventDaysToSync;                                //@synthesize preferredEventDaysToSync=_preferredEventDaysToSync - In the implementation block
@property (assign) int preferredToDoDaysToSync;                                 //@synthesize preferredToDoDaysToSync=_preferredToDoDaysToSync - In the implementation block
@property (readonly) NSTimeZone * viewedTimeZone; 
@property (readonly) NSDate * ocurrenceCacheStartDate; 
@property (readonly) NSDate * ocurrenceCacheEndDate; 
@property (readonly) BOOL shouldFilterEventSyncTimeRange; 
@property (readonly) BOOL shouldFilterTodoSyncTimeRange; 
@property (readonly) BOOL shouldFilterSyncTimeRangeForInbox; 
@property (readonly) BOOL shouldUseCalendarHomeSyncReport; 
@property (readonly) BOOL supportsReminders; 
@property (readonly) BOOL supportsEvents; 
@property (retain) CalDAVRefreshContext * refreshContext;                       //@synthesize refreshContext=_refreshContext - In the implementation block
@property (assign) BOOL searchQueriesShouldCancel;                              //@synthesize searchQueriesShouldCancel=_searchQueriesShouldCancel - In the implementation block
-(id)calendars;
-(void)removeCalendar:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(BOOL)isRefreshing;
-(void)noteHomeSetOnDifferentHost:(id)arg1 ;
-(void)task:(id)arg1 didFinishWithError:(id)arg2 ;
-(void)setPrincipalURL:(id)arg1 ;
-(void)discoveryTask:(id)arg1 gotAccountInfo:(id)arg2 error:(id)arg3 ;
-(int)coreDAVLogLevel;
-(int)coreDAVOutputLevel;
-(void)coreDAVLogDiagnosticMessage:(id)arg1 atLevel:(int)arg2 ;
-(BOOL)shouldLogTransmittedData;
-(void)coreDAVLogTransmittedDataPartial:(id)arg1 ;
-(void)coreDAVTransmittedDataFinished;
-(void)retainPowerAssertion;
-(void)releasePowerAssertion;
-(id)principalPath;
-(void)setPrincipalPath:(id)arg1 ;
-(id)mainPrincipal;
-(void)addPrincipal:(id)arg1 ;
-(void)setSearchPropertySet:(id)arg1 ;
-(void)setIsWritable:(BOOL)arg1 ;
-(void)setServerVersion:(id)arg1 ;
-(void)setNeedsAccountPropertyRefresh:(BOOL)arg1 ;
-(BOOL)saveModifiedPropertiesOnBackingAccount;
-(BOOL)upgradeAccount;
-(id)overriddenServer;
-(int)overriddenPort;
-(id)overriddenScheme;
-(void)_updateCalendarStore:(BOOL)arg1 ;
-(void*)copyCalStore;
-(id)serverVersion;
-(id)viewedTimeZone;
-(int)preferredEventDaysToSync;
-(int)preferredToDoDaysToSync;
-(BOOL)shouldFilterEventSyncTimeRange;
-(BOOL)shouldFilterTodoSyncTimeRange;
-(id)_calendarConstraintsResource;
-(id)calendarHomeSyncToken;
-(id)_calendarConstraintsPath;
-(BOOL)supportsReminders;
-(BOOL)supportsEvents;
-(BOOL)_updateCalendarStoreProperties:(void*)arg1 ;
-(BOOL)_updateCalendarStoreNoDBOpen:(BOOL)arg1 ;
-(void)_clearOrphanedCalendarItemChangesOfType:(int)arg1 withContext:(id)arg2 goodCalendarIds:(id)arg3 ;
-(void)_clearOrphanedChangesWithChangesCall:(/*function pointer*/ void*)arg1 clearChanges:(/*function pointer*/ void*)arg2 withContext:(id)arg3 ;
-(BOOL)_saveModifiedPrincipalsOnBackingAccount;
-(BOOL)_saveModifiedSubscribedCalendarsOnBackingAccount;
-(id)refreshContext;
-(BOOL)wasMigrated;
-(void)setWasMigrated:(BOOL)arg1 ;
-(void)_clearOrphanedChangesWithContext:(id)arg1 ;
-(void)setRefreshContext:(id)arg1 ;
-(void)setIsRefreshing:(BOOL)arg1 ;
-(id)_collectActionsFromMoveDictionary:(CFDictionaryRef)arg1 forDataclass:(id)arg2 outShouldSave:(BOOL*)arg3 ;
-(void)_collectMoveActions;
-(id)searchPropertySet;
-(id)collectionSetURL;
-(id)wellKnownPaths;
-(id)_powerAssertionContext;
-(id)_powerAssertionGroupIdentifier;
-(void)ingestBackingAccountInfoProperties;
-(void)setSubscribedCalendars:(id)arg1 ;
-(id)subscribedCalendars;
-(void)setOverriddenServer:(id)arg1 ;
-(void)setOverriddenPort:(int)arg1 ;
-(void)setOverriddenScheme:(id)arg1 ;
-(id)serverBaseURL;
-(void)setCollectionSetURL:(id)arg1 ;
-(void)addCalendar:(id)arg1 ;
-(void)removeCalendarWithURL:(id)arg1 ;
-(void)reloadCalendars;
-(void)removePrincipal:(id)arg1 ;
-(id)ocurrenceCacheStartDate;
-(id)ocurrenceCacheEndDate;
-(BOOL)shouldFilterSyncTimeRangeForInbox;
-(BOOL)shouldUseCalendarHomeSyncReport;
-(void)setCalendarHomeSyncToken:(id)arg1 ;
-(id)spinnerIdentifiers;
-(void)cancelRefreshWithCompletion:(/*^block*/ id)arg1 ;
-(void)refreshActor:(id)arg1 didCompleteWithError:(id)arg2 ;
-(void)refreshWithContext:(id)arg1 ;
-(void)dropPowerAssertions;
-(void)reattainPowerAssertions;
-(BOOL)isCalDAVAccount;
-(BOOL)needsAccountPropertyRefresh;
-(id)itemIDsToMoveActions;
-(id)movedItemURLStrings;
-(void)setMainPrincipal:(id)arg1 ;
-(id)principals;
-(void)setPreferredEventDaysToSync:(int)arg1 ;
-(void)setPreferredToDoDaysToSync:(int)arg1 ;
-(BOOL)searchQueriesShouldCancel;
-(void)setSearchQueriesShouldCancel:(BOOL)arg1 ;
-(int)calDAVAccountVersion;
-(void)setCalDAVAccountVersion:(int)arg1 ;
-(void)cancelAllSearchQueries;
-(BOOL)searchQueriesRunning;
-(id)taskManager;
-(id)initWithBackingAccountInfo:(id)arg1 ;
-(BOOL)accountHasSignificantPropertyChangesFromOldAccountInfo:(id)arg1 ;
-(void)discoverInitialPropertiesWithConsumer:(id)arg1 ;
-(BOOL)isEqualToAccount:(id)arg1 ;
-(id)localizedIdenticalAccountFailureMessage;
-(id)localizedInvalidPasswordMessage;
-(id)onBehalfOfBundleIdentifier;
-(void)_setSpinning:(BOOL)arg1 ;
-(void)setAccountDescription:(id)arg1 ;
-(BOOL)isWritable;
-(void)performSearchQuery:(id)arg1 ;
-(void)cancelSearchQuery:(id)arg1 ;
@end

