/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:55:49 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <MusicLibrary/ML3Entity.h>

@interface ML3Track : ML3Entity
+(id)propertyForMPMediaEntityProperty:(id)arg1 ;
+(void)initialize;
+(id)defaultOrderingProperties;
+(id)persistentIDColumnForTable:(id)arg1 ;
+(int)revisionTrackingCode;
+(BOOL)trackWithPersistentID:(long long)arg1 existsInLibraryWithConnection:(id)arg2 ;
+(id)unsettableProperties;
+(id)joinClausesForProperty:(id)arg1 ;
+(id)foreignDatabaseTableForProperty:(id)arg1 ;
+(id)foreignColumnForProperty:(id)arg1 ;
+(id)databaseTable;
+(id)extraTablesToInsert;
+(id)allProperties;
+(id)predicateByOptimizingComparisonPredicate:(id)arg1 ;
+(BOOL)libraryContentsChangeForProperty:(id)arg1 ;
+(BOOL)libraryDynamicChangeForProperty:(id)arg1 ;
+(id)collectionClassesToUpdateBeforeDelete;
+(id)extraTablesToDelete;
+(BOOL)deleteFromLibrary:(id)arg1 deletionType:(int)arg2 persistentIDs:(const long long*)arg3 count:(unsigned)arg4 ;
+(id)predisambiguatedProperties;
+(id)subselectStatementForProperty:(id)arg1 ;
+(id)subselectPropertyForProperty:(id)arg1 ;
+(id)sectionPropertyForProperty:(id)arg1 ;
+(id)containerQueryWithContainer:(id)arg1 ;
+(BOOL)unlinkRedownloadableAssetsFromLibrary:(id)arg1 persistentIDs:(id)arg2 ;
+(BOOL)registerBookmarkMetadataIdentifierFunctionOnConnection:(id)arg1 ;
+(void)enumeratePathsToDeleteFromLibrary:(id)arg1 persistentIDs:(id)arg2 usingBlock:(/*^block*/ id)arg3 ;
+(void)populateSortOrdersOfPropertyValues:(id)arg1 inLibrary:(id)arg2 cachedNameOrders:(id)arg3 ;
+(BOOL)unlinkRedownloadableAssetsFromLibrary:(id)arg1 persistentIDs:(id)arg2 deletedFileSize:(long long*)arg3 ;
+(BOOL)clearLocationFromLibrary:(id)arg1 persistentIDs:(id)arg2 ;
+(id)albumsDefaultOrderingProperties;
+(id)genresDefaultOrderingProperties;
+(id)podcastsDefaultOrderingProperties;
+(id)artistAllAlbumsDefaultOrderingProperties;
+(id)artistsDefaultOrderingProperties;
+(id)albumAllArtistsDefaultOrderingProperties;
+(id)albumAndArtistDefaultOrderingProperties;
+(id)composersDefaultOrderingProperties;
+(id)podcastsEpisodesDefaultOrderingProperties;
+(id)TVShowEpisodesDefaultOrderingProperties;
+(BOOL)trackWithPersistentID:(long long)arg1 existsInLibrary:(id)arg2 ;
+(BOOL)trackValueAreInTheCloud:(id)arg1 ;
+(void)updateAllBookmarkableStoreBookmarkMetadataIdentifiersOnConnection:(id)arg1 ;
+(id)orderingTermsForITTGTrackOrder:(unsigned long)arg1 descending:(BOOL)arg2 ;
+(id)containerQueryWithContainer:(id)arg1 predicate:(id)arg2 ;
+(id)containerQueryWithContainer:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 ;
+(id)containerQueryWithContainer:(id)arg1 predicate:(id)arg2 orderingTerms:(id)arg3 ;
+(id)_normalizedImportChapters:(id)arg1 trackPersistentID:(long long)arg2 ;
+(id)flattenedChapterDataWithImportChapters:(id)arg1 library:(id)arg2 trackPersistentID:(long long)arg3 ;
+(id)flattenedChapterDataFromSyncInfoDictionaries:(id)arg1 trackPersistentID:(long long)arg2 ;
+(id)flattenedChapterDataFromDAAPInfoDictionary:(id)arg1 trackPersistentID:(long long)arg2 ;
+(id)importChaptersByParsingAsset:(id)arg1 ;
-(void)_createVideoSnapshotAtTime:(double)arg1 withCompletionBlock:(/*^block*/ id)arg2 ;
-(id)_screenshotArtworkDataStoredAsItemArtwork;
-(BOOL)needsVideoSnapshot;
-(void)createVideoSnapshotAtTime:(double)arg1 ;
-(id)initWithDictionary:(id)arg1 inLibrary:(id)arg2 cachedNameOrders:(id)arg3 ;
-(id)chapterTOC;
-(id)absoluteFilePath;
-(BOOL)updateIntegrity;
-(id)rawIntegrity;
-(id)artworkCacheIDAtPlaybackTime:(double)arg1 ;
-(void)updateCollectionCloudStatus;
-(void)updateStoreBookmarkMetadataIdentifier;
-(void)populateChapterDataWithImportChapters:(id)arg1 ;
-(void)populateLocationPropertiesWithPath:(id)arg1 ;
-(BOOL)populateArtworkCacheWithArtworkData:(id)arg1 ;
@end

