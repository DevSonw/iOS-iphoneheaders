/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:07:34 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/Support/medialibraryd
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/NSXPCConnectionDelegate.h>
#import <MobileCoreServices/NSXPCListenerDelegate.h>
#import <medialibraryd/MLMediaLibraryWriterDelegate.h>
#import <MusicLibrary/MLMediaLibraryServiceProtocol.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSObject, NSXPCListener, NSMutableDictionary, MLMediaLibraryWriter, NSError, NSOperationQueue, NSMutableArray, NSTimer, NSMutableSet;

@interface MediaLibraryService : NSObject <NSXPCConnectionDelegate, NSXPCListenerDelegate, MLMediaLibraryWriterDelegate, MLMediaLibraryServiceProtocol> {

	NSObject<OS_dispatch_queue>* _serialQueue;
	NSObject<OS_dispatch_queue>* _writerBeginTransactionQueue;
	NSObject<OS_dispatch_queue>* _writerUpdateQueue;
	NSObject<OS_dispatch_queue>* _validationSerialQueue;
	NSXPCListener* _xpcListener;
	NSMutableDictionary* _xpcTransactions;
	MLMediaLibraryWriter* _writer;
	NSError* _lastImportError;
	NSOperationQueue* _importOperationQueue;
	NSMutableArray* _suspendedImportOperations;
	NSTimer* _idleTimer;
	int _languageChangeNotifyToken;
	int _springboardFinishedStartupNotifyToken;
	int _homeSharingCachesClearedNotifyToken;
	NSObject<OS_dispatch_source>* _signalDispatchSource;
	NSMutableSet* _validatedDatabasePaths;

}
+(id)sharedInstance;
-(void)_idleTimerFired:(id)arg1 ;
-(void)_stopIdleTimer;
-(void)_registerForLanguageChangeNotifications;
-(void)_registerForHomeSharingCacheNotifications;
-(void)_setupSignalHandler;
-(void)_tearDownLanguageChangeNotifications;
-(void)_tearDownHomeSharingCacheNotifications;
-(void)_tearDownSignalHandler;
-(void)_handleValidationCompletedForLibrary:(id)arg1 ;
-(void)_suspendCurrentImportOperations;
-(void)_setXPCTransaction:(id)arg1 forDatabaseTransactionIdentifier:(id)arg2 ;
-(id)_xpcTransactionForDatabaseTransactionIdentifier:(id)arg1 ;
-(void)_performImportFromSource:(unsigned)arg1 fromXPCConnection:(id)arg2 intoDatabaseAtPath:(id)arg3 withTrackData:(id)arg4 options:(id)arg5 completionHandler:(/*^block*/ id)arg6 ;
-(void)_handleXPCDisconnect:(id)arg1 ;
-(void)_cancelImportOperationsForConnection:(id)arg1 ;
-(void)_handleImportOperationCancelled:(id)arg1 ;
-(void)_handleImportOperationComplete:(id)arg1 ;
-(void)_cancelAllImportOperations;
-(void)_exitForLocalizationChange;
-(void)_processLocalizationChange;
-(void)_handleHomeSharingCachesClearedNotification;
-(void)_handleDebugSignal;
-(void)_resumeSuspendedImportOperations;
-(void)dealloc;
-(id)init;
-(id)_init;
-(void)start;
-(void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(BOOL)arg3 ;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(oneway void)validateDatabaseAtPath:(id)arg1 withCompletionHandler:(/*^block*/ id)arg2 ;
-(oneway void)recreateDatabaseAtPath:(id)arg1 withCompletionHandler:(/*^block*/ id)arg2 ;
-(oneway void)beginTransactionForDatabaseAtPath:(id)arg1 withPriorityLevel:(unsigned)arg2 withCompletionHandler:(/*^block*/ id)arg3 ;
-(oneway void)executeUpdate:(id)arg1 withParameters:(id)arg2 onTransaction:(id)arg3 withCompletionHandler:(/*^block*/ id)arg4 ;
-(oneway void)executeQuery:(id)arg1 withParameters:(id)arg2 options:(id)arg3 onTransaction:(id)arg4 withCompletionHandler:(/*^block*/ id)arg5 ;
-(oneway void)endTransaction:(id)arg1 shouldCommit:(BOOL)arg2 withCompletionHandler:(/*^block*/ id)arg3 ;
-(oneway void)executeTemplatedDatabaseOperation:(unsigned)arg1 withAttributes:(id)arg2 options:(id)arg3 completionHandler:(/*^block*/ id)arg4 ;
-(oneway void)setOptions:(id)arg1 withCompletionHandler:(/*^block*/ id)arg2 ;
-(oneway void)performImportFromSource:(unsigned)arg1 intoDatabaseAtPath:(id)arg2 withTrackData:(id)arg3 options:(id)arg4 completionHandler:(/*^block*/ id)arg5 ;
-(oneway void)pollCurrentImportStatus:(/*^block*/ id)arg1 ;
-(void)mediaLibraryWriter:(id)arg1 terminatedTransaction:(id)arg2 withError:(id)arg3 ;
-(BOOL)mediaLibraryWriter:(id)arg1 shouldTerminateTransactionDueToInactivity:(id)arg2 ;
-(void)_resetIdleTimer;
-(void)_startIdleTimer;
-(void).cxx_destruct;
@end

