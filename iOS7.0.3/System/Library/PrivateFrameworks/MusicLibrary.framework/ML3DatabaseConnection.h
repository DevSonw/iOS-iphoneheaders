/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:55:52 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue, ML3DatabaseConnectionDelegate;
#import <MusicLibrary/MusicLibrary-Structs.h>
@class NSHashTable, NSObject, NSMutableArray, ML3DatabaseConnectionPool, NSString, NSUUID;

@interface ML3DatabaseConnection : NSObject {

	sqlite3Ref _sqlitedb;
	BOOL _isOpen;
	NSHashTable* _statementsCache;
	NSObject<OS_dispatch_queue>* _statementsCacheSerialQueue;
	unsigned _statementsSinceLastCheckpoint;
	unsigned _transactionLevel;
	BOOL _nestedTransactionWantsToRollback;
	NSMutableArray* _enqueuedTransactionCommitBlocks;
	ML3DatabaseConnectionPool* _owningPool;
	NSMutableArray* _registeredFunctions;
	NSMutableArray* _registeredModules;
	int _profilingLevel;
	int _willDeleteDatabaseNotifyToken;
	BOOL _isReadOnly;
	BOOL _automaticCheckpointingEnabled;
	<ML3DatabaseConnectionDelegate>* _connectionDelegate;
	NSString* _databasePath;
	unsigned _journalingMode;
	NSUUID* _uniqueIdentifier;
	const void* _iTunesExtensions;
	unsigned _checkpointStatementThreshold;

}

@property (assign,nonatomic,__weak) <ML3DatabaseConnectionDelegate> * connectionDelegate;              //@synthesize connectionDelegate=_connectionDelegate - In the implementation block
@property (nonatomic,readonly) NSString * databasePath;                                                //@synthesize databasePath=_databasePath - In the implementation block
@property (nonatomic,readonly) BOOL isOpen; 
@property (assign,setter=setReadOnly:,nonatomic) BOOL isReadOnly;                                      //@synthesize isReadOnly=_isReadOnly - In the implementation block
@property (assign,nonatomic) unsigned journalingMode;                                                  //@synthesize journalingMode=_journalingMode - In the implementation block
@property (nonatomic,readonly) BOOL isInTransaction; 
@property (assign,nonatomic) int profilingLevel; 
@property (nonatomic,readonly) NSUUID * uniqueIdentifier;                                              //@synthesize uniqueIdentifier=_uniqueIdentifier - In the implementation block
@property (assign,nonatomic) const void* iTunesExtensions;                                             //@synthesize iTunesExtensions=_iTunesExtensions - In the implementation block
@property (assign,nonatomic) BOOL automaticCheckpointingEnabled;                                       //@synthesize automaticCheckpointingEnabled=_automaticCheckpointingEnabled - In the implementation block
@property (assign,nonatomic) unsigned checkpointStatementThreshold;                                    //@synthesize checkpointStatementThreshold=_checkpointStatementThreshold - In the implementation block
-(BOOL)isOpen;
-(void)dealloc;
-(id)init;
-(BOOL)isEqual:(id)arg1 ;
-(id)description;
-(void)flush;
-(BOOL)close;
-(id)uniqueIdentifier;
-(BOOL)executeUpdate:(id)arg1 withParameters:(id)arg2 error:(id*)arg3 ;
-(id)executeQuery:(id)arg1 withParameters:(id)arg2 ;
-(BOOL)tableExists:(id)arg1 ;
-(id)executeQuery:(id)arg1 ;
-(BOOL)executeUpdate:(id)arg1 ;
-(BOOL)performTransactionWithBlock:(/*^block*/ id)arg1 ;
-(id)openBlobInTable:(id)arg1 column:(id)arg2 row:(long long)arg3 readOnly:(BOOL)arg4 ;
-(BOOL)isInTransaction;
-(sqlite3Ref)_sqliteHandle;
-(id)sqliteError;
-(BOOL)pushTransaction;
-(void)enqueueBlockForTransactionCommit:(/*^block*/ id)arg1 ;
-(BOOL)popTransactionAndCommit:(BOOL)arg1 ;
-(id)executeQuery:(id)arg1 withParameters:(id)arg2 limitProperty:(id)arg3 limitValue:(long long)arg4 ;
-(BOOL)popToRootTransactionAndCommit:(BOOL)arg1 ;
-(void)setConnectionDelegate:(id)arg1 ;
-(BOOL)pushTransactionUsingBehaviorType:(unsigned)arg1 ;
-(BOOL)databasePathExists;
-(id)initWithDatabasePath:(id)arg1 ;
-(BOOL)registerFunctionName:(id)arg1 argumentCount:(int)arg2 functionPointer:(/*function pointer*/ void*)arg3 ;
-(BOOL)registerFunctionName:(id)arg1 argumentCount:(int)arg2 functionPointer:(/*function pointer*/ void*)arg3 userData:(void*)arg4 ;
-(void)setITunesExtensions:(const void*)arg1 ;
-(const void*)iTunesExtensions;
-(BOOL)registerFunctionName:(id)arg1 argumentCount:(int)arg2 block:(/*^block*/ id)arg3 ;
-(BOOL)deleteDatabase;
-(BOOL)performTransactionWithBlock:(/*^block*/ id)arg1 usingBehaviorType:(unsigned)arg2 ;
-(unsigned)journalingMode;
-(void)_ensureConnectionIsOpen;
-(BOOL)_handleBusyLockWithNumberOfRetries:(int)arg1 ;
-(BOOL)_handleDatabaseCorruption;
-(int)_finalizeStatement:(id)arg1 removeFromCache:(BOOL)arg2 ;
-(void)_setOwningPool:(id)arg1 ;
-(void)setProfilingLevel:(int)arg1 ;
-(void)setJournalingMode:(unsigned)arg1 ;
-(BOOL)_isSharedMediaLibraryDatabase;
-(void)_updateProfilingLevel;
-(BOOL)_openWithFlags:(int)arg1 isRetry:(BOOL)arg2 ;
-(void)_createDatabaseDirectoryIfNonexistent;
-(BOOL)_handleZombieSQLiteConnection:(sqlite3Ref)arg1 ;
-(void)_logCurrentError;
-(void)_finalizeAllStatements;
-(id)_internalExecuteQuery:(id)arg1 withParameters:(id)arg2 limitProperty:(id)arg3 limitValue:(long long)arg4 ;
-(BOOL)_internalExecuteUpdate:(id)arg1 withParameters:(id)arg2 error:(id*)arg3 ;
-(BOOL)_internalBeginTransactionWithBehaviorType:(unsigned)arg1 ;
-(BOOL)_internalEndTransactionAndCommit:(BOOL)arg1 ;
-(void)_executeTransactionCommitBlocks:(BOOL)arg1 ;
-(id)_registeredModuleNamed:(id)arg1 ;
-(void)_resetUnfinalizedStatements;
-(id)_prepareStatement:(id)arg1 error:(id*)arg2 ;
-(BOOL)_executeStatement:(id)arg1 ;
-(int)_finalizeStatement:(id)arg1 ;
-(int)checkpointDatabase;
-(BOOL)_validatePreparedStatement:(id)arg1 error:(id*)arg2 ;
-(BOOL)_databaseFileExists;
-(void)_clearStatementCache;
-(int)profilingLevel;
-(BOOL)registerModuleName:(id)arg1 moduleMethods:(const sqlite3_module*)arg2 ;
-(void)setModuleContext:(void*)arg1 forModuleName:(id)arg2 contextReleaseBlock:(/*^block*/ id)arg3 ;
-(void*)moduleContextForModuleName:(id)arg1 ;
-(long long)lastInsertionRowID;
-(id)_owningPool;
-(unsigned)_transactionLevel;
-(void)_setTransactionLevel:(unsigned)arg1 ;
-(id)_shortDescription;
-(void)_createDatabaseFileIfNonexistent;
-(void)_logCurrentErrorWhilePerformingStatementOperation:(id)arg1 statementSQL:(id)arg2 ;
-(void)_logCurrentErrorWhilePerformingStatementOperation:(id)arg1 statement:(id)arg2 ;
-(id)connectionDelegate;
-(BOOL)automaticCheckpointingEnabled;
-(void)setAutomaticCheckpointingEnabled:(BOOL)arg1 ;
-(unsigned)checkpointStatementThreshold;
-(void)setCheckpointStatementThreshold:(unsigned)arg1 ;
-(BOOL)isReadOnly;
-(id)databasePath;
-(void).cxx_destruct;
-(BOOL)open;
-(void)setReadOnly:(BOOL)arg1 ;
@end

