/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:04:00 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <SpringBoard/SBAlertManagerDelegate.h>
#import <SpringBoard/SBAlertManagerObserver.h>
#import <UIKit/UIStatusBarStyleDelegate.h>
#import <UIKit/_UISettingsKeyObserver.h>

@protocol SBStarkScreenControllerDelegate, SBDisplayProtocol;
@class UIScreen, SBCarDisplaySettings, NSTimer, SBStarkLockOutViewController, SBStarkLockOutWindow, SBStarkDefaultHostingWindow, SBStarkHomeController, SBStarkNotificationWindow, SBStarkSiriWindow, _UIBackdropView, SBAlertManager, SBStarkScreenFocusController, SBStarkFakeIconOperationController, AVExternalDevice, UIWindow;

@interface SBStarkScreenController : NSObject <SBAlertManagerDelegate, SBAlertManagerObserver, UIStatusBarStyleDelegate, _UISettingsKeyObserver> {

	UIScreen* _screen;
	SBCarDisplaySettings* _settings;
	<SBStarkScreenControllerDelegate>* _delegate;
	<SBDisplayProtocol>* _topDisplay;
	int _lockOutMode;
	NSTimer* _lockOutModeUpdateTimer;
	SBStarkLockOutViewController* _lockOutViewController;
	SBStarkLockOutWindow* _lockOutWindow;
	SBStarkDefaultHostingWindow* _defaultHostingWindow;
	SBStarkHomeController* _homeController;
	SBStarkNotificationWindow* _notificationWindow;
	SBStarkSiriWindow* _siriWindow;
	_UIBackdropView* _siriBackdropView;
	BOOL _showingSiri;
	SBAlertManager* _alertManager;
	id _starkScreenBorrowingToken;
	SBStarkScreenFocusController* _focusController;
	SBStarkFakeIconOperationController* _fakeIconOperationController;
	AVExternalDevice* _externalDevice;

}

@property (nonatomic,readonly) UIScreen * screen;                                       //@synthesize screen=_screen - In the implementation block
@property (assign,nonatomic) <SBStarkScreenControllerDelegate> * delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) int state; 
@property (nonatomic,retain) <SBDisplayProtocol> * topDisplay; 
@property (nonatomic,readonly) UIWindow * mainWindow; 
@property (nonatomic,readonly) UIWindow * animationWindow; 
@property (nonatomic,readonly) SBAlertManager * alertManager;                           //@synthesize alertManager=_alertManager - In the implementation block
-(id)focusWindow;
-(id)alertManager;
-(BOOL)alertManager:(id)arg1 shouldDeactivateDismissedAlert:(id)arg2 ;
-(id)alertManager:(id)arg1 newAlertWindowForLockAlerts:(BOOL)arg2 ;
-(void)alertManager:(id)arg1 willActivateAlert:(id)arg2 overAlerts:(id)arg3 ;
-(void)alertManager:(id)arg1 didDeactivateAlert:(id)arg2 top:(BOOL)arg3 ;
-(void)alertManagerDidChangeTopAlert:(id)arg1 ;
-(void)alertManager:(id)arg1 willTearDownAlertWindow:(id)arg2 ;
-(void)handleLongBackPress;
-(id)topDisplay;
-(void)updateStatusBarStateForDisplay:(id)arg1 withAnimationFactory:(id)arg2 ;
-(void)handleUnhandledBack;
-(void)dismissSiriWithFade:(double)arg1 completion:(/*^block*/ id)arg2 ;
-(void)dismissSiri:(BOOL)arg1 completion:(/*^block*/ id)arg2 ;
-(void)presentSiri:(BOOL)arg1 viewController:(id)arg2 ;
-(id)animationWindow;
-(void)_takeScreenRequested:(id)arg1 ;
-(void)_updateLockOutMode;
-(void)_tearDownAndInvalidate:(BOOL)arg1 ;
-(void)_setShowingSiri:(BOOL)arg1 ;
-(void)_cancelInitialAppLaunchTimer;
-(void)setTopDisplay:(id)arg1 withAnimationFactory:(id)arg2 ;
-(void)_dismissSiriWithDuration:(double)arg1 animations:(/*^block*/ id)arg2 completion:(/*^block*/ id)arg3 ;
-(BOOL)_shouldLaunchMapsAtConnect;
-(void)_launchInitialAppIfNecessary;
-(void)_createFakeIconOperationController;
-(void)_startInitialAppLaunchTimer;
-(void)_showNowPlaying;
-(BOOL)allowInCallOverrideStyle;
-(BOOL)allowNavigationOverrideStyle;
-(void)setTopDisplay:(id)arg1 ;
-(void)handleUncompletedAppLaunch;
-(void)_updateLockOutModeAfterDelay;
-(id)initWithScreen:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(int)state;
-(void)invalidate;
-(id)screen;
-(int)statusBar:(id)arg1 styleForRequestedStyle:(int)arg2 overrides:(int)arg3 ;
-(void)statusBar:(id)arg1 willAnimateFromHeight:(float)arg2 toHeight:(float)arg3 duration:(double)arg4 animation:(int)arg5 ;
-(void)statusBar:(id)arg1 didAnimateFromHeight:(float)arg2 toHeight:(float)arg3 animation:(int)arg4 ;
-(void)settings:(id)arg1 changedValueForKey:(id)arg2 ;
-(void)statusBar:(id)arg1 didTriggerButtonType:(int)arg2 withAction:(int)arg3 ;
-(id)mainWindow;
@end

