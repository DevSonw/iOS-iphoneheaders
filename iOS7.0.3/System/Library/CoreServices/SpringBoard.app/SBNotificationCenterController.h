/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:04:05 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <SpringBoard/SBBulletinWindowClient.h>
#import <SpringBoard/SBNotificationCenterViewControllerDelegate.h>
#import <SpringBoard/SBWidgetViewControllerHostDelegate.h>
#import <UIKit/_UISettingsKeyObserver.h>

@class SBNotificationCenterViewController, UIView, SBApplication, SBChevronView, NSArray, SBUnlockActionContext, SBNotificationCenterSettings, SBWindow;

@interface SBNotificationCenterController : NSObject <SBBulletinWindowClient, SBNotificationCenterViewControllerDelegate, SBWidgetViewControllerHostDelegate, _UISettingsKeyObserver> {

	SBNotificationCenterViewController* _viewController;
	UIView* _coveredContentSnapshot;
	SBApplication* _coveredApplication;
	SBChevronView* _borrowedGrabberView;
	/*^block*/ id _borrowedGrabberWillPresentBlock;
	/*^block*/ id _borrowedGrabberHideBlock;
	/*^block*/ id _borrowedGrabberCompletionBlock;
	NSArray* _dataProviders;
	id _keyboardNotificationObserverToken;
	SBUnlockActionContext* _unlockActionContext;
	int _presentationState;
	SBNotificationCenterSettings* _settings;
	struct {
		unsigned isPresentingOrDismissing : 1;
		unsigned isGrabberEnabled : 1;
	}  _notificationCenterControllerFlags;

}

@property (nonatomic,readonly) SBNotificationCenterViewController * viewController;                                                    //@synthesize viewController=_viewController - In the implementation block
@property (nonatomic,readonly) SBNotificationCenterSettings * settings;                                                                //@synthesize settings=_settings - In the implementation block
@property (nonatomic,readonly) SBWindow * window; 
@property (getter=isVisible,nonatomic,readonly) BOOL visible; 
@property (getter=isAvailableWhileLocked,nonatomic,readonly) BOOL availableWhileLocked; 
@property (getter=isNotificationsViewAvailableWhileLocked,nonatomic,readonly) BOOL notificationsViewAvailableWhileLocked; 
@property (getter=isTodayViewAvailableWhileLocked,nonatomic,readonly) BOOL todayViewAvailableWhileLocked; 
@property (getter=isGrabberVisible,nonatomic,readonly) BOOL grabberVisible; 
@property (assign,getter=isGrabberEnabled,nonatomic) BOOL grabberEnabled; 
@property (getter=isPresentingWidgetContent,nonatomic,readonly) BOOL presentingWidgetContent; 
@property (assign,nonatomic) BOOL blursBackground; 
@property (nonatomic,readonly) SBUnlockActionContext * unlockActionContext;                                                            //@synthesize unlockActionContext=_unlockActionContext - In the implementation block
+(id)_sharedInstanceCreateIfNecessary:(BOOL)arg1 ;
+(id)newDynamicAnimationForShow:(BOOL)arg1 targetValue:(double)arg2 withInitialValue:(double)arg3 velocity:(double)arg4 extraPull:(BOOL)arg5 ;
+(double)transitionAnimationDuration;
+(id)sharedInstance;
+(id)sharedInstanceIfExists;
-(void)publishSectionInfoIfNecessary;
-(BOOL)isGrabberVisible;
-(void)reloadAllWidgets;
-(void)setGrabberEnabled:(BOOL)arg1 ;
-(void)beginPresentationWithTouchLocation:(CGPoint)arg1 ;
-(BOOL)canShowHideGrabberView;
-(void)cancelTransition;
-(void)hideGrabberAnimated:(BOOL)arg1 completion:(/*^block*/ id)arg2 ;
-(void)beginDismissalWithTouchLocation:(CGPoint)arg1 ;
-(void)showGrabberAnimated:(BOOL)arg1 ;
-(void)presentAnimated:(BOOL)arg1 ;
-(void)finishedScrollTest;
-(void)dismissAnimated:(BOOL)arg1 completion:(/*^block*/ id)arg2 ;
-(void)presentAnimated:(BOOL)arg1 completion:(/*^block*/ id)arg2 ;
-(void)runScrollTest:(id)arg1 iterations:(int)arg2 delta:(int)arg3 ;
-(BOOL)handleActionForBulletin:(id)arg1 ;
-(id)unlockActionContext;
-(BOOL)isAvailableWhileLocked;
-(void)prepareLayoutForPresentationFromBanner;
-(void)bulletinWindowWillRotateToOrientation:(int)arg1 duration:(double)arg2 ;
-(void)bulletinWindowIsAnimatingRotationToOrientation:(int)arg1 duration:(double)arg2 ;
-(void)bulletinWindowDidRotateFromOrientation:(int)arg1 ;
-(void)dismissAnimated:(BOOL)arg1 withStepper:(/*^block*/ id)arg2 completion:(/*^block*/ id)arg3 fromCurrentState:(BOOL)arg4 ;
-(void)widget:(id)arg1 requestsPresentationOfViewController:(id)arg2 presentationStyle:(int)arg3 context:(id)arg4 completion:(/*^block*/ id)arg5 ;
-(void)widget:(id)arg1 requestsLaunchOfURL:(id)arg2 ;
-(void)biometricEventMonitorDidAuthenticate:(id)arg1 ;
-(void)invalidateUnlockActionContext;
-(void)unregisterSharedGrabberView;
-(void)registerSharedGrabberView:(id)arg1 withWillPresentBlock:(/*^block*/ id)arg2 hideBlock:(/*^block*/ id)arg3 andCompletion:(/*^block*/ id)arg4 ;
-(id)widgetViewControllerHostDelegate:(id)arg1 ;
-(BOOL)isTodayViewAvailableWhileLocked;
-(BOOL)isNotificationsViewAvailableWhileLocked;
-(void)buddyCompleted:(id)arg1 ;
-(BOOL)_isNotificationCenterViewWithFeatureKeyAvailableWhileLocked:(id)arg1 isLockedDownByRestrictions:(BOOL*)arg2 ;
-(BOOL)_isNotificationCenterViewAvailableWhileLockedWithProfileBlock:(/*^block*/ id)arg1 counterpartBlock:(/*^block*/ id)arg2 ;
-(BOOL)isPresentingWidgetContent;
-(void)dismissPresentedWidgetContentAnimated:(BOOL)arg1 ;
-(void)_updateCoveredContentSnapshot;
-(void)_insertCoveredContentSnapshotIfNecessary:(id)arg1 ;
-(BOOL)isGrabberEnabled;
-(void)_setupForViewPresentation;
-(void)_removeCoveredContentSnapshot;
-(void)_invalidateCoveredContentSnapshot;
-(void)_setGrabberEnabled:(BOOL)arg1 ;
-(void)_setupForPresentationWithTouchLocation:(CGPoint)arg1 ;
-(void)_setupForDismissalWithTouchLocation:(CGPoint)arg1 ;
-(void)endTransitionWithVelocity:(CGPoint)arg1 additionalValueApplier:(/*^block*/ id)arg2 completion:(/*^block*/ id)arg3 ;
-(void)_present:(BOOL)arg1 stepper:(/*^block*/ id)arg2 ;
-(void)_present:(BOOL)arg1 withStandardAnimation:(BOOL)arg2 stepper:(/*^block*/ id)arg3 completion:(/*^block*/ id)arg4 fromCurrentState:(BOOL)arg5 ;
-(void)_updateForChangeInMessagePrivacy;
-(BOOL)_handleActionOrRequestWithDefaultAction:(/*^block*/ id)arg1 lockedAction:(/*^block*/ id)arg2 ;
-(id)_sectionForWidgetBundle:(id)arg1 forCategory:(int)arg2 ;
-(id)_copyDefaultEnabledWidgetIDs;
-(id)_sectionWithIdentifier:(id)arg1 forCategory:(int)arg2 ;
-(id)_widgetSections;
-(BOOL)doesSectionWithIdentifierUpdateMessagePrivacyViaSectionParameters:(id)arg1 ;
-(BOOL)_shouldSelectViewControllerAtTouchLocation;
-(void)updateTransitionWithTouchLocation:(CGPoint)arg1 velocity:(CGPoint)arg2 ;
-(void)endTransitionWithVelocity:(CGPoint)arg1 completion:(/*^block*/ id)arg2 ;
-(void)_cleanupAfterTransition:(BOOL)arg1 ;
-(void)dealloc;
-(id)window;
-(id)init;
-(id)viewController;
-(BOOL)isVisible;
-(void)settings:(id)arg1 changedValueForKey:(id)arg2 ;
-(id)settings;
-(void)dismissAnimated:(BOOL)arg1 ;
-(BOOL)blursBackground;
-(void)setBlursBackground:(BOOL)arg1 ;
-(BOOL)handleMenuButtonTap;
@end

