/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:04:15 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/CoreServices/VoiceOverTouch.app/vot
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <vot/vot-Structs.h>
#import <vot/VOTElementUpdateProtocol.h>

@protocol VOTEventFactoryCallbackProtocol;
@class VOTElementManager, SCRCGestureFactory, VOTGestureEvent, NSLock, VOTElement, SCRCTargetSelectorTimer, NSArray, NSString, SCRCThread, AXTimer, VOTHandwritingManager;

@interface VOTEventFactory : NSObject <VOTElementUpdateProtocol> {

	VOTElementManager* _elementManager;
	<VOTEventFactoryCallbackProtocol>* _delegate;
	SCRCGestureFactory* _gestureFactory;
	int _state;
	int _direction;
	int _rotorSoundZone;
	int _continuityZone;
	float _startPinchDistance;
	int _fingerCount;
	float _travelDistance;
	CGPoint _tapHoldOffset;
	VOTGestureEvent* _lastDownEvent;
	NSLock* _currentElementLock;
	VOTElement* _currentElement;
	double _lastEchoTime;
	double _rotateStartTime;
	int _rotateDirection;
	SCRCTargetSelectorTimer* _tapHoldTimer;
	SCRCTargetSelectorTimer* _scrollStatusTimer;
	SCRCTargetSelectorTimer* _twoFingerHoldTimer;
	SCRCTargetSelectorTimer* _memorizeSoundTimer;
	SCRCTargetSelectorTimer* _systemControlLocationTimer;
	CGPoint _nativeSlidingOffset;
	CGPoint _nativeSlidingCenter;
	double _lastTwoFingerSlideTime;
	AXObserverRef _axEventObserver;
	VOTGestureEvent* _currentGestureEvent;
	NSArray* _directInteractionElements;
	NSString* _zoomListenerIdentifier;
	SCD_Struct_VO19 _zigzag;
	double _lastNativeSlideCancel;
	unsigned _tapAndHoldContextId;
	CGPoint _systemControlStartPoint;
	int _systemControlPosition;
	BOOL _systemControlActivated;
	double _systemControlStartSwipeTime;
	double _systemControlFingerDownFollowupTime;
	IOHIDEventSystemClientRef _ioSystemFilterClient;
	SCRCThread* _filterThread;
	struct {
		BOOL tapAndHoldMode;
		BOOL firedScrollStatus;
		BOOL rotating;
		BOOL memorizingData;
		BOOL twoFingerTapAndSlide;
		BOOL didPlayStartLabelSound;
		BOOL sendingToDirectTouch;
		BOOL sendingToNativeSlide;
		BOOL gestureSawDownEvent;
	}  _flags;
	AXTimer* _handwritingCaptureTimer;

}

@property (nonatomic,@dynamic,readonly) BOOL tapAndHoldMode; 
@property (assign,nonatomic) VOTElementManager * elementManager;                                                  //@synthesize elementManager=_elementManager - In the implementation block
@property (assign,nonatomic) <VOTEventFactoryCallbackProtocol> * delegate;                                        //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,@dynamic,readonly) CGPoint fingerPosition; 
@property (nonatomic,@dynamic,readonly) unsigned fingerCount; 
@property (assign,nonatomic,@dynamic) int orientation; 
@property (nonatomic,readonly) VOTHandwritingManager * handwritingManager; 
@property (setter=_setHandwritingCaptureTimer:,nonatomic,retain) AXTimer * _handwritingCaptureTimer;              //@synthesize handwritingCaptureTimer=_handwritingCaptureTimer - In the implementation block
+(CGPoint)convertDevicePointToZoomedPoint:(CGPoint)arg1 ;
-(void)_handleIOHIDEvent:(IOHIDEventRef)arg1 ;
-(void)_handleEventWithData:(id)arg1 ;
-(id)currentElement;
-(void)resetEventFactory;
-(void)unregisterForEvents;
-(BOOL)registerForEvents;
-(BOOL)shouldHandwritingParticipateInEvents;
-(id)handwritingManager;
-(void)processEvent:(id)arg1 ;
-(BOOL)directTouchElementsPresent;
-(void)startTapAndHoldMode;
-(CGPoint)fingerPosition;
-(BOOL)tapAndHoldMode;
-(void)directInteractionElementsUpdated:(id)arg1 ;
-(void)currentElementDidUpdate:(id)arg1 ;
-(void)_setHandwritingCaptureTimer:(id)arg1 ;
-(void)_tapHoldFired;
-(void)_scrollStatusFired;
-(void)_twoFingerHoldFired;
-(void)_startLabelElementSoundPlay;
-(void)_systemControlLocationTimer;
-(void)_beginNativeSliding:(id)arg1 ;
-(void)_handleRotorChangedNotification:(id)arg1 ;
-(void)_registerForIOHIDUsage;
-(void)_convertZoomRecordToDeviceRecord:(id)arg1 ;
-(void)_processGestureEvent:(id)arg1 ;
-(void)_installEventFilter;
-(void)_registerForZoomListener;
-(long)_registerForAXNotifications:(BOOL)arg1 ;
-(void)_updateFingerInSystemControlLocation:(id)arg1 ;
-(void)_cancelTapAndHold:(CGPoint)arg1 ;
-(int)_systemControlPosition:(CGPoint)arg1 ;
-(void)_sendSystemControlEvent:(id)arg1 ;
-(void)_resetSystemControlStatus;
-(void)_stopMemorizingSession;
-(void)_processIdle:(CGPoint)arg1 ;
-(id)_handwritingCaptureTimer;
-(BOOL)_handleDirectInteractionEvent:(id)arg1 ;
-(BOOL)_gestureEventIsInvalid:(id)arg1 ;
-(void)_feedEventToHandwritingRecognition:(id)arg1 ;
-(void)_processTapAndHoldMode:(id)arg1 ;
-(CGPoint)_convertZoomPointToDevicePoint:(CGPoint)arg1 ;
-(BOOL)_eventFilter:(IOHIDEventRef)arg1 ;
-(id)elementManager;
-(void)setElementManager:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(int)orientation;
-(void)setOrientation:(int)arg1 ;
-(unsigned)fingerCount;
-(void)gestureTrackingCallbackWithFactory:(id)arg1 ;
-(void)gestureTappingCallbackWithFactory:(id)arg1 ;
-(void)gestureSplitTappingCallbackWithFactory:(id)arg1 ;
@end

