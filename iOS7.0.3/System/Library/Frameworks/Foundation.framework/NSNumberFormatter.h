/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:52:18 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <Foundation/NSFormatter.h>

@class NSMutableDictionary, NSRecursiveLock;

@interface NSNumberFormatter : NSFormatter {

	NSMutableDictionary* _attributes;
	CFNumberFormatterRef _formatter;
	unsigned _counter;
	unsigned _behavior;
	NSRecursiveLock* _lock;
	void** _reserved[10];

}
+(id)mf_formatInteger:(int)arg1 withGrouping:(BOOL)arg2 ;
+(id)mf_formatUnsignedInteger:(unsigned)arg1 withGrouping:(BOOL)arg2 ;
+(void)setDefaultFormatterBehavior:(unsigned)arg1 ;
+(unsigned)defaultFormatterBehavior;
+(void)initialize;
+(id)localizedStringFromNumber:(id)arg1 numberStyle:(unsigned)arg2 ;
-(unsigned)roundingMode;
-(id)attributedStringForObjectValue:(id)arg1 withDefaultAttributes:(id)arg2 ;
-(BOOL)getObjectValue:(out id*)arg1 forString:(id)arg2 range:(inout NSRange*)arg3 error:(out id*)arg4 ;
-(void)_clearFormatter;
-(void)setNilSymbol:(id)arg1 ;
-(void)setPositiveInfinitySymbol:(id)arg1 ;
-(void)setNegativeInfinitySymbol:(id)arg1 ;
-(void)setAllowsFloats:(BOOL)arg1 ;
-(id)nilSymbol;
-(id)notANumberSymbol;
-(id)zeroSymbol;
-(id)negativeInfinitySymbol;
-(id)positiveInfinitySymbol;
-(void)_regenerateFormatter;
-(id)positiveFormat;
-(void*)__Keynote_NOOP;
-(id)numberFromString:(id)arg1 ;
-(unsigned)numberStyle;
-(BOOL)generatesDecimalNumbers;
-(unsigned)formatterBehavior;
-(id)negativeFormat;
-(void)setNegativeFormat:(id)arg1 ;
-(id)textAttributesForNegativeValues;
-(void)setTextAttributesForNegativeValues:(id)arg1 ;
-(void)setPositiveFormat:(id)arg1 ;
-(id)textAttributesForPositiveValues;
-(void)setTextAttributesForPositiveValues:(id)arg1 ;
-(BOOL)allowsFloats;
-(void)setDecimalSeparator:(id)arg1 ;
-(BOOL)alwaysShowsDecimalSeparator;
-(void)setAlwaysShowsDecimalSeparator:(BOOL)arg1 ;
-(id)currencyDecimalSeparator;
-(void)setCurrencyDecimalSeparator:(id)arg1 ;
-(BOOL)usesGroupingSeparator;
-(void)setGroupingSeparator:(id)arg1 ;
-(id)textAttributesForZero;
-(void)setTextAttributesForZero:(id)arg1 ;
-(id)textAttributesForNil;
-(void)setTextAttributesForNil:(id)arg1 ;
-(void)setNotANumberSymbol:(id)arg1 ;
-(id)textAttributesForNotANumber;
-(void)setTextAttributesForNotANumber:(id)arg1 ;
-(id)textAttributesForPositiveInfinity;
-(void)setTextAttributesForPositiveInfinity:(id)arg1 ;
-(id)textAttributesForNegativeInfinity;
-(void)setTextAttributesForNegativeInfinity:(id)arg1 ;
-(void)setPositivePrefix:(id)arg1 ;
-(void)setPositiveSuffix:(id)arg1 ;
-(void)setNegativePrefix:(id)arg1 ;
-(void)setNegativeSuffix:(id)arg1 ;
-(BOOL)_hasSetCurrencyCode;
-(id)currencySymbol;
-(BOOL)_hasSetCurrencySymbol;
-(void)setCurrencySymbol:(id)arg1 ;
-(id)internationalCurrencySymbol;
-(void)setInternationalCurrencySymbol:(id)arg1 ;
-(BOOL)_hasSetInternationalCurrencySymbol;
-(id)percentSymbol;
-(void)setPercentSymbol:(id)arg1 ;
-(id)perMillSymbol;
-(void)setPerMillSymbol:(id)arg1 ;
-(id)minusSign;
-(void)setMinusSign:(id)arg1 ;
-(id)plusSign;
-(void)setPlusSign:(id)arg1 ;
-(id)exponentSymbol;
-(void)setExponentSymbol:(id)arg1 ;
-(unsigned)groupingSize;
-(void)setGroupingSize:(unsigned)arg1 ;
-(unsigned)secondaryGroupingSize;
-(void)setSecondaryGroupingSize:(unsigned)arg1 ;
-(unsigned)formatWidth;
-(void)setFormatWidth:(unsigned)arg1 ;
-(void)setMultiplier:(id)arg1 ;
-(id)paddingCharacter;
-(void)setPaddingCharacter:(id)arg1 ;
-(unsigned)paddingPosition;
-(void)setPaddingPosition:(unsigned)arg1 ;
-(void)setRoundingMode:(unsigned)arg1 ;
-(id)roundingIncrement;
-(void)setRoundingIncrement:(id)arg1 ;
-(unsigned)minimumIntegerDigits;
-(void)setMinimumIntegerDigits:(unsigned)arg1 ;
-(unsigned)maximumIntegerDigits;
-(void)setMaximumIntegerDigits:(unsigned)arg1 ;
-(unsigned)minimumFractionDigits;
-(void)setMinimumFractionDigits:(unsigned)arg1 ;
-(unsigned)maximumFractionDigits;
-(id)minimum;
-(void)setMinimum:(id)arg1 ;
-(id)maximum;
-(void)setMaximum:(id)arg1 ;
-(id)currencyGroupingSeparator;
-(void)setCurrencyGroupingSeparator:(id)arg1 ;
-(BOOL)isLenient;
-(void)setLenient:(BOOL)arg1 ;
-(BOOL)usesSignificantDigits;
-(void)setUsesSignificantDigits:(BOOL)arg1 ;
-(unsigned)minimumSignificantDigits;
-(void)setMinimumSignificantDigits:(unsigned)arg1 ;
-(unsigned)maximumSignificantDigits;
-(void)setMaximumSignificantDigits:(unsigned)arg1 ;
-(BOOL)isPartialStringValidationEnabled;
-(void)setPartialStringValidationEnabled:(BOOL)arg1 ;
-(BOOL)_usesCharacterDirection;
-(void)_setUsesCharacterDirection:(BOOL)arg1 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(id)copyWithZone:(NSZoneRef)arg1 ;
-(void)setLocale:(id)arg1 ;
-(void)_reset;
-(id)locale;
-(id)stringForObjectValue:(id)arg1 ;
-(id)stringFromNumber:(id)arg1 ;
-(void)setFormatterBehavior:(unsigned)arg1 ;
-(void)setNumberStyle:(unsigned)arg1 ;
-(void)setGeneratesDecimalNumbers:(BOOL)arg1 ;
-(id)multiplier;
-(void)setZeroSymbol:(id)arg1 ;
-(void)setMaximumFractionDigits:(unsigned)arg1 ;
-(BOOL)getObjectValue:(out id*)arg1 forString:(id)arg2 errorDescription:(out id*)arg3 ;
-(id)currencyCode;
-(void)setCurrencyCode:(id)arg1 ;
-(void)finalize;
-(void)setUsesGroupingSeparator:(BOOL)arg1 ;
-(id)decimalSeparator;
-(id)groupingSeparator;
-(id)positivePrefix;
-(id)positiveSuffix;
-(id)negativePrefix;
-(id)negativeSuffix;
@end

