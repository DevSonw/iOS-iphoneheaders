/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:52:18 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <CFNetwork/__NSCFURLSessionConfiguration.h>
#import <CoreFoundation/NSCopying.h>

@class NSString, NSDictionary, NSHTTPCookieStorage, NSURLCredentialStorage, NSURLCache, NSArray;

@interface NSURLSessionConfiguration : __NSCFURLSessionConfiguration <NSCopying> {

	BOOL _allowsCellularAccess;
	BOOL _discretionary;
	BOOL _sessionSendsLaunchEvents;
	BOOL _HTTPShouldUsePipelining;
	BOOL _HTTPShouldSetCookies;
	NSString* _identifier;
	unsigned _requestCachePolicy;
	unsigned _networkServiceType;
	NSDictionary* _connectionProxyDictionary;
	int _TLSMinimumSupportedProtocol;
	int _TLSMaximumSupportedProtocol;
	unsigned _HTTPCookieAcceptPolicy;
	NSDictionary* _HTTPAdditionalHeaders;
	int _HTTPMaximumConnectionsPerHost;
	NSHTTPCookieStorage* _HTTPCookieStorage;
	NSURLCredentialStorage* _URLCredentialStorage;
	NSURLCache* _URLCache;
	NSArray* _protocolClasses;
	double _timeoutIntervalForRequest;
	double _timeoutIntervalForResource;

}

@property (readonly) NSString * identifier;                                    //@synthesize identifier=_identifier - In the implementation block
@property (assign) unsigned requestCachePolicy;                                //@synthesize requestCachePolicy=_requestCachePolicy - In the implementation block
@property (assign) double timeoutIntervalForRequest;                           //@synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest - In the implementation block
@property (assign) double timeoutIntervalForResource;                          //@synthesize timeoutIntervalForResource=_timeoutIntervalForResource - In the implementation block
@property (assign) unsigned networkServiceType;                                //@synthesize networkServiceType=_networkServiceType - In the implementation block
@property (assign) BOOL allowsCellularAccess;                                  //@synthesize allowsCellularAccess=_allowsCellularAccess - In the implementation block
@property (getter=isDiscretionary) BOOL discretionary;                         //@synthesize discretionary=_discretionary - In the implementation block
@property (assign) BOOL sessionSendsLaunchEvents;                              //@synthesize sessionSendsLaunchEvents=_sessionSendsLaunchEvents - In the implementation block
@property (copy) NSDictionary * connectionProxyDictionary;                     //@synthesize connectionProxyDictionary=_connectionProxyDictionary - In the implementation block
@property (assign) int TLSMinimumSupportedProtocol;                            //@synthesize TLSMinimumSupportedProtocol=_TLSMinimumSupportedProtocol - In the implementation block
@property (assign) int TLSMaximumSupportedProtocol;                            //@synthesize TLSMaximumSupportedProtocol=_TLSMaximumSupportedProtocol - In the implementation block
@property (assign) BOOL HTTPShouldUsePipelining;                               //@synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining - In the implementation block
@property (assign) BOOL HTTPShouldSetCookies;                                  //@synthesize HTTPShouldSetCookies=_HTTPShouldSetCookies - In the implementation block
@property (assign) unsigned HTTPCookieAcceptPolicy;                            //@synthesize HTTPCookieAcceptPolicy=_HTTPCookieAcceptPolicy - In the implementation block
@property (copy) NSDictionary * HTTPAdditionalHeaders;                         //@synthesize HTTPAdditionalHeaders=_HTTPAdditionalHeaders - In the implementation block
@property (assign) int HTTPMaximumConnectionsPerHost;                          //@synthesize HTTPMaximumConnectionsPerHost=_HTTPMaximumConnectionsPerHost - In the implementation block
@property (retain) NSHTTPCookieStorage * HTTPCookieStorage;                    //@synthesize HTTPCookieStorage=_HTTPCookieStorage - In the implementation block
@property (retain) NSURLCredentialStorage * URLCredentialStorage;              //@synthesize URLCredentialStorage=_URLCredentialStorage - In the implementation block
@property (retain) NSURLCache * URLCache;                                      //@synthesize URLCache=_URLCache - In the implementation block
@property (copy) NSArray * protocolClasses;                                    //@synthesize protocolClasses=_protocolClasses - In the implementation block
+(void)initialize;
-(unsigned)requestCachePolicy;
-(void)setRequestCachePolicy:(unsigned)arg1 ;
-(double)timeoutIntervalForRequest;
-(void)setTimeoutIntervalForRequest:(double)arg1 ;
-(double)timeoutIntervalForResource;
-(void)setTimeoutIntervalForResource:(double)arg1 ;
-(unsigned)networkServiceType;
-(void)setNetworkServiceType:(unsigned)arg1 ;
-(BOOL)allowsCellularAccess;
-(void)setAllowsCellularAccess:(BOOL)arg1 ;
-(BOOL)isDiscretionary;
-(void)setDiscretionary:(BOOL)arg1 ;
-(BOOL)sessionSendsLaunchEvents;
-(void)setSessionSendsLaunchEvents:(BOOL)arg1 ;
-(id)connectionProxyDictionary;
-(void)setConnectionProxyDictionary:(id)arg1 ;
-(int)TLSMinimumSupportedProtocol;
-(void)setTLSMinimumSupportedProtocol:(int)arg1 ;
-(int)TLSMaximumSupportedProtocol;
-(void)setTLSMaximumSupportedProtocol:(int)arg1 ;
-(BOOL)HTTPShouldUsePipelining;
-(void)setHTTPShouldUsePipelining:(BOOL)arg1 ;
-(BOOL)HTTPShouldSetCookies;
-(void)setHTTPShouldSetCookies:(BOOL)arg1 ;
-(unsigned)HTTPCookieAcceptPolicy;
-(void)setHTTPCookieAcceptPolicy:(unsigned)arg1 ;
-(id)HTTPAdditionalHeaders;
-(void)setHTTPAdditionalHeaders:(id)arg1 ;
-(int)HTTPMaximumConnectionsPerHost;
-(void)setHTTPMaximumConnectionsPerHost:(int)arg1 ;
-(id)HTTPCookieStorage;
-(void)setHTTPCookieStorage:(id)arg1 ;
-(id)URLCredentialStorage;
-(void)setURLCredentialStorage:(id)arg1 ;
-(id)URLCache;
-(void)setURLCache:(id)arg1 ;
-(id)protocolClasses;
-(void)setProtocolClasses:(id)arg1 ;
-(id)identifier;
@end

