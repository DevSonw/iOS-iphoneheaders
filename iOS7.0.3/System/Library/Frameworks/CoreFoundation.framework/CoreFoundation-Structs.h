/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:51:55 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

typedef struct _NSZone* NSZoneRef;

typedef struct __CFString* CFStringRef;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct __CFRunLoop* CFRunLoopRef;

typedef struct {
	int field1;
	void field2;
	/*function pointer*/ void* field3;
	/*function pointer*/ void* field4;
	/*function pointer*/ void* field5;
} SCD_Struct_NS4;

typedef struct __CFData* CFDataRef;

typedef struct sqlite3_stmt* sqlite3_stmtRef;

typedef struct {
	int field1;
	int field2;
} SCD_Struct_NS7;

typedef struct __CFAllocator* CFAllocatorRef;

typedef struct {
	int version;
	void info;
	/*function pointer*/ void* retain;
	/*function pointer*/ void* release;
	/*function pointer*/ void* copyDescription;
} SCD_Struct_CF9;

typedef union {
	/*function pointer*/ void* _rcb;
	/*function pointer*/ void* _wcb;
	/*function pointer*/ void* genericCallback;
	void genericPointer;
} SCD_Union_CF10;

typedef struct __CFArray* CFArrayRef;

typedef struct __CFURL* CFURLRef;

typedef struct timespec {
	int tv_sec;
	long tv_nsec;
} timespec;

typedef struct CFXPreferencesStatInfo {
	unsigned long long st_ino;
	long long st_size;
	timespec st_mtimex;
} CFXPreferencesStatInfo;

typedef struct opaque_pthread_mutex_t {
	long __sig;
	BOOL __opaque[40];
} opaque_pthread_mutex_t;

typedef struct {
	unsigned long field1;
	id field2;
	unsigned long field3;
	unsigned long field4[5];
} SCD_Struct_NS16;

typedef struct {
	NSMethodFrameArgInfo field1;
	NSMethodFrameArgInfo field2;
	unsigned field3;
	unsigned field4;
} SCD_Struct_NS17;

typedef struct {
	id field1;
	id field2;
	id field3;
	id field4;
	int field5;
	id field6;
	id field7;
	id field8;
} SCD_Struct_NS18;

typedef struct __CFBasicHash* CFBasicHashRef;

typedef struct _filesec* filesecRef;

typedef struct _acl* aclRef;

