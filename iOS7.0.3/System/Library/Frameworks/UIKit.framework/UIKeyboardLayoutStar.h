/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:53:32 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIKeyboardLayout.h>

@protocol UIKeyboardRivenTransitionView;
@class UIKBTree, NSString, UIKBKeyplaneView, UIKBBackgroundView, NSMutableDictionary, NSMutableSet, UISwipeGestureRecognizer, UIView, CADisplayLink, UIDelayedAction, NSTimer, UIKBRenderConfig;

@interface UIKeyboardLayoutStar : UIKeyboardLayout {

	UIKBTree* _keyboard;
	UIKBTree* _keyplane;
	NSString* _keyboardName;
	NSString* _keyplaneName;
	int _appearance;
	UIKBTree* _activeKey;
	UIKBKeyplaneView* _keyplaneView;
	UIKBBackgroundView* _backgroundView;
	double _prevTouchUpTime;
	double _prevTouchDownTime;
	int _prevUpActions;
	NSMutableDictionary* _keyboards;
	NSMutableDictionary* _allKeyplaneViews;
	NSMutableSet* _allKeyplaneKeycaps;
	NSMutableSet* _validInputStrings;
	NSString* _localizedInputKey;
	CFDictionaryRef _extendedTouchInfoMap;
	int _preferredTrackingChangeCount;
	int _shiftTrackingChangeCount;
	NSMutableSet* _accentInfo;
	NSMutableSet* _hasAccents;
	id _spaceTarget;
	SEL _spaceAction;
	SEL _spaceLongAction;
	id _returnTarget;
	SEL _returnAction;
	SEL _returnLongAction;
	id _deleteTarget;
	SEL _deleteAction;
	SEL _deleteLongAction;
	BOOL _shift;
	BOOL _autoshift;
	BOOL _settingShift;
	BOOL _didLongPress;
	NSString* _preTouchKeyplaneName;
	BOOL _revertKeyplaneAfterTouch;
	BOOL _wasShifted;
	BOOL _swipeDetected;
	BOOL _showIntlKey;
	BOOL _showDictationKey;
	BOOL _shiftLockReady;
	double _shiftLockFirstTapTime;
	UISwipeGestureRecognizer* _rightSwipeRecognizer;
	UISwipeGestureRecognizer* _leftSwipeRecognizer;
	UISwipeGestureRecognizer* _upSwipeRecognizer;
	UIView<UIKeyboardRivenTransitionView>* _transitionView;
	float _initialSplitProgress;
	float _finalSplitProgress;
	float _initialPinchSeparation;
	float _pinchSeparationValues[4];
	BOOL _pinchDetected;
	double _autoSplitLastUpdate;
	float _autoSplitElapsedTime;
	CADisplayLink* _displayLink;
	BOOL _ghostKeysEnabled;
	UIDelayedAction* _delayedCentroidUpdate;
	BOOL _isRebuilding;
	BOOL _preRotateShift;
	NSString* _preRotateKeyplaneName;
	CGPoint _keyPeripheralInset;
	UIDelayedAction* _multitapAction;
	BOOL _unshiftAfterMultitap;
	int _multitapCount;
	UIKBTree* _multitapKey;
	UIView* _flickPopupView;
	NSMutableDictionary* _compositeImages;
	NSTimer* _flickPopuptimer;
	id _touchInfo;
	UIView* _dimKeyboardImageView;
	BOOL _keyboardImageViewIsDim;
	BOOL _isOutOfBounds;
	int playKeyClickSoundOn;
	UIKBRenderConfig* _renderConfig;

}

@property (nonatomic,readonly) UIKBTree * keyboard;                          //@synthesize keyboard=_keyboard - In the implementation block
@property (nonatomic,readonly) UIKBTree * keyplane;                          //@synthesize keyplane=_keyplane - In the implementation block
@property (nonatomic,copy) NSString * keyboardName;                          //@synthesize keyboardName=_keyboardName - In the implementation block
@property (nonatomic,copy) NSString * keyplaneName;                          //@synthesize keyplaneName=_keyplaneName - In the implementation block
@property (nonatomic,readonly) NSString * localizedInputMode; 
@property (nonatomic,copy) NSString * localizedInputKey;                     //@synthesize localizedInputKey=_localizedInputKey - In the implementation block
@property (nonatomic,retain) UIKBTree * activeKey;                           //@synthesize activeKey=_activeKey - In the implementation block
@property (assign,nonatomic) BOOL shift;                                     //@synthesize shift=_shift - In the implementation block
@property (assign,nonatomic) BOOL autoShift;                                 //@synthesize autoshift=_autoshift - In the implementation block
@property (assign,nonatomic) BOOL didLongPress;                              //@synthesize didLongPress=_didLongPress - In the implementation block
@property (getter=isRotating,nonatomic,readonly) BOOL rotating; 
@property (assign,nonatomic) BOOL showIntlKey;                               //@synthesize showIntlKey=_showIntlKey - In the implementation block
@property (nonatomic,readonly) BOOL showDictationKey;                        //@synthesize showDictationKey=_showDictationKey - In the implementation block
@property (nonatomic,copy) NSString * preTouchKeyplaneName;                  //@synthesize preTouchKeyplaneName=_preTouchKeyplaneName - In the implementation block
@property (nonatomic,retain) UIKBRenderConfig * renderConfig;                //@synthesize renderConfig=_renderConfig - In the implementation block
@property (assign,nonatomic) int playKeyClickSoundOn; 
+(CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 ;
+(id)keyboardFromFactoryWithName:(id)arg1 screen:(id)arg2 ;
+(id)keyboardWithName:(id)arg1 screen:(id)arg2 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(void)setShift:(BOOL)arg1 ;
-(void)removeFromSuperview;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(BOOL)isRotating;
-(double)lastTouchUpTimestamp;
-(id)scriptingInfoWithChildren;
-(void)willMoveToWindow:(id)arg1 ;
-(BOOL)pointInside:(CGPoint)arg1 forEvent:(GSEventRef)arg2 ;
-(void)setKeyboardAppearance:(int)arg1 ;
-(void)logHandwritingData;
-(id)renderConfig;
-(void)setRenderConfig:(id)arg1 ;
-(id)candidateList;
-(void)clearUnusedObjects:(BOOL)arg1 ;
-(BOOL)hasCandidateKeys;
-(BOOL)hasAccentKey;
-(BOOL)canMultitap;
-(BOOL)isAlphabeticPlane;
-(void)deactivateActiveKeys;
-(CGRect)frameForKeylayoutName:(id)arg1 ;
-(CGSize)dragGestureSize;
-(BOOL)pinchDetected;
-(void)setSplitProgress:(float)arg1 ;
-(BOOL)pinchSplitGestureEnabled;
-(void)showSplitTransitionView:(BOOL)arg1 ;
-(BOOL)shouldShowIndicator;
-(id)activationIndicatorView;
-(void)willRotate;
-(void)didRotate;
-(BOOL)performReturnAction;
-(id)currentKeyplane;
-(void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3 ;
-(void)setAutoshift:(BOOL)arg1 ;
-(void)fadeWithInvocation:(id)arg1 ;
-(void)resizeForKeyplaneSize:(CGSize)arg1 ;
-(void)deleteHandwritingStrokesAtIndexes:(id)arg1 ;
-(BOOL)usesAutoShift;
-(void)didClearInput;
-(void)restoreDefaultsForAllKeys;
-(void)updateBackgroundCorners;
-(void)restoreDefaultsForKey:(id)arg1 ;
-(void)setTarget:(id)arg1 forKey:(id)arg2 ;
-(void)setAction:(SEL)arg1 forKey:(id)arg2 ;
-(void)setLongPressAction:(SEL)arg1 forKey:(id)arg2 ;
-(void)setLabel:(id)arg1 forKey:(id)arg2 ;
-(void)longPressAction;
-(BOOL)canProduceString:(id)arg1 ;
-(float)hitBuffer;
-(void)setReturnKeyEnabled:(BOOL)arg1 withDisplayName:(id)arg2 withType:(int)arg3 ;
-(BOOL)ignoresShiftState;
-(BOOL)isShiftKeyPlaneChooser;
-(BOOL)isShiftKeyBeingHeld;
-(void)updateLocalizedKeys:(BOOL)arg1 ;
-(void)setSplit:(BOOL)arg1 animated:(BOOL)arg2 ;
-(void)finishSplitTransitionWithProgress:(float)arg1 ;
-(id)keyplaneName;
-(id)keyboardName;
-(id)localizedInputMode;
-(void)updateKeyCentroids;
-(void)setLayoutTag:(id)arg1 ;
-(id)baseKeyForString:(id)arg1 ;
-(id)keyplaneForKey:(id)arg1 ;
-(id)keyplaneNamed:(id)arg1 ;
-(void)changeToKeyplane:(id)arg1 ;
-(id)simulateTouch:(CGPoint)arg1 ;
-(id)simulateTouchForCharacter:(id)arg1 errorVector:(CGPoint)arg2 shouldTypeVariants:(BOOL)arg3 baseKeyForVariants:(BOOL)arg4 ;
-(SEL)handlerForNotification:(id)arg1 ;
-(void)touchDown:(id)arg1 executionContext:(id)arg2 ;
-(void)touchDragged:(id)arg1 executionContext:(id)arg2 ;
-(void)touchUp:(id)arg1 executionContext:(id)arg2 ;
-(void)touchCancelled:(id)arg1 executionContext:(id)arg2 ;
-(BOOL)canForceTouchCommit:(id)arg1 ;
-(BOOL)performSpaceAction;
-(void)deactivateActiveKeysClearingTouchInfo:(BOOL)arg1 clearingDimming:(BOOL)arg2 ;
-(void)installGestureRecognizers;
-(id)keyplane;
-(void)refreshForDictationAvailablityDidChange;
-(void)uninstallGestureRecognizers;
-(void)cancelMultitapTimer;
-(void)cancelDelayedCentroidUpdate;
-(void)clearAllTouchInfo;
-(void)handleDismissFlickView:(id)arg1 ;
-(void)setActiveKey:(id)arg1 ;
-(void)setPreTouchKeyplaneName:(id)arg1 ;
-(void)flushKeyCache:(id)arg1 ;
-(id)defaultNameForKeyplaneName:(id)arg1 ;
-(id)splitNameForKeyplaneName:(id)arg1 ;
-(CGRect)frameForKeylayoutName:(id)arg1 onKeyplaneName:(id)arg2 ;
-(int)visualStyleForKeyboardIfSplit:(BOOL)arg1 ;
-(void)updateBackgroundIfNeeded;
-(void)setLocalizedInputKey:(id)arg1 ;
-(void)setKeyplaneName:(id)arg1 ;
-(void)refreshForRivenPreferences;
-(int)displayTypeHintForShiftKey;
-(int)displayTypeHintForMoreKey;
-(void)setState:(int)arg1 forKey:(id)arg2 ;
-(void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)arg1 ;
-(void)updateLocalizedKeysOnKeyplane:(id)arg1 ;
-(void)rebuildSplitTransitionViewFromKeyplane:(id)arg1 toKeyplane:(id)arg2 ;
-(CGImageRef)cachedCompositeImageWithCacheKey:(id)arg1 ;
-(CGImageRef)renderedImageWithStateFallbacksForToken:(id)arg1 ;
-(int)stateForKey:(id)arg1 ;
-(BOOL)shouldShowDictationKey;
-(BOOL)canReuseKeyplaneView;
-(id)splitNameForKeyplane:(id)arg1 ;
-(void)updateKeyboardForKeyplane:(id)arg1 ;
-(void)updateMoreAndInternationalKeys;
-(id)cacheTokenForKeyplane:(id)arg1 ;
-(id)cacheIdentifierForKeyplaneNamed:(id)arg1 ;
-(id)defaultKeyplaneForKeyplane:(id)arg1 ;
-(int)stateForShiftKey:(id)arg1 ;
-(int)stateForKeyplaneSwitchKey:(id)arg1 ;
-(int)stateForMultitapReverseKey:(id)arg1 ;
-(int)stateForDictationKey:(id)arg1 ;
-(void)updateGlobeKeyDisplayString;
-(void)rebuildSplitTransitionView;
-(void)updateTransitionWithFlags:(int)arg1 ;
-(id)keyWithRepresentedString:(id)arg1 ;
-(BOOL)showIntlKey;
-(BOOL)showDictationKey;
-(void)setKeyboardName:(id)arg1 appearance:(int)arg2 ;
-(id)initialKeyplaneNameWithKBStarName:(id)arg1 ;
-(void)setKeyboardDim:(BOOL)arg1 ;
-(BOOL)shouldHitTestKey:(id)arg1 ;
-(id)keyHitTestContainingPoint:(CGPoint)arg1 ;
-(id)keyHitTestClosestToPoint:(CGPoint)arg1 ;
-(id)keyHitTestWithoutCharging:(CGPoint)arg1 ;
-(id)keyHitTest:(CGPoint)arg1 ;
-(BOOL)shouldPreventInputManagerHitTestingForKey:(id)arg1 ;
-(int)keycodeForKey:(id)arg1 ;
-(id)activeKey;
-(BOOL)isLongPressedKey:(id)arg1 ;
-(BOOL)handwritingPlane;
-(id)multitapCompleteKeys;
-(void)multitapInterrupted;
-(void)multitapExpired;
-(void)handleMultitapTimerFired;
-(id)activeMultitapCompleteKey;
-(void)clearHandwritingStrokesIfNeededAndNotify:(BOOL)arg1 ;
-(unsigned)downActionFlagsForKey:(id)arg1 ;
-(void)showPopupVariantsForKey:(id)arg1 ;
-(void)showMenu:(id)arg1 forKey:(id)arg2 ;
-(id)touchForKey:(id)arg1 ;
-(id)_keyplaneVariantsKeyForString:(id)arg1 ;
-(void)setKeyboardDim:(BOOL)arg1 amount:(float)arg2 withDuration:(float)arg3 ;
-(void)prepareForSplitTransition;
-(void)setPlayKeyClickSoundOn:(int)arg1 ;
-(float)interpretPinchSeparationValues;
-(void)finishSplit;
-(void)finishSplitTransition;
-(void)_autoSplit:(id)arg1 ;
-(id)generateInfoForTouch:(id)arg1 ;
-(void)completeHitTestForTouchDown:(id)arg1 executionContext:(id)arg2 ;
-(void)performHitTestForTouchInfo:(id)arg1 touchStage:(int)arg2 hitKeyHandler:(/*^block*/ id)arg3 executionContext:(id)arg4 ;
-(void)clearInfoForTouch:(id)arg1 ;
-(id)flickPopupStringForKey:(id)arg1 withString:(id)arg2 ;
-(void)handlePopupView:(id)arg1 ;
-(void)touchDownWithKey:(id)arg1 atPoint:(CGPoint)arg2 executionContext:(id)arg3 ;
-(int)playKeyClickSoundOn;
-(BOOL)shouldSkipResponseToGlobeKey:(id)arg1 atPoint:(CGPoint)arg2 ;
-(void)hideMenu:(id)arg1 forKey:(id)arg2 ;
-(void)playKeyClickSound;
-(BOOL)shouldCommitPrecedingTouchesForTouchDownWithActions:(unsigned)arg1 ;
-(void)completeCommitTouchesPrecedingTouchDownWithKey:(id)arg1 withActions:(unsigned)arg2 executionContext:(id)arg3 ;
-(id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 isPopupVariant:(BOOL)arg3 isMultitap:(BOOL)arg4 isFlick:(BOOL)arg5 ;
-(void)incrementPunctuationIfNeeded:(id)arg1 ;
-(void)completeSendStringActionForTouchDownWithKey:(id)arg1 withActions:(unsigned)arg2 executionContext:(id)arg3 ;
-(id)preTouchKeyplaneName;
-(id)keyplaneNameForRevertAfterTouch;
-(void)downActionShiftWithKey:(id)arg1 ;
-(void)completeDeleteActionForTouchDownWithActions:(unsigned)arg1 executionContext:(id)arg2 ;
-(id)infoForTouch:(id)arg1 ;
-(void)interpretTouchesForSplit;
-(BOOL)touchPassesDragThreshold:(id)arg1 ;
-(void)handleFlick:(id)arg1 ;
-(void)completeHitTestForTouchDragged:(id)arg1 hitKey:(id)arg2 ;
-(unsigned)upActionFlagsForKey:(id)arg1 ;
-(void)refreshGhostKeyState;
-(BOOL)shouldRetestKey:(id)arg1 withKeyplane:(id)arg2 ;
-(id)activeTouchForInteraction:(int)arg1 ;
-(void)completeRetestForTouchUp:(id)arg1 timestamp:(double)arg2 interval:(double)arg3 executionContext:(id)arg4 ;
-(BOOL)shouldSendTouchUpToInputManager:(id)arg1 ;
-(void)touchMultitapTimer;
-(BOOL)shouldSendStringForFlick:(id)arg1 ;
-(id)flickStringForInputKey:(id)arg1 direction:(int)arg2 ;
-(void)completeSendStringActionForTouchUp:(id)arg1 withActions:(int)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(BOOL)arg5 prevActions:(int)arg6 executionContext:(id)arg7 ;
-(void)continueFromInternationalActionForTouchUp:(id)arg1 withActions:(int)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(BOOL)arg5 prevActions:(int)arg6 executionContext:(id)arg7 ;
-(void)fadeMenu:(id)arg1 forKey:(id)arg2 ;
-(void)upActionShift;
-(void)fadeMenu:(id)arg1 forKey:(id)arg2 withDelay:(float)arg3 ;
-(void)handleKeyboardMenusForTouch:(id)arg1 ;
-(void)updateShiftKeyState;
-(void)swipeDetected:(id)arg1 ;
-(void)cancelTouchIfNecessaryForInfo:(id)arg1 ;
-(BOOL)keyHasAccentedVariants:(id)arg1 ;
-(id)keyboard;
-(CGPoint)applyError:(CGPoint)arg1 toKey:(id)arg2 ;
-(CGImageRef)renderedImageWithToken:(id)arg1 ;
-(CGImageRef)renderedKeyplaneWithToken:(id)arg1 split:(BOOL)arg2 ;
-(void)handleDelayedCentroidUpdate;
-(id)currentKeyplaneView;
-(void)setKeyboardName:(id)arg1 ;
-(BOOL)shift;
-(BOOL)autoShift;
-(void)setAutoShift:(BOOL)arg1 ;
-(BOOL)didLongPress;
-(void)setDidLongPress:(BOOL)arg1 ;
-(void)setShowIntlKey:(BOOL)arg1 ;
-(id)localizedInputKey;
-(CGRect)frameForKeyWithRepresentedString:(id)arg1 ;
-(CGRect)frameForLastKeyWithRepresentedString:(id)arg1 ;
-(id)popupKeyViews;
-(void)setKeyForTouchInfo:(id)arg1 key:(id)arg2 ;
-(void)showPopupView:(int)arg1 withKey:(id)arg2 popupInfo:(id)arg3 force:(BOOL)arg4 ;
-(void)showFlickView:(int)arg1 withKey:(id)arg2 flickString:(id)arg3 ;
-(void)populateFlickPopupsForKey:(id)arg1 ;
-(void)activateCompositeKey:(id)arg1 direction:(int)arg2 flickString:(id)arg3 popupInfo:(id)arg4 ;
-(id)compositeImageForKey:(id)arg1 ;
-(void)setCompositeImage:(id)arg1 forKey:(id)arg2 ;
-(void)handlePopupView;
-(void)handleDismissFlickView;
-(id)getFlickCompositeImageForKey:(id)arg1 direction:(int)arg2 rect:(CGRect)arg3 ;
-(id)getPopupBackgroundImageForKey:(id)arg1 direction:(int)arg2 popupInfo:(id)arg3 rect:(CGRect)arg4 ;
-(id)overlayCharacterImageForKey:(id)arg1 direction:(int)arg2 rect:(CGRect)arg3 flickString:(id)arg4 popupInfo:(id)arg5 ;
@end

