/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:05:02 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/PassKit.framework/passd
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol PDDatabaseManagerDelegate, PDDatabaseManagerWebServicesDelegate;
@class SQLiteDatabase;

@interface PDDatabaseManager : NSObject {

	SQLiteDatabase* _database;
	<PDDatabaseManagerDelegate>* _delegate;
	<PDDatabaseManagerWebServicesDelegate>* _webServicesDelegate;

}

@property (nonatomic,readonly) SQLiteDatabase * database;                                               //@synthesize database=_database - In the implementation block
@property (nonatomic,readonly) <PDDatabaseManagerDelegate> * delegate;                                  //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) <PDDatabaseManagerWebServicesDelegate> * webServicesDelegate;              //@synthesize webServicesDelegate=_webServicesDelegate - In the implementation block
+(BOOL)databaseExists;
-(void)verifyGroupsAndPassCount;
-(void)computeExtraneousUniqueIDs:(id*)arg1 missingUniqueIDs:(id*)arg2 ;
-(void)deletePassWithUniqueID:(id)arg1 ;
-(void)insertPass:(id)arg1 source:(int)arg2 ;
-(void)updatePassSettings:(int)arg1 forUniqueID:(id)arg2 ;
-(BOOL)passExistsWithUniqueID:(id)arg1 ;
-(void)updatePass:(id)arg1 source:(int)arg2 ;
-(id)remotePassWithUniqueID:(id)arg1 ;
-(id)effectiveCatalog;
-(void)applyCatalogOfRecord:(id)arg1 ;
-(BOOL)uniqueIDIsRevoked:(id)arg1 ;
-(void)updateRevocationStatus:(BOOL)arg1 forUniqueID:(id)arg2 ;
-(id)uniqueIDForPassWithPassTypeID:(id)arg1 serialNumber:(id)arg2 ;
-(void)updateModifiedSource:(int)arg1 forUniqueID:(id)arg2 ;
-(unsigned)numberOfRealPasses;
-(void)introduceMissingUniqueID;
-(void)introduceExtraneousUniqueID;
-(void)introduceDuplicateUniqueID;
-(BOOL)passExistsWithPassStyle:(int)arg1 ;
-(void)moveGroupForPass:(id)arg1 toIndex:(unsigned)arg2 ;
-(id)remotePasses;
-(void)getCatalog:(id*)arg1 passes:(id*)arg2 limitResults:(BOOL)arg3 ;
-(id)remotePassWithPassTypeID:(id)arg1 serialNumber:(id)arg2 ;
-(id)candidatePassesOfStyle:(int)arg1 activatingBetweenStart:(id)arg2 end:(id)arg3 ;
-(int)passSettingsForUniqueID:(id)arg1 ;
-(BOOL)passExistsWithPassTypeID:(id)arg1 serialNumber:(id)arg2 ;
-(id)bundledPassWithUniqueID:(id)arg1 ;
-(BOOL)getPassTypeID:(id*)arg1 teamID:(id*)arg2 forUniqueID:(id)arg3 ;
-(id)localPassWithUniqueID:(id)arg1 ;
-(void)nukeDatabase;
-(BOOL)hasCandidatePasses;
-(BOOL)hasLocationsForPassWithUniqueID:(id)arg1 ;
-(BOOL)hasCandidatePassesOfStyle:(int)arg1 ;
-(id)unlocatedCandidatePassesOfStyle:(int)arg1 activatingBetweenStart:(id)arg2 end:(id)arg3 ;
-(id)locatedCandidatePassesOfStyle:(int)arg1 activatingBetweenStart:(id)arg2 end:(id)arg3 ;
-(id)locatedDatelessCandidatePassesOfStyle:(int)arg1 ;
-(id)locationsByUniqueIDInBoundingBoxOfRegion:(id)arg1 ;
-(id)_predicateForStyle:(int)arg1 ;
-(id)_registeredPasses:(id)arg1 ;
-(id)_registeredPass:(id)arg1 ;
-(id)_candidatePredicate;
-(id)_predicateForUniqueID:(id)arg1 ;
-(id)_locatedPredicate;
-(id)_candidatePassesOfStyle:(int)arg1 activatingBetweenStart:(id)arg2 end:(id)arg3 furtherPredicate:(id)arg4 ;
-(id)_unlocatedPredicate;
-(id)_locatedCandidatePassesOfStyle:(int)arg1 matchingFurtherPredicate:(id)arg2 ;
-(void)_trimCatalog:(id)arg1 andBuildPassPredicate:(id*)arg2 ;
-(id)_passTypeForPass:(id)arg1 ;
-(id)_webServiceForPass:(id)arg1 passType:(id)arg2 ;
-(void)adjustGroupsAfterAddingPass:(id)arg1 ;
-(void)adjustGroupsAfterUpdatingPass:(id)arg1 oldGroupingProfile:(id)arg2 ;
-(void)_deleteWebServiceIfOrphaned:(id)arg1 ;
-(void)adjustGroupsBeforeRemovingPass:(id)arg1 ;
-(void)_deletePassTypeIfOrphaned:(id)arg1 ;
-(id)_databaseWebService:(id)arg1 ;
-(id)_predicateMatchingPushEnabledPassesForWebService:(id)arg1 ;
-(void)createGroupsIfNecessary;
-(BOOL)_registerPass:(id)arg1 trueIDs:(id)arg2 ;
-(BOOL)hasAnyPasses;
-(unsigned)numberOfPassesOfType:(id)arg1 ;
-(id)localPassesOfType:(id)arg1 ;
-(id)locatedCandidatePassesOfStyle:(int)arg1 ;
-(id)locatedCandidatePassesOfStyle:(int)arg1 filteringOutPasses:(id)arg2 ;
-(BOOL)getRegistrationStatus:(int*)arg1 date:(id*)arg2 forSerialNumber:(id)arg3 webService:(id)arg4 ;
-(void)updateRegistrationStatus:(int)arg1 date:(id)arg2 forSerialNumber:(id)arg3 webService:(id)arg4 ;
-(void)updateLastModifiedTag:(id)arg1 forSerialNumber:(id)arg2 webService:(id)arg3 ;
-(void)updateWebService:(id)arg1 ;
-(id)lastDeletionDateForWebService:(id)arg1 ;
-(id)lastUpdatedTagForWebService:(id)arg1 ;
-(id)tagLastUpdateDateForWebService:(id)arg1 ;
-(void)updateLastDeletionDate:(id)arg1 forWebService:(id)arg2 ;
-(void)updateLastUpdatedTag:(id)arg1 forWebService:(id)arg2 ;
-(id)webServices;
-(id)webServicesForPassTypeID:(id)arg1 ;
-(id)pushEnabledPassTypeIDs;
-(BOOL)hasPushEnabledPassesForWebService:(id)arg1 ;
-(void)enumeratePushEnabledPassesForWebService:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(void)enumeratePushEnabledPassUpdateContextsForWebService:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(BOOL)getWebService:(id*)arg1 updateContext:(id*)arg2 forPassWithUniqueID:(id)arg3 ;
-(id)passUpdateContextForSerialNumber:(id)arg1 webService:(id)arg2 ;
-(id)webServiceForPass:(id)arg1 ;
-(BOOL)getLastPushDate:(id*)arg1 lastUpdateDate:(id*)arg2 frequencyScore:(double*)arg3 forPassTypeID:(id)arg4 ;
-(void)updateLastPushDate:(id)arg1 frequencyScore:(double)arg2 forPassTypeID:(id)arg3 ;
-(void)updateLastUpdateDate:(id)arg1 forPassTypeID:(id)arg2 ;
-(void)enumerateOrganizationNamesForPassTypeID:(id)arg1 withHandler:(/*^block*/ id)arg2 ;
-(id)webServicesDelegate;
-(void)setWebServicesDelegate:(id)arg1 ;
-(BOOL)migrateDatabase:(id)arg1 fromUserVersion:(int)arg2 ;
-(BOOL)_migrateFrom6000To7000:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7000To7001:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7001To7002:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7002To7003:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7003To7004:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7004To7005:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7005To7006:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7006To7007:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7007To7008:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7008To7009:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7009To7010:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7010To7011:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7011To7012:(id)arg1 context:(id)arg2 ;
-(BOOL)_migrateFrom7012To7013:(id)arg1 context:(id)arg2 ;
-(void)_insertPass:(id)arg1 ;
-(void)_applyCatalog:(id)arg1 ;
-(void)_removePass:(id)arg1 fromGroup:(id)arg2 ;
-(void)_insertPass:(id)arg1 groupingProfile:(id)arg2 ;
-(void)_moveGroup:(id)arg1 toIndex:(unsigned)arg2 ;
-(id)_groupAtOrAfterIndex:(unsigned)arg1 bestMatchingUniqueIDs:(id)arg2 ;
-(void)_insertPass:(id)arg1 groupingProfile:(id)arg2 insertNewGroupAfter:(id)arg3 ;
-(id)_firstGroupMatchingProfile:(id)arg1 ;
-(void)_addPass:(id)arg1 toGroup:(id)arg2 ;
-(id)_predicateForGroupingID:(id)arg1 ;
-(id)_predicateForDate:(id)arg1 leeway:(double)arg2 ;
-(id)_firstGroupMatchingPredicate:(id)arg1 ;
-(id)_groupWithPersistentID:(id)arg1 ;
-(id)_firstGroupMatchingGroup:(id)arg1 ;
-(void)_mergeGroup:(id)arg1 intoGroup:(id)arg2 ;
-(void)_sortPassesInGroup:(id)arg1 ;
-(id)database;
-(void)_removeGroup:(id)arg1 ;
-(id)localPasses;
-(void)dealloc;
-(id)delegate;
-(void)notePassSharedWithUniqueID:(id)arg1 ;
-(id)initWithDelegate:(id)arg1 ;
-(void)_createDatabase;
-(BOOL)createSchemaInDatabase:(id)arg1 ;
@end

