/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:52:45 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/MapKit.framework/MapKit
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

typedef struct {
	double field1;
	double field2;
} SCD_Struct_MK0;

typedef struct {
	double latitude;
	double longitude;
} SCD_Struct_MK1;

typedef struct {
	SCD_Struct_MK1 center;
	SCD_Struct_MK1 span;
} SCD_Struct_MK2;

typedef struct {
	double field1;
	double field2;
	double field3;
} SCD_Struct_MK3;

typedef struct {
	float field1;
	SCD_Struct_MK1 field2;
} SCD_Struct_MK4;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct __SCPreferences* SCPreferencesRef;

typedef struct __WiFiManagerClient* WiFiManagerClientRef;

typedef struct __WiFiDeviceClient* WiFiDeviceClientRef;

typedef struct CGImage* CGImageRef;

typedef struct CGPath* CGPathRef;

typedef struct CGContext* CGContextRef;

typedef struct {
	unsigned field1;
	unsigned field2;
	unsigned field3;
} SCD_Struct_MK12;

typedef struct CGPoint {
	float x;
	float y;
} CGPoint;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct {
	double field1;
	double field2;
	double field3;
	double field4;
} SCD_Struct_MK15;

typedef struct {
	double x;
	double y;
	double z;
	double w;
} SCD_Struct_MK16;

typedef struct {
	double x;
	double y;
	double z;
} SCD_Struct_MK17;

typedef struct {
	double v[4][4];
} SCD_Struct_MK18;

typedef struct _NSZone* NSZoneRef;

typedef struct {
	char* field1;
	unsigned field2;
	unsigned field3;
} SCD_Struct_MK20;

typedef struct CGColor* CGColorRef;

typedef struct CGAffineTransform {
	float a;
	float b;
	float c;
	float d;
	float tx;
	float ty;
} CGAffineTransform;

typedef struct {
	int field1;
	SCD_Struct_MK1 field2;
	CGPoint field3;
	CGPoint field4;
	id field5;
	BOOL field6;
} SCD_Struct_MK23;

typedef struct {
	int field1;
	int field2;
	int field3;
	float field4;
} SCD_Struct_MK24;

typedef struct {
	int x;
	int y;
	int z;
	float contentScaleFactor;
} SCD_Struct_MK25;

typedef struct GEOTileKey {
	unsigned z : 6;
	unsigned x : 26;
	unsigned y : 26;
	unsigned type : 6;
	unsigned pixelSize : 8;
	unsigned textScale : 8;
	unsigned provider : 8;
	unsigned expires : 1;
	unsigned reserved1 : 7;
	unsigned char reserved2[4];
} GEOTileKey;

typedef struct __IOHIDEventSystemClient* IOHIDEventSystemClientRef;

typedef struct _compressed_pair<float **, std::__1::allocator<float *> > {
	float __first_;
} compressed_pair<float **, std::__1::allocator<float *> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<float> > {
	unsigned long __first_;
} compressed_pair<unsigned long, std::__1::allocator<float> >;

typedef struct _split_buffer<float *, std::__1::allocator<float *> > {
	float __first_;
	float __begin_;
	float __end_;
	compressed_pair<float **, std::__1::allocator<float *> > __end_cap_;
} split_buffer<float *, std::__1::allocator<float *> >;

typedef struct deque<float, std::__1::allocator<float> > {
	split_buffer<float *, std::__1::allocator<float *> > __map_;
	unsigned __start_;
	compressed_pair<unsigned long, std::__1::allocator<float> > __size_;
} deque<float, std::__1::allocator<float> >;

typedef struct __IOHIDEvent* IOHIDEventRef;

