/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:52:52 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MPQueueFeeder.h>

@protocol OS_dispatch_queue;
@class NSObject, MPRadioAdObserver, NSMutableDictionary, ADBannerView, NSData, NSMapTable, RadioStation, NSMutableArray, NSArray;

@interface MPRadioQueueFeeder : MPQueueFeeder {

	NSObject<OS_dispatch_queue>* _accessQueue;
	MPRadioAdObserver* _adObserver;
	BOOL _didFailToFetchTracks;
	NSMutableDictionary* _fetchingTracksCompletionHandlersByStation;
	ADBannerView* _skipAdView;
	NSData* _skipAdTrackData;
	NSMapTable* _startTimesByRadioTrack;
	RadioStation* _station;
	NSObject<OS_dispatch_queue>* _trackHistoryQueue;
	NSObject<OS_dispatch_queue>* _trackRemovalQueue;
	NSMutableArray* _tracks;
	BOOL _wasUsingBackgroundNetwork;

}

@property (nonatomic,retain) RadioStation * station; 
@property (nonatomic,copy) NSArray * tracks; 
+(id)imageCache;
+(BOOL)isExplicitTracksEnabled;
+(void)_updateIsExplicitContentRestrictedAndPostNotification:(BOOL)arg1 removeTracks:(BOOL)arg2 ;
+(BOOL)isUserDefaultExplicitTracksEnabled;
+(void)_isProfileExplicitContentRestrictedDidChangeNotification:(id)arg1 ;
+(id)_profileConnectionObserver;
+(void)setMinimumDurationToPlayToCountForHistory:(double)arg1 ;
+(void)setUserDefaultExplicitTracksEnabled:(BOOL)arg1 ;
+(BOOL)shouldRestorePlaybackQueue;
-(void)_playbackStateDidChangeNotification:(id)arg1 ;
-(id)station;
-(BOOL)canSkipItem:(id)arg1 ;
-(void)_bufferingStateDidChangeNotification:(id)arg1 ;
-(int)playbackMode;
-(unsigned)itemCount;
-(id)copyRawItemAtIndex:(unsigned)arg1 ;
-(id)playbackInfoAtIndex:(unsigned)arg1 ;
-(id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3 ;
-(id)localizedPositionInPlaylistString:(id)arg1 ;
-(BOOL)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(BOOL)arg2 ;
-(Class)itemClass;
-(BOOL)hasValidItemAtIndex:(unsigned)arg1 ;
-(unsigned)initialPlaybackQueueDepth;
-(BOOL)shouldBeginPlaybackOfItem:(id)arg1 error:(id*)arg2 ;
-(BOOL)canSkipToPreviousItem;
-(unsigned)itemTypeForIndex:(unsigned)arg1 ;
-(BOOL)playerPreparesItemsForPlaybackAsynchronously;
-(unsigned)realRepeatType;
-(void)controller:(id)arg1 willChangePlaybackIndexBy:(int)arg2 deltaType:(int)arg3 ignoreElapsedTime:(BOOL)arg4 allowSkippingAds:(BOOL)arg5 ;
-(void)setAVController:(id)arg1 ;
-(void)_networkTypeDidChangeNotification:(id)arg1 ;
-(void)reloadTracksForPlayingStationAndKeepExistingTracks:(BOOL)arg1 ;
-(void)setStation:(id)arg1 ;
-(void)_didFailToLoadAdNotification:(id)arg1 ;
-(void)_songBeganResponseNotification:(id)arg1 ;
-(void)_itemIsBannedDidChangedNotification:(id)arg1 ;
-(void)_isExplicitTracksEnabledDidChangeNotification:(id)arg1 ;
-(void)_radioModelDidChangeNotification:(id)arg1 ;
-(void)_cellularNetworkingAllowedDidChangeNotification:(id)arg1 ;
-(void)_applicationWillTerminateNotification:(id)arg1 ;
-(void)_fetchAdditionalTracksWithCompletionHandler:(/*^block*/ id)arg1 ;
-(void)_updateTracksKeepingExistingTracks:(BOOL)arg1 keepingCurrentTrack:(BOOL)arg2 invalidatingContent:(BOOL)arg3 ;
-(unsigned)_indexOfCurrentItem;
-(id)_trackAtIndex:(unsigned)arg1 ;
-(BOOL)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(BOOL)arg2 startPlayback:(BOOL)arg3 ;
-(void)_recordTrackTimeForItem:(id)arg1 ;
-(void)_itemDidFinishLoadingNotification:(id)arg1 ;
-(void)_itemWillChangeNotification:(id)arg1 ;
-(void)loadArtworkImageForItem:(id)arg1 completionHandler:(/*^block*/ id)arg2 ;
-(BOOL)_endPlaybackIfNecessaryForNetworkType;
-(void)removeStartTimeForRadioTrack:(id)arg1 ;
-(void)_prefetchArtworkForNextTrack;
-(void)_cancelScheduledAds;
-(void)_insertAdTrack:(id)arg1 afterCurrentItemIndex:(unsigned)arg2 ;
-(id)_tracksWithPromotionalContentFromTracks:(id)arg1 ;
-(void)setTracks:(id)arg1 ;
-(void)reloadTracksForPlayingStation;
-(void)removeAllStartTimes;
-(void)setStartTime:(double)arg1 forRadioTrack:(id)arg2 ;
-(void)dealloc;
-(id)init;
-(BOOL)canSeek;
-(id)tracks;
-(void).cxx_destruct;
@end

