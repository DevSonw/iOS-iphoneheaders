/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:52:50 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol MPMediaLibraryDataProviderPrivate <MPMediaLibraryDataProvider>
@property (nonatomic,readonly) NSString * databasePath; 
@property (nonatomic,readonly) BOOL isGeniusEnabled; 
@property (nonatomic,readonly) NSArray * preferredAudioLanguages; 
@property (nonatomic,readonly) NSArray * preferredSubtitleLanguages; 
@property (nonatomic,readonly) NSArray * localizedSectionIndexTitles; 
@optional
-(BOOL)hasMediaOfType:(unsigned)arg1;
-(BOOL)hasGeniusMixes;
-(BOOL)hasUbiquitousBookmarkableItems;
-(long long)itemPersistentIDForStoreID:(long long)arg1;
-(long long)addPlaylistWithValuesForProperties:(id)arg1;
-(BOOL)removeItemsWithIdentifiers:(long long*)arg1 count:(unsigned)arg2 hideFromPurchaseHistory:(BOOL)arg3;
-(BOOL)removePlaylistWithIdentifier:(long long)arg1;
-(BOOL)isArtworkImageIdenticalForItemWithIdentifier:(long long)arg1 otherItemWithIdentifier:(long long)arg2 compareRepresentativeItemArtwork:(BOOL)arg3 missingAlwaysComparesEqual:(BOOL)arg4;
-(void)populateLocationPropertiesOfItemWithIdentifier:(long long)arg1 withPath:(id)arg2;
-(BOOL)isGeniusEnabled;
-(id)preferredAudioLanguages;
-(id)preferredSubtitleLanguages;
-(void)performReadTransactionWithBlock:(/*^block*/ id)arg1;
-(BOOL)itemExistsWithPersistentID:(unsigned long long)arg1;
-(BOOL)playlistExistsWithPersistentID:(unsigned long long)arg1;
-(BOOL)hasArtworkImageForItemWithIdentifier:(long long)arg1;
-(void)setValue:(id)arg1 forProperty:(id)arg2 ofItemWithIdentifier:(long long)arg3 completionBlock:(/*^block*/ id)arg4;
-(BOOL)shouldAsynchrounouslyLoadArtworkForItemWithIdentifier:(long long)arg1 artworkFormat:(int)arg2 artworkCacheID:(id)arg3;
-(BOOL)shouldAsynchrounouslyLoadArtworkForItemWithIdentifier:(long long)arg1 artworkSize:(CGSize)arg2 artworkCacheID:(id)arg3;
-(void)loadArtworkImageForFormat:(int)arg1 ofItemWithArtworkCacheID:(id)arg2 canUseSurfaceBackedImage:(BOOL)arg3 completionBlock:(/*^block*/ id)arg4;
-(void)loadArtworkImageForFormat:(int)arg1 ofItemWithIdentifier:(long long)arg2 completionBlock:(/*^block*/ id)arg3;
-(void)loadBestArtworkImageForSize:(CGSize)arg1 forArtworkCacheID:(id)arg2 completionBlock:(/*^block*/ id)arg3;
-(id)artworkCacheIDForItemWithIdentifier:(long long)arg1 atPlaybackTime:(double)arg2;
-(void)setValue:(id)arg1 forProperty:(id)arg2 ofCollectionWithIdentifier:(long long)arg3 groupingType:(int)arg4 completionBlock:(/*^block*/ id)arg5;
-(void)setValue:(id)arg1 forProperty:(id)arg2 ofPlaylistWithIdentifier:(long long)arg3 completionBlock:(/*^block*/ id)arg4;
-(void)addItemWithIdentifier:(long long)arg1 toPlaylistWithIdentifier:(long long)arg2 completionBlock:(/*^block*/ id)arg3;
-(void)addItemsWithIdentifiers:(long long*)arg1 count:(unsigned)arg2 toPlaylistWithIdentifier:(long long)arg3 completionBlock:(/*^block*/ id)arg4;
-(void)removeItemsWithIdentifiers:(long long*)arg1 atFilteredIndexes:(id)arg2 inPlaylistWithIdentifier:(long long)arg3 completionBlock:(/*^block*/ id)arg4;
-(void)removeAllItemsInPlaylistWithIdentifier:(long long)arg1;
-(void)moveItemFromIndex:(unsigned)arg1 toIndex:(unsigned)arg2 inPlaylistWithIdentifier:(long long)arg3 completionBlock:(/*^block*/ id)arg4;
-(void)seedPlaylistWithIdentifier:(long long)arg1 withItemWithIdentifier:(long long)arg2 completionBlock:(/*^block*/ id)arg3;
-(void)releaseGeniusClusterPlaylist:(void*)arg1;
-(void*)createGeniusClusterPlaylistWithSeedItemIdentifiers:(long long*)arg1 count:(unsigned)arg2 error:(id*)arg3;
-(long long*)generateItemIdentifiersForGeniusClusterPlaylist:(void*)arg1 count:(unsigned*)arg2 error:(id*)arg3;
-(void)updateEntitesToCurrentRevision;
-(BOOL)supportsEntityChangeTrackingForMediaEntityType:(int)arg1 collectionGroupingType:(int)arg2 dataProviderClass:(out Class*)arg3;
-(BOOL)performTransactionWithBlock:(/*^block*/ id)arg1;
-(BOOL)isCurrentThreadInTransaction;
-(id)localizedSectionIndexTitles;
-(id)localizedSectionHeaderForSectionIndex:(unsigned)arg1;
-(id)databasePath;
-(id)lastModifiedDate;
@end

