/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:52:48 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MPMediaEntity.h>

@class NSString, MPMediaItemArtwork, NSDate, NSArray;

@interface MPMediaItem : MPMediaEntity

@property (nonatomic,readonly) BOOL mediaTypeCanSeedGenius; 
@property (nonatomic,readonly) NSString * albumArtist; 
@property (nonatomic,readonly) NSString * albumTitle; 
@property (nonatomic,readonly) NSString * artist; 
@property (nonatomic,readonly) MPMediaItemArtwork * artwork; 
@property (nonatomic,readonly) double bookmarkTime; 
@property (nonatomic,readonly) NSString * composer; 
@property (nonatomic,readonly) NSString * genre; 
@property (nonatomic,readonly) BOOL isRental; 
@property (nonatomic,readonly) BOOL isITunesU; 
@property (nonatomic,readonly) unsigned mediaType; 
@property (nonatomic,readonly) double playbackDuration; 
@property (nonatomic,readonly) double startTime; 
@property (nonatomic,readonly) double stopTime; 
@property (nonatomic,readonly) NSString * podcastTitle; 
@property (assign,nonatomic) unsigned rating; 
@property (nonatomic,readonly) NSDate * releaseDate; 
@property (nonatomic,readonly) NSString * title; 
@property (nonatomic,readonly) unsigned year; 
@property (assign,nonatomic) unsigned skipCount; 
@property (assign,nonatomic) unsigned playCount; 
@property (assign,nonatomic) unsigned skipCountSinceSync; 
@property (assign,nonatomic) unsigned playCountSinceSync; 
@property (nonatomic,copy) NSDate * lastPlayedDate; 
@property (nonatomic,copy) NSDate * lastSkippedDate; 
@property (nonatomic,copy) NSDate * dateAccessed; 
@property (assign,nonatomic) BOOL hasBeenPlayed; 
@property (nonatomic,readonly) BOOL rememberBookmarkTime; 
@property (nonatomic,readonly) unsigned albumTrackNumber; 
@property (nonatomic,readonly) double effectiveStopTime; 
@property (nonatomic,readonly) NSString * effectiveAlbumArtist; 
@property (nonatomic,readonly) BOOL isUsableAsRepresentativeItem; 
@property (nonatomic,readonly) NSArray * chapters; 
+(id)titlePropertyForGroupingType:(int)arg1 ;
+(void)_createFilterableDictionary;
+(BOOL)canFilterByProperty:(id)arg1 ;
+(id)persistentIDPropertyForGroupingType:(int)arg1 ;
+(BOOL)_isValidItemProperty:(id)arg1 ;
+(id)fallbackTitlePropertyForGroupingType:(int)arg1 ;
+(id)dynamicProperties;
-(id)artist;
-(id)composer;
-(id)genre;
-(unsigned)albumTrackNumber;
-(id)representativeItem;
-(double)stopTime;
-(void)setRating:(unsigned)arg1 ;
-(id)albumArtist;
-(double)bookmarkTime;
-(BOOL)isITunesU;
-(id)artwork;
-(id)initWithPersistentID:(unsigned long long)arg1 ;
-(id)_directStoreURL;
-(id)_libraryLinkURL;
-(double)playbackDuration;
-(id)chaptersOfType:(int)arg1 ;
-(id)_libraryLinkKind;
-(id)_libraryLinkArtist;
-(id)_libraryLinkPlaylistName;
-(Class)itemArrayCoderPIDDataCodingClass;
-(id)valuesForProperties:(id)arg1 ;
-(BOOL)didSkipWithPlayedToTime:(double)arg1 ;
-(void)markNominalAmountHasBeenPlayed;
-(void)noteWasPlayedToTime:(double)arg1 skipped:(BOOL)arg2 ;
-(void)incrementSkipCount;
-(void)incrementPlayCountForPlayingToEnd;
-(BOOL)incrementPlayCountForStopTime:(double)arg1 ;
-(void)updateDateAccessedToCurrentDateWithWriteCompletionBlock:(/*^block*/ id)arg1 ;
-(id)_bestStoreURL;
-(id)albumTitle;
-(BOOL)isRental;
-(double)effectiveStopTime;
-(id)podcastTitle;
-(unsigned)rating;
-(id)releaseDate;
-(id)predicateForProperty:(id)arg1 ;
-(unsigned)playCount;
-(void)setPlayCount:(unsigned)arg1 ;
-(unsigned)playCountSinceSync;
-(void)setPlayCountSinceSync:(unsigned)arg1 ;
-(id)lastPlayedDate;
-(void)setLastPlayedDate:(id)arg1 ;
-(id)dateAccessed;
-(void)setDateAccessed:(id)arg1 ;
-(unsigned)skipCount;
-(void)setSkipCount:(unsigned)arg1 ;
-(unsigned)skipCountSinceSync;
-(void)setSkipCountSinceSync:(unsigned)arg1 ;
-(id)lastSkippedDate;
-(void)setLastSkippedDate:(id)arg1 ;
-(BOOL)hasBeenPlayed;
-(void)setHasBeenPlayed:(BOOL)arg1 ;
-(BOOL)rememberBookmarkTime;
-(id)chapterOfType:(int)arg1 atIndex:(unsigned)arg2 ;
-(id)chapterOfType:(int)arg1 atTime:(double)arg2 ;
-(unsigned)countOfChaptersOfType:(int)arg1 ;
-(void)gaplessHeuristicInfo:(unsigned*)arg1 durationInSamples:(unsigned long long*)arg2 lastPacketsResync:(unsigned long long*)arg3 encodingDelay:(unsigned*)arg4 encodingDrain:(unsigned*)arg5 ;
-(BOOL)isUsableAsRepresentativeItem;
-(BOOL)MPSD_isDownloadable;
-(BOOL)mediaTypeCanSeedGenius;
-(BOOL)MPSD_isDownloadInProgress;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned)hash;
-(void)didReceiveMemoryWarning;
-(id)title;
-(unsigned)year;
-(double)startTime;
-(id)valueForProperty:(id)arg1 ;
-(BOOL)existsInLibrary;
-(id)chapters;
-(void)populateLocationPropertiesWithPath:(id)arg1 ;
-(id)effectiveAlbumArtist;
-(unsigned)mediaType;
@end

