/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:52:50 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <MediaPlayer/MPMediaLibraryDataProviderML3.h>

@protocol OS_dispatch_queue;
@class NSObject;

@interface MPMediaLibraryDataProviderSystemML3 : MPMediaLibraryDataProviderML3 {

	long long _currentRevision;
	NSObject<OS_dispatch_queue>* _queue;

}
+(BOOL)_isGeniusEnabled;
+(id)_localizedGeniusErrorForError:(id)arg1 ;
+(id)_localizedCloudGeniusErrorForError:(id)arg1 ;
-(BOOL)isArtworkImageIdenticalForItemWithIdentifier:(long long)arg1 otherItemWithIdentifier:(long long)arg2 compareRepresentativeItemArtwork:(BOOL)arg3 missingAlwaysComparesEqual:(BOOL)arg4 ;
-(BOOL)isGeniusEnabled;
-(id)errorResolverForMediaItem:(id)arg1 ;
-(BOOL)hasArtworkImageForItemWithIdentifier:(long long)arg1 ;
-(BOOL)shouldAsynchrounouslyLoadArtworkForItemWithIdentifier:(long long)arg1 artworkFormat:(int)arg2 artworkCacheID:(id)arg3 ;
-(BOOL)shouldAsynchrounouslyLoadArtworkForItemWithIdentifier:(long long)arg1 artworkSize:(CGSize)arg2 artworkCacheID:(id)arg3 ;
-(void)loadArtworkImageForFormat:(int)arg1 ofItemWithArtworkCacheID:(id)arg2 canUseSurfaceBackedImage:(BOOL)arg3 completionBlock:(/*^block*/ id)arg4 ;
-(void)loadArtworkImageForFormat:(int)arg1 ofItemWithIdentifier:(long long)arg2 completionBlock:(/*^block*/ id)arg3 ;
-(void)loadBestArtworkImageForSize:(CGSize)arg1 forArtworkCacheID:(id)arg2 completionBlock:(/*^block*/ id)arg3 ;
-(void)loadBestArtworkImageDataForSize:(CGSize)arg1 ofItemWithIdentifier:(long long)arg2 atPlaybackTime:(double)arg3 completionBlock:(/*^block*/ id)arg4 ;
-(id)artworkCacheIDForItemWithIdentifier:(long long)arg1 atPlaybackTime:(double)arg2 ;
-(void)seedPlaylistWithIdentifier:(long long)arg1 withItemWithIdentifier:(long long)arg2 completionBlock:(/*^block*/ id)arg3 ;
-(void)releaseGeniusClusterPlaylist:(void*)arg1 ;
-(void*)createGeniusClusterPlaylistWithSeedItemIdentifiers:(long long*)arg1 count:(unsigned)arg2 error:(id*)arg3 ;
-(long long*)generateItemIdentifiersForGeniusClusterPlaylist:(void*)arg1 count:(unsigned*)arg2 error:(id*)arg3 ;
-(void)updateEntitesToCurrentRevision;
-(BOOL)supportsEntityChangeTrackingForMediaEntityType:(int)arg1 collectionGroupingType:(int)arg2 dataProviderClass:(out Class*)arg3 ;
-(void)_initInstanceVariableOnce;
-(void)_seedCloudPlaylistWithTrack:(id)arg1 container:(id)arg2 completionBlock:(/*^block*/ id)arg3 ;
-(BOOL)_formatCanUsePipeline:(unsigned)arg1 ;
-(BOOL)_formatShouldUseNativeSize:(unsigned)arg1 ;
-(id)_itemArtworkCacheIDForItemIdentifier:(long long)arg1 atPlaybackTime:(double)arg2 ;
-(void)_loadArtworkImageDataForMLArtworkFormatID:(unsigned)arg1 artworkCacheID:(id)arg2 completionBlock:(/*^block*/ id)arg3 ;
-(id)_itemArtworkCacheIDForItemIdentifier:(long long)arg1 ;
-(void)_loadArtworkImageForMLArtworkFormatID:(unsigned)arg1 artworkCacheID:(id)arg2 canUseSurfaceBackedImage:(BOOL)arg3 completionBlock:(/*^block*/ id)arg4 ;
-(id)_screenshotCacheIDForItemIdentifier:(long long)arg1 ;
-(id)initWithLibrary:(id)arg1 ;
-(void).cxx_destruct;
@end

