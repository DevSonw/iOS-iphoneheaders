/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:52:46 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <MediaPlayer/MPAVPlaylistFeeder.h>

@class MPAVController, RadioStation, NSDictionary;

@interface MPQueueFeeder : NSObject <MPAVPlaylistFeeder> {

	MPAVController* _avController;
	CFSetRef _itemsWithReferencesToClear;
	unsigned _repeatType;
	unsigned _shuffleType;
	CFDictionaryRef _nextStartTimes;
	id _representedObject;
	BOOL _fullScreenPlaybackQueue;
	BOOL _isSourceChangeInProgress;
	BOOL _deallocating;
	unsigned _activeShuffleType;

}

@property (nonatomic,readonly) RadioStation * station; 
@property (nonatomic,readonly) Class itemClass; 
@property (assign,nonatomic) BOOL fullScreenPlaybackQueue;                                     //@synthesize fullScreenPlaybackQueue=_fullScreenPlaybackQueue - In the implementation block
@property (nonatomic,readonly) BOOL userCanChangeShuffleAndRepeatType; 
@property (nonatomic,readonly) BOOL playerPreparesItemsForPlaybackAsynchronously; 
@property (nonatomic,readonly) NSDictionary * preferredLanguages; 
@property (nonatomic,readonly) BOOL trackChangesCanEndPlayback; 
@property (nonatomic,retain) <NSObject> * representedObject;                                   //@synthesize representedObject=_representedObject - In the implementation block
@property (assign,nonatomic) BOOL isSourceChangeInProgress;                                    //@synthesize isSourceChangeInProgress=_isSourceChangeInProgress - In the implementation block
@property (assign,nonatomic,__weak) MPAVController * AVController;                             //@synthesize avController=_avController - In the implementation block
@property (nonatomic,readonly) unsigned realRepeatType; 
@property (nonatomic,readonly) unsigned realShuffleType; 
@property (assign,nonatomic) unsigned repeatType;                                              //@synthesize repeatType=_repeatType - In the implementation block
@property (assign,nonatomic) unsigned shuffleType;                                             //@synthesize shuffleType=_shuffleType - In the implementation block
@property (assign,nonatomic) unsigned activeShuffleType;                                       //@synthesize activeShuffleType=_activeShuffleType - In the implementation block
@property (nonatomic,readonly) unsigned initialPlaybackQueueDepth; 
@property (nonatomic,readonly) unsigned itemCount; 
@property (nonatomic,readonly) unsigned nonRepeatingItemCount; 
+(void)restoreAVControllerPlaybackQueue:(id)arg1 fromUnarchiver:(id)arg2 feederClass:(Class)arg3 ;
-(id)station;
-(unsigned)nonRepeatingItemCount;
-(BOOL)canSkipItem:(id)arg1 ;
-(unsigned)activeShuffleType;
-(unsigned)itemCount;
-(id)copyRawItemAtIndex:(unsigned)arg1 ;
-(id)playbackInfoAtIndex:(unsigned)arg1 ;
-(void)clearReferencesToItem:(id)arg1 ;
-(id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3 ;
-(id)localizedPositionInPlaylistString:(id)arg1 ;
-(BOOL)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(BOOL)arg2 ;
-(void)setIsSourceChangeInProgress:(BOOL)arg1 ;
-(void)invalidateQueueCaches;
-(Class)itemClass;
-(unsigned)repeatType;
-(unsigned)shuffleType;
-(void)addReferenceToItem:(id)arg1 ;
-(BOOL)hasValidItemAtIndex:(unsigned)arg1 ;
-(void)_fixNextStartTimesByRemovingRange:(NSRange)arg1 ;
-(void)contentsDidChangeByRemovingRange:(NSRange)arg1 ;
-(BOOL)isSourceChangeInProgress;
-(void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned)arg1 ;
-(void)contentInvalidated;
-(BOOL)_canPurgeNextStartTimes;
-(void)restoreAVControllerPlaybackQueue:(id)arg1 fromUnarchiver:(id)arg2 ;
-(void)assumeOwnershipOfItems:(id)arg1 ;
-(BOOL)hasItemForIndex:(unsigned)arg1 ;
-(id)itemForIndex:(unsigned)arg1 ;
-(BOOL)shouldReloadForChangeFromNetworkType:(int)arg1 toNetworkType:(int)arg2 ;
-(unsigned)initialPlaybackQueueDepth;
-(void)_fixNextStartTimesByInsertingRange:(NSRange)arg1 ;
-(void)setNextStartTime:(double)arg1 forIndex:(unsigned)arg2 ;
-(void)setSubsequenceFocused:(BOOL)arg1 currentItemIndex:(unsigned)arg2 ;
-(void)shuffleItemsWithAnchor:(unsigned*)arg1 ;
-(BOOL)reloadWithDataSource:(id)arg1 ;
-(void)beginSourceChange;
-(void)commitSourceChangeWithStartQueueIndex:(unsigned)arg1 ;
-(id)errorResolverForItem:(id)arg1 ;
-(BOOL)shouldBeginPlaybackOfItem:(id)arg1 error:(id*)arg2 ;
-(BOOL)canSkipToPreviousItem;
-(unsigned)itemTypeForIndex:(unsigned)arg1 ;
-(BOOL)playerPreparesItemsForPlaybackAsynchronously;
-(BOOL)trackChangesCanEndPlayback;
-(BOOL)userCanChangeShuffleAndRepeatType;
-(unsigned)realRepeatType;
-(unsigned)realShuffleType;
-(void)controller:(id)arg1 willChangePlaybackIndexBy:(int)arg2 deltaType:(int)arg3 ignoreElapsedTime:(BOOL)arg4 allowSkippingAds:(BOOL)arg5 ;
-(void)archiveAVControllerPlaybackQueue:(id)arg1 toArchiver:(id)arg2 ;
-(id)AVController;
-(void)setAVController:(id)arg1 ;
-(void)setRepeatType:(unsigned)arg1 ;
-(void)setShuffleType:(unsigned)arg1 ;
-(void)setActiveShuffleType:(unsigned)arg1 ;
-(BOOL)fullScreenPlaybackQueue;
-(void)setFullScreenPlaybackQueue:(BOOL)arg1 ;
-(void)dealloc;
-(id)preferredLanguages;
-(id)representedObject;
-(void)setRepresentedObject:(id)arg1 ;
-(id)pathAtIndex:(unsigned)arg1 ;
-(BOOL)canSeek;
-(void).cxx_destruct;
@end

