/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:51:45 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/CFNetwork.framework/CFNetwork
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <CFNetwork/CFNetwork-Structs.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSSecureCoding.h>

@class NSString, NSDictionary, NSArray, NSURLCredentialStorage, NSURLCache, NSHTTPCookieStorage;

@interface __NSCFURLSessionConfiguration : NSObject <NSCopying, NSSecureCoding> {

	CFURLStorageSessionRef _legacyStorageSystem;
	BOOL _backgroundSession;
	BOOL _allowsCellularAccess;
	BOOL _discretionary;
	BOOL _sessionSendsLaunchEvents;
	BOOL _HTTPShouldUsePipelining;
	BOOL _HTTPShouldSetCookies;
	BOOL __credStorageSet;
	BOOL __urlCacheSet;
	BOOL __cookieStorageSet;
	BOOL _tasks_created_suspended;
	BOOL _skip_download_unlink;
	BOOL __preventsIdleSleep;
	BOOL __usePipeliningHeuristics;
	BOOL __startSynchronously;
	NSString* _identifier;
	unsigned _requestCachePolicy;
	unsigned _networkServiceType;
	NSDictionary* _connectionProxyDictionary;
	int _TLSMinimumSupportedProtocol;
	int _TLSMaximumSupportedProtocol;
	unsigned _HTTPCookieAcceptPolicy;
	NSDictionary* _HTTPAdditionalHeaders;
	int _HTTPMaximumConnectionsPerHost;
	NSArray* _protocolClasses;
	NSURLCredentialStorage* __credStorage;
	NSURLCache* __urlCache;
	NSHTTPCookieStorage* __cookieStorage;
	NSString* _disposition;
	CFHSTSPolicyRef _HSTSPolicy;
	NSDictionary* __cfurlConnectionProperties;
	NSDictionary* __socketStreamProperties;
	NSArray* __contentDispHeadEncFallback;
	double _timeoutIntervalForRequest;
	double _timeoutIntervalForResource;
	double _connectionCachePurgeTimeout;
	double _connectionCacheCellPurgeTimeout;

}

@property (getter=isBackgroundSession) BOOL backgroundSession;                                                                             //@synthesize backgroundSession=_backgroundSession - In the implementation block
@property (copy) NSString * identifier;                                                                                                    //@synthesize identifier=_identifier - In the implementation block
@property (assign) unsigned requestCachePolicy;                                                                                            //@synthesize requestCachePolicy=_requestCachePolicy - In the implementation block
@property (assign) double timeoutIntervalForRequest;                                                                                       //@synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest - In the implementation block
@property (assign) double timeoutIntervalForResource;                                                                                      //@synthesize timeoutIntervalForResource=_timeoutIntervalForResource - In the implementation block
@property (assign) unsigned networkServiceType;                                                                                            //@synthesize networkServiceType=_networkServiceType - In the implementation block
@property (assign) BOOL allowsCellularAccess;                                                                                              //@synthesize allowsCellularAccess=_allowsCellularAccess - In the implementation block
@property (getter=isDiscretionary) BOOL discretionary;                                                                                     //@synthesize discretionary=_discretionary - In the implementation block
@property (assign) BOOL sessionSendsLaunchEvents;                                                                                          //@synthesize sessionSendsLaunchEvents=_sessionSendsLaunchEvents - In the implementation block
@property (copy) NSDictionary * connectionProxyDictionary;                                                                                 //@synthesize connectionProxyDictionary=_connectionProxyDictionary - In the implementation block
@property (assign) int TLSMinimumSupportedProtocol;                                                                                        //@synthesize TLSMinimumSupportedProtocol=_TLSMinimumSupportedProtocol - In the implementation block
@property (assign) int TLSMaximumSupportedProtocol;                                                                                        //@synthesize TLSMaximumSupportedProtocol=_TLSMaximumSupportedProtocol - In the implementation block
@property (assign) BOOL HTTPShouldUsePipelining;                                                                                           //@synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining - In the implementation block
@property (assign) BOOL HTTPShouldSetCookies;                                                                                              //@synthesize HTTPShouldSetCookies=_HTTPShouldSetCookies - In the implementation block
@property (assign) unsigned HTTPCookieAcceptPolicy;                                                                                        //@synthesize HTTPCookieAcceptPolicy=_HTTPCookieAcceptPolicy - In the implementation block
@property (copy) NSDictionary * HTTPAdditionalHeaders;                                                                                     //@synthesize HTTPAdditionalHeaders=_HTTPAdditionalHeaders - In the implementation block
@property (assign) int HTTPMaximumConnectionsPerHost;                                                                                      //@synthesize HTTPMaximumConnectionsPerHost=_HTTPMaximumConnectionsPerHost - In the implementation block
@property (copy) NSArray * protocolClasses;                                                                                                //@synthesize protocolClasses=_protocolClasses - In the implementation block
@property (setter=setURLCredentialStorage:,getter=URLCredentialStorage,retain) NSURLCredentialStorage * URLCredentialStorage; 
@property (retain) NSURLCredentialStorage * _credStorage;                                                                                  //@synthesize _credStorage=__credStorage - In the implementation block
@property (assign) BOOL _credStorageSet;                                                                                                   //@synthesize _credStorageSet=__credStorageSet - In the implementation block
@property (setter=setURLCache:,getter=URLCache,retain) NSURLCache * URLCache; 
@property (retain) NSURLCache * _urlCache;                                                                                                 //@synthesize _urlCache=__urlCache - In the implementation block
@property (assign) BOOL _urlCacheSet;                                                                                                      //@synthesize _urlCacheSet=__urlCacheSet - In the implementation block
@property (setter=setHTTPCookieStorage:,getter=HTTPCookieStorage,retain) NSHTTPCookieStorage * HTTPCookieStorage; 
@property (retain) NSHTTPCookieStorage * _cookieStorage;                                                                                   //@synthesize _cookieStorage=__cookieStorage - In the implementation block
@property (assign) BOOL _cookieStorageSet;                                                                                                 //@synthesize _cookieStorageSet=__cookieStorageSet - In the implementation block
@property (assign) NSString * disposition;                                                                                                 //@synthesize disposition=_disposition - In the implementation block
@property (retain) CFHSTSPolicyRef HSTSPolicy;                                                                                             //@synthesize HSTSPolicy=_HSTSPolicy - In the implementation block
@property (assign) double connectionCachePurgeTimeout;                                                                                     //@synthesize connectionCachePurgeTimeout=_connectionCachePurgeTimeout - In the implementation block
@property (assign) double connectionCacheCellPurgeTimeout;                                                                                 //@synthesize connectionCacheCellPurgeTimeout=_connectionCacheCellPurgeTimeout - In the implementation block
@property (assign) BOOL tasks_created_suspended;                                                                                           //@synthesize tasks_created_suspended=_tasks_created_suspended - In the implementation block
@property (assign) BOOL skip_download_unlink;                                                                                              //@synthesize skip_download_unlink=_skip_download_unlink - In the implementation block
@property (copy) NSDictionary * _cfurlConnectionProperties;                                                                                //@synthesize _cfurlConnectionProperties=__cfurlConnectionProperties - In the implementation block
@property (copy) NSDictionary * _socketStreamProperties;                                                                                   //@synthesize _socketStreamProperties=__socketStreamProperties - In the implementation block
@property (assign) BOOL _preventsIdleSleep;                                                                                                //@synthesize _preventsIdleSleep=__preventsIdleSleep - In the implementation block
@property (assign) BOOL _usePipeliningHeuristics;                                                                                          //@synthesize _usePipeliningHeuristics=__usePipeliningHeuristics - In the implementation block
@property (assign) BOOL _startSynchronously;                                                                                               //@synthesize _startSynchronously=__startSynchronously - In the implementation block
@property (copy) NSArray * _contentDispHeadEncFallback;                                                                                    //@synthesize _contentDispHeadEncFallback=__contentDispHeadEncFallback - In the implementation block
+(id)defaultSessionConfiguration;
+(id)ephemeralSessionConfiguration;
+(id)backgroundSessionConfiguration:(id)arg1 ;
+(BOOL)supportsSecureCoding;
-(BOOL)skip_download_unlink;
-(BOOL)isBackgroundSession;
-(BOOL)tasks_created_suspended;
-(void)setHSTSPolicy:(CFHSTSPolicyRef)arg1 ;
-(void)setConnectionCachePurgeTimeout:(double)arg1 ;
-(void)setConnectionCacheCellPurgeTimeout:(double)arg1 ;
-(void)setTasks_created_suspended:(BOOL)arg1 ;
-(void)setSkip_download_unlink:(BOOL)arg1 ;
-(void)set_cfurlConnectionProperties:(id)arg1 ;
-(void)set_socketStreamProperties:(id)arg1 ;
-(id)initWithDisposition:(id)arg1 ;
-(void)setBackgroundSession:(BOOL)arg1 ;
-(id)_credStorage;
-(void)set_credStorage:(id)arg1 ;
-(BOOL)_credStorageSet;
-(void)set_credStorageSet:(BOOL)arg1 ;
-(id)_urlCache;
-(void)set_urlCache:(id)arg1 ;
-(BOOL)_urlCacheSet;
-(void)set_urlCacheSet:(BOOL)arg1 ;
-(void)set_cookieStorage:(id)arg1 ;
-(BOOL)_cookieStorageSet;
-(void)set_cookieStorageSet:(BOOL)arg1 ;
-(CFHSTSPolicyRef)HSTSPolicy;
-(double)connectionCachePurgeTimeout;
-(double)connectionCacheCellPurgeTimeout;
-(id)_cfurlConnectionProperties;
-(id)_socketStreamProperties;
-(BOOL)_preventsIdleSleep;
-(void)set_preventsIdleSleep:(BOOL)arg1 ;
-(BOOL)_usePipeliningHeuristics;
-(void)set_usePipeliningHeuristics:(BOOL)arg1 ;
-(BOOL)_startSynchronously;
-(void)set_startSynchronously:(BOOL)arg1 ;
-(id)_contentDispHeadEncFallback;
-(void)set_contentDispHeadEncFallback:(id)arg1 ;
-(unsigned)requestCachePolicy;
-(void)setRequestCachePolicy:(unsigned)arg1 ;
-(double)timeoutIntervalForRequest;
-(void)setTimeoutIntervalForRequest:(double)arg1 ;
-(double)timeoutIntervalForResource;
-(void)setTimeoutIntervalForResource:(double)arg1 ;
-(unsigned)networkServiceType;
-(void)setNetworkServiceType:(unsigned)arg1 ;
-(BOOL)allowsCellularAccess;
-(void)setAllowsCellularAccess:(BOOL)arg1 ;
-(BOOL)isDiscretionary;
-(void)setDiscretionary:(BOOL)arg1 ;
-(BOOL)sessionSendsLaunchEvents;
-(void)setSessionSendsLaunchEvents:(BOOL)arg1 ;
-(id)connectionProxyDictionary;
-(void)setConnectionProxyDictionary:(id)arg1 ;
-(int)TLSMinimumSupportedProtocol;
-(void)setTLSMinimumSupportedProtocol:(int)arg1 ;
-(int)TLSMaximumSupportedProtocol;
-(void)setTLSMaximumSupportedProtocol:(int)arg1 ;
-(BOOL)HTTPShouldUsePipelining;
-(void)setHTTPShouldUsePipelining:(BOOL)arg1 ;
-(BOOL)HTTPShouldSetCookies;
-(void)setHTTPShouldSetCookies:(BOOL)arg1 ;
-(unsigned)HTTPCookieAcceptPolicy;
-(void)setHTTPCookieAcceptPolicy:(unsigned)arg1 ;
-(id)HTTPAdditionalHeaders;
-(void)setHTTPAdditionalHeaders:(id)arg1 ;
-(int)HTTPMaximumConnectionsPerHost;
-(void)setHTTPMaximumConnectionsPerHost:(int)arg1 ;
-(id)HTTPCookieStorage;
-(void)setHTTPCookieStorage:(id)arg1 ;
-(id)URLCredentialStorage;
-(void)setURLCredentialStorage:(id)arg1 ;
-(id)URLCache;
-(void)setURLCache:(id)arg1 ;
-(id)protocolClasses;
-(void)setProtocolClasses:(id)arg1 ;
-(id)_cookieStorage;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)copyWithZone:(NSZoneRef)arg1 ;
-(id)identifier;
-(void)setIdentifier:(id)arg1 ;
-(id)disposition;
-(void)setDisposition:(id)arg1 ;
@end

