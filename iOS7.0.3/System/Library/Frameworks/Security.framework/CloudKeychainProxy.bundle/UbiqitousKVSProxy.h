/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:05:06 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/Security.framework/CloudKeychainProxy.bundle/CloudKeychainProxy
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_source;
@class NSString, NSArray, NSSet, NSMutableSet, NSObject;

@interface UbiqitousKVSProxy : NSObject {

	id currentiCloudToken;
	/*^block*/ id itemsChangedCallback;
	int callbackMethod;
	bool _syncWithPeersPending;
	bool _shadowSyncWithPeersPending;
	bool _inCallout;
	bool _unlockedSinceBoot;
	bool _isLocked;
	bool _seenKVSStoreChange;
	bool _syncTimerScheduled;
	NSString* _myID;
	NSArray* _keysToRead;
	NSArray* _keysToWrite;
	NSArray* _keysReadWrite;
	NSSet* _alwaysKeys;
	NSSet* _firstUnlockKeys;
	NSSet* _unlockedKeys;
	NSMutableSet* _pendingKeys;
	NSMutableSet* _shadowPendingKeys;
	NSObject<OS_dispatch_source>* _syncTimer;
	unsigned long long _deadline;
	unsigned long long _lastSyncTime;

}

@property (nonatomic,retain) NSString * myID;                               //@synthesize myID=_myID - In the implementation block
@property (nonatomic,retain) NSArray * keysToRead;                          //@synthesize keysToRead=_keysToRead - In the implementation block
@property (nonatomic,retain) NSArray * keysToWrite;                         //@synthesize keysToWrite=_keysToWrite - In the implementation block
@property (nonatomic,retain) NSArray * keysReadWrite;                       //@synthesize keysReadWrite=_keysReadWrite - In the implementation block
@property (nonatomic,retain) NSSet * alwaysKeys;                            //@synthesize alwaysKeys=_alwaysKeys - In the implementation block
@property (nonatomic,retain) NSSet * firstUnlockKeys;                       //@synthesize firstUnlockKeys=_firstUnlockKeys - In the implementation block
@property (nonatomic,retain) NSSet * unlockedKeys;                          //@synthesize unlockedKeys=_unlockedKeys - In the implementation block
@property (nonatomic,retain) NSMutableSet * pendingKeys;                    //@synthesize pendingKeys=_pendingKeys - In the implementation block
@property (nonatomic,retain) NSMutableSet * shadowPendingKeys;              //@synthesize shadowPendingKeys=_shadowPendingKeys - In the implementation block
@property (assign) bool syncWithPeersPending;                               //@synthesize syncWithPeersPending=_syncWithPeersPending - In the implementation block
@property (assign) bool shadowSyncWithPeersPending;                         //@synthesize shadowSyncWithPeersPending=_shadowSyncWithPeersPending - In the implementation block
@property (assign) bool inCallout;                                          //@synthesize inCallout=_inCallout - In the implementation block
@property (assign) bool unlockedSinceBoot;                                  //@synthesize unlockedSinceBoot=_unlockedSinceBoot - In the implementation block
@property (assign) bool isLocked;                                           //@synthesize isLocked=_isLocked - In the implementation block
@property (assign) bool seenKVSStoreChange;                                 //@synthesize seenKVSStoreChange=_seenKVSStoreChange - In the implementation block
@property (retain) NSObject<OS_dispatch_source> * syncTimer;                //@synthesize syncTimer=_syncTimer - In the implementation block
@property (assign) bool syncTimerScheduled;                                 //@synthesize syncTimerScheduled=_syncTimerScheduled - In the implementation block
@property (assign) unsigned long long deadline;                             //@synthesize deadline=_deadline - In the implementation block
@property (assign) unsigned long long lastSyncTime;                         //@synthesize lastSyncTime=_lastSyncTime - In the implementation block
+(id)sharedKVSProxy;
-(void)setDeadline:(unsigned long long)arg1 ;
-(unsigned long long)deadline;
-(void)requestSynchronization:(bool)arg1 ;
-(void)clearStore;
-(void)waitForSynchronization:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(id)registerKeysAndGet:(BOOL)arg1 always:(id)arg2 reqFirstUnlock:(id)arg3 reqUnlocked:(id)arg4 ;
-(id)localNotification:(id)arg1 outFlags:(long long*)arg2 ;
-(void)setParams:(id)arg1 ;
-(void)requestSyncWithAllPeers;
-(id)get:(id)arg1 ;
-(id)getAll;
-(void)setObjectsFromDictionary:(id)arg1 ;
-(void)setItemsChangedBlock:(/*^block*/ id)arg1 ;
-(id)exportKeyInterests;
-(void)timerFired;
-(void)iCloudAccountAvailabilityChanged:(id)arg1 ;
-(void)cloudChanged:(id)arg1 ;
-(void)importKeyInterests:(id)arg1 ;
-(void)streamEvent:(id)arg1 ;
-(BOOL)updateUnlockedSinceBoot;
-(BOOL)updateIsLocked;
-(void)keybagDidUnlock;
-(void)processKeyChangedEvent:(id)arg1 ;
-(id)cloudStore;
-(id)copyChangedValues:(id)arg1 ;
-(id)copyAllKeys;
-(id)keysForCurrentLockState;
-(id)filterKeySetWithLockState:(id)arg1 ;
-(void)persistState;
-(void)keybagStateChange;
-(void)kvsStoreChange;
-(void)processAllItems;
-(void)scheduleSyncRequestTimer;
-(void)calloutWith:(/*^block*/ id)arg1 ;
-(void)doSyncWithAllPeers;
-(unsigned long long)nextSyncTime;
-(void)keybagDidLock;
-(void)dumpStore;
-(id)myID;
-(void)setMyID:(id)arg1 ;
-(id)keysToRead;
-(void)setKeysToRead:(id)arg1 ;
-(id)keysToWrite;
-(void)setKeysToWrite:(id)arg1 ;
-(id)keysReadWrite;
-(void)setKeysReadWrite:(id)arg1 ;
-(id)alwaysKeys;
-(void)setAlwaysKeys:(id)arg1 ;
-(id)firstUnlockKeys;
-(void)setFirstUnlockKeys:(id)arg1 ;
-(id)unlockedKeys;
-(void)setUnlockedKeys:(id)arg1 ;
-(id)shadowPendingKeys;
-(void)setShadowPendingKeys:(id)arg1 ;
-(bool)syncWithPeersPending;
-(void)setSyncWithPeersPending:(bool)arg1 ;
-(bool)shadowSyncWithPeersPending;
-(void)setShadowSyncWithPeersPending:(bool)arg1 ;
-(bool)inCallout;
-(void)setInCallout:(bool)arg1 ;
-(bool)unlockedSinceBoot;
-(void)setUnlockedSinceBoot:(bool)arg1 ;
-(void)setIsLocked:(bool)arg1 ;
-(bool)seenKVSStoreChange;
-(void)setSeenKVSStoreChange:(bool)arg1 ;
-(id)syncTimer;
-(void)setSyncTimer:(id)arg1 ;
-(bool)syncTimerScheduled;
-(void)setSyncTimerScheduled:(bool)arg1 ;
-(void)dealloc;
-(id)init;
-(id)description;
-(void)removeObjectForKey:(id)arg1 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 ;
-(bool)isLocked;
-(id)pendingKeys;
-(void)setPendingKeys:(id)arg1 ;
-(void)setLastSyncTime:(unsigned long long)arg1 ;
-(unsigned long long)lastSyncTime;
-(void)saveToUbiquitousStore;
-(void).cxx_destruct;
@end

