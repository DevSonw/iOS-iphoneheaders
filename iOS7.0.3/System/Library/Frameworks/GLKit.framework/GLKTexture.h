/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:52:24 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/GLKit.framework/GLKit
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


#import <GLKit/GLKit-Structs.h>
@class NSData, NSString;

@interface GLKTexture : NSObject {

	NSData* imageData;
	CGImageBlockSetRef _blockSet;
	CFDataRef _cfData;
	unsigned _width;
	unsigned _height;
	unsigned orientation;
	unsigned numMipMapLevels;
	unsigned bitsPerPixel;
	unsigned _rowBytes;
	unsigned nComponents;
	unsigned nPrimarySurfaces;
	unsigned nSurfaces;
	int loadMode;
	int texelFormat;
	int _dataCategory;
	unsigned _index;
	unsigned GLTextureName;
	unsigned bindTarget;
	unsigned textureTarget;
	unsigned internalFormat;
	unsigned format;
	unsigned type;
	int _unpackAlignment;
	BOOL _requestIssuedForAlphaPremultiplication;
	BOOL _requestIssuedForMipmapGeneration;
	BOOL _requestIssuedToReorientToGL;
	BOOL _requestIssuedToInterpretGrayAsAlpha;
	BOOL _requestIssuedForSRGB;
	BOOL _hasPremultipliedAlpha;
	BOOL isPowerOfTwo;
	BOOL _isCubeMap;
	BOOL isMipmapped;
	BOOL isVerticalFlipped;
	BOOL hasAlpha;
	BOOL reOrient;
	unsigned _primarySurfaceLength;
	NSString* _label;

}

@property (readonly) NSData * imageData; 
@property (assign,nonatomic) unsigned GLTextureName; 
@property (assign,nonatomic) unsigned bindTarget; 
@property (assign,nonatomic) unsigned textureTarget; 
@property (assign,nonatomic) unsigned internalFormat; 
@property (assign,nonatomic) unsigned format; 
@property (assign,nonatomic) unsigned type; 
@property (assign,nonatomic) int texelFormat; 
@property (assign,nonatomic) unsigned width;                         //@synthesize width=_width - In the implementation block
@property (assign,nonatomic) unsigned height;                        //@synthesize height=_height - In the implementation block
@property (assign,nonatomic) unsigned orientation; 
@property (assign,nonatomic) unsigned numMipMapLevels; 
@property (assign,nonatomic) unsigned bitsPerPixel; 
@property (assign,nonatomic) unsigned rowBytes;                      //@synthesize rowBytes=_rowBytes - In the implementation block
@property (assign,nonatomic) unsigned nComponents; 
@property (assign,nonatomic) unsigned nPrimarySurfaces; 
@property (assign,nonatomic) unsigned nSurfaces; 
@property (assign,nonatomic) int loadMode; 
@property (assign,nonatomic) int dataCategory;                       //@synthesize dataCategory=_dataCategory - In the implementation block
@property (assign,nonatomic) unsigned index;                         //@synthesize index=_index - In the implementation block
@property (readonly) BOOL hasPremultipliedAlpha;                     //@synthesize hasPremultipliedAlpha=_hasPremultipliedAlpha - In the implementation block
@property (assign,nonatomic) BOOL isPowerOfTwo; 
@property (assign,nonatomic) BOOL isCubeMap;                         //@synthesize isCubeMap=_isCubeMap - In the implementation block
@property (assign,nonatomic) BOOL isMipmapped; 
@property (assign,nonatomic) BOOL isVerticalFlipped; 
@property (assign,nonatomic) BOOL hasAlpha; 
@property (assign,nonatomic) BOOL reOrient; 
@property (nonatomic,copy) NSString * label;                         //@synthesize label=_label - In the implementation block
-(void)updateRequestedOperationsFromOptions:(id)arg1 ;
-(BOOL)loadWithData:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(BOOL)loadPVRTCData:(id)arg1 error:(id*)arg2 ;
-(BOOL)loadCGImage:(CGImageRef)arg1 options:(id)arg2 error:(id*)arg3 ;
-(int)loadMode;
-(int)dataCategory;
-(BOOL)isCubeMap;
-(unsigned)nComponents;
-(int)texelFormat;
-(unsigned)internalFormat;
-(BOOL)isPowerOfTwo;
-(BOOL)isVerticalFlipped;
-(unsigned)bindTarget;
-(BOOL)determinePVRFormat:(unsigned)arg1 ;
-(void*)alignmentFix:(unsigned long)arg1 data:(const void*)arg2 ;
-(BOOL)shouldApplyReorientToGL;
-(BOOL)shouldApplyPremultiplication;
-(BOOL)determineCGImageBlockFormatWithComponentType:(int)arg1 andPixelSize:(unsigned long)arg2 andColorModel:(int)arg3 ;
-(BOOL)decodeCGImageImageProvider:(CGImageRef)arg1 CGImageProvider:(CGImageProviderRef)arg2 ;
-(BOOL)decodeCGImageDataProvider:(CGImageRef)arg1 ;
-(BOOL)decodeCGImage:(CGImageRef)arg1 ;
-(BOOL)canHonorSRGBrequest;
-(BOOL)reorientToGL:(void*)arg1 source:(void*)arg2 withWidth:(unsigned)arg3 withHeight:(unsigned)arg4 withRowBytes:(unsigned)arg5 error:(id*)arg6 ;
-(BOOL)premultiplyWithAlpha:(void*)arg1 source:(void*)arg2 withWidth:(unsigned)arg3 withHeight:(unsigned)arg4 withRowBytes:(unsigned)arg5 error:(id*)arg6 ;
-(BOOL)_uploadToGLTexture:(unsigned)arg1 data:(id)arg2 width:(int)arg3 height:(int)arg4 dataCategory:(int)arg5 cubeMapIndex:(int)arg6 mipMapIndex:(int)arg7 error:(id*)arg8 ;
-(unsigned)rowBytes;
-(id)initWithData:(id)arg1 forceCubeMap:(BOOL)arg2 wasCubeMap:(BOOL*)arg3 cubeMapIndex:(int)arg4 options:(id)arg5 error:(id*)arg6 ;
-(id)initWithCGImage:(CGImageRef)arg1 forceCubeMap:(BOOL)arg2 wasCubeMap:(BOOL*)arg3 cubeMapIndex:(int)arg4 options:(id)arg5 error:(id*)arg6 ;
-(id)initWithDecodedData:(id)arg1 width:(unsigned)arg2 height:(unsigned)arg3 rowBytes:(unsigned)arg4 texture:(id)arg5 cubeMapIndex:(int)arg6 options:(id)arg7 error:(id*)arg8 ;
-(BOOL)uploadToGLTexture:(unsigned)arg1 error:(id*)arg2 ;
-(unsigned)GLTextureName;
-(void)setGLTextureName:(unsigned)arg1 ;
-(void)setLoadMode:(int)arg1 ;
-(void)setDataCategory:(int)arg1 ;
-(void)setBindTarget:(unsigned)arg1 ;
-(void)setInternalFormat:(unsigned)arg1 ;
-(void)setTexelFormat:(int)arg1 ;
-(unsigned)numMipMapLevels;
-(void)setNumMipMapLevels:(unsigned)arg1 ;
-(void)setRowBytes:(unsigned)arg1 ;
-(void)setNComponents:(unsigned)arg1 ;
-(unsigned)nPrimarySurfaces;
-(void)setNPrimarySurfaces:(unsigned)arg1 ;
-(unsigned)nSurfaces;
-(void)setNSurfaces:(unsigned)arg1 ;
-(BOOL)hasPremultipliedAlpha;
-(void)setIsPowerOfTwo:(BOOL)arg1 ;
-(void)setIsCubeMap:(BOOL)arg1 ;
-(BOOL)isMipmapped;
-(void)setIsMipmapped:(BOOL)arg1 ;
-(void)setIsVerticalFlipped:(BOOL)arg1 ;
-(BOOL)reOrient;
-(void)setReOrient:(BOOL)arg1 ;
-(BOOL)hasAlpha;
-(void)setHasAlpha:(BOOL)arg1 ;
-(unsigned)textureTarget;
-(void)setTextureTarget:(unsigned)arg1 ;
-(void)dealloc;
-(id)init;
-(unsigned)orientation;
-(void)setType:(unsigned)arg1 ;
-(unsigned)type;
-(unsigned)width;
-(void)setWidth:(unsigned)arg1 ;
-(unsigned)height;
-(id)label;
-(void)setLabel:(id)arg1 ;
-(unsigned)index;
-(void)setOrientation:(unsigned)arg1 ;
-(void)setHeight:(unsigned)arg1 ;
-(void)setIndex:(unsigned)arg1 ;
-(unsigned)bitsPerPixel;
-(void)setBitsPerPixel:(unsigned)arg1 ;
-(id)imageData;
-(unsigned)format;
-(void)setFormat:(unsigned)arg1 ;
@end

