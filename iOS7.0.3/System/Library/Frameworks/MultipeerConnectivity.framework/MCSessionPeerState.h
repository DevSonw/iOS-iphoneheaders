/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:52:58 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/MultipeerConnectivity.framework/MultipeerConnectivity
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@class MCPeerID, NSMutableDictionary;

@interface MCSessionPeerState : NSObject {

	MCPeerID* _peerID;
	int _state;
	NSMutableDictionary* _outgoingStreamRequests;
	NSMutableDictionary* _incomingStreams;
	NSMutableDictionary* _outgoingStreams;
	int _certificateDecision;
	unsigned _newStreamOpenRequestID;
	unsigned _newStreamID;

}

@property (nonatomic,readonly) MCPeerID * peerID;                                       //@synthesize peerID=_peerID - In the implementation block
@property (assign,nonatomic) int state;                                                 //@synthesize state=_state - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * outgoingStreamRequests;              //@synthesize outgoingStreamRequests=_outgoingStreamRequests - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * outgoingStreams;                     //@synthesize outgoingStreams=_outgoingStreams - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * incomingStreams;                     //@synthesize incomingStreams=_incomingStreams - In the implementation block
@property (nonatomic,readonly) unsigned newStreamOpenRequestID;                         //@synthesize newStreamOpenRequestID=_newStreamOpenRequestID - In the implementation block
@property (nonatomic,readonly) unsigned newStreamID;                                    //@synthesize newStreamID=_newStreamID - In the implementation block
@property (assign,nonatomic) int certificateDecision;                                   //@synthesize certificateDecision=_certificateDecision - In the implementation block
-(id)peerID;
-(id)initWithPeer:(id)arg1 ;
-(unsigned)newStreamID;
-(unsigned)newStreamOpenRequestID;
-(id)outgoingStreamRequests;
-(void)setOutgoingStreamRequests:(id)arg1 ;
-(id)incomingStreams;
-(void)setIncomingStreams:(id)arg1 ;
-(id)outgoingStreams;
-(void)setOutgoingStreams:(id)arg1 ;
-(int)certificateDecision;
-(void)setCertificateDecision:(int)arg1 ;
-(void)dealloc;
-(int)state;
-(void)setState:(int)arg1 ;
@end

