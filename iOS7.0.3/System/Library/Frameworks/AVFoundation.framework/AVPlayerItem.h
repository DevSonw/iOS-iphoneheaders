/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 3:51:25 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <AVFoundation/AVFoundation-Structs.h>
#import <CoreFoundation/NSCopying.h>

@class AVPlayerItemInternal, MPAVItem, NSDate, NSString, NSArray, NSError;

@interface AVPlayerItem : NSObject <NSCopying> {

	AVPlayerItemInternal* _playerItem;

}

@property (nonatomic,retain) MPAVItem * MPAVItem; 
@property (getter=isAuthorizationRequiredForPlayback,nonatomic,readonly) BOOL authorizationRequiredForPlayback; 
@property (getter=isApplicationAuthorizedForPlayback,nonatomic,readonly) BOOL applicationAuthorizedForPlayback; 
@property (getter=isContentAuthorizedForPlayback,nonatomic,readonly) BOOL contentAuthorizedForPlayback; 
@property (assign,setter=_setExternalProtectionRequiredForPlayback:,getter=_isExternalProtectionRequiredForPlayback,nonatomic) BOOL _externalProtectionRequiredForPlayback; 
@property (getter=_isRental,nonatomic,readonly) BOOL _rental; 
@property (nonatomic,readonly) NSDate * _rentalStartDate; 
@property (nonatomic,readonly) NSDate * _rentalExpirationDate; 
@property (getter=_isRentalPlaybackStarted,nonatomic,readonly) BOOL _rentalPlaybackStarted; 
@property (nonatomic,readonly) NSDate * _rentalPlaybackStartedDate; 
@property (nonatomic,readonly) NSDate * _rentalPlaybackExpirationDate; 
@property (nonatomic,copy) NSString * dataYouTubeID; 
@property (nonatomic,readonly) BOOL canDisplayExternalSubtitles; 
@property (assign,nonatomic) BOOL displaysExternalSubtitles; 
@property (nonatomic,readonly) NSArray * outputs; 
@property (nonatomic,copy) NSString * mediaKind; 
@property (assign,nonatomic) unsigned restrictions; 
@property (nonatomic,copy) NSString * serviceIdentifier; 
@property (nonatomic,readonly) int status; 
@property (nonatomic,readonly) NSError * error; 
+(id)playerItemWithURL:(id)arg1 ;
+(BOOL)_forStreamingItemsVendAssetWithFigPlaybackItem;
+(BOOL)_forNonStreamingURLsFireKVOForAssetWhenReadyForInspection;
+(id)playerItemWithAsset:(id)arg1 automaticallyLoadedAssetKeys:(id)arg2 ;
+(BOOL)automaticallyNotifiesObserversOfForwardPlaybackEndTime;
+(BOOL)automaticallyNotifiesObserversOfReversePlaybackEndTime;
+(BOOL)automaticallyNotifiesObserversOfLimitReadAhead;
+(BOOL)automaticallyNotifiesObserversOfBufferingTargetMaximum;
+(BOOL)automaticallyNotifiesObserversOfBufferingTargetMinimum;
+(BOOL)automaticallyNotifiesObserversOfAlwaysMonitorsPlayability;
+(BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUpTrigger;
+(BOOL)automaticallyNotifiesObserversOfWillNeverSeekBackwardsHint;
+(BOOL)automaticallyNotifiesObserversOfSavesDownloadedDataToDiskWhenDone;
+(BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForSeek;
+(BOOL)automaticallyNotifiesObserversOfContinuesPlayingDuringPrerollForRateChange;
+(BOOL)automaticallyNotifiesObserversOfAudioMix;
+(BOOL)automaticallyNotifiesObserversOfVideoComposition;
+(BOOL)automaticallyNotifiesObserversOfSeekingWaitsForVideoCompositionRendering;
+(BOOL)automaticallyNotifiesObserversOfTextStyleRules;
+(BOOL)automaticallyNotifiesObserversOfAudioTimePitchAlgorithm;
+(BOOL)automaticallyNotifiesObserversOfGaplessInfo;
+(BOOL)automaticallyNotifiesObserversOfVariantIndex;
+(BOOL)automaticallyNotifiesObserversOfSoundCheckVolumeNormalization;
+(BOOL)automaticallyNotifiesObserversOfVolumeAdjustment;
+(BOOL)automaticallyNotifiesObserversOfNonForcedSubtitleDisplayEnabled;
+(BOOL)automaticallyNotifiesObserversOfHasEnabledVideo;
+(BOOL)automaticallyNotifiesObserversOfHasEnabledAudio;
+(BOOL)automaticallyNotifiesObserversOfNetworkUsuallyExceedsMaxBitRate;
+(BOOL)automaticallyNotifiesObserversOfAllowProgressiveSwitchUp;
+(BOOL)automaticallyNotifiesObserversOfStatus;
+(BOOL)automaticallyNotifiesObserversOfAsset;
+(BOOL)automaticallyNotifiesObserversOfPlaybackLikelyToKeepUp;
+(BOOL)automaticallyNotifiesObserversOfPlaybackBufferEmpty;
+(BOOL)automaticallyNotifiesObserversOfPlaybackBufferFull;
+(BOOL)automaticallyNotifiesObserversOfSeekableTimeRanges;
+(BOOL)automaticallyNotifiesObserversOfLoadedTimeRanges;
+(BOOL)automaticallyNotifiesObserversOfPresentationSize;
+(BOOL)automaticallyNotifiesObserversOfTracks;
+(id)_initializeProtectedContentPlaybackSupportSessionAsynchronouslyForProvider:(id)arg1 withOptions:(id)arg2 ;
+(void)_uninitializeProtectedContentPlaybackSupportSession:(id)arg1 ;
+(BOOL)automaticallyNotifiesObserversOfMediaKind;
+(BOOL)automaticallyNotifiesObserversOfRestrictions;
+(void)initialize;
+(id)playerItemWithAsset:(id)arg1 ;
-(id)MPAVItem;
-(void)setMPAVItem:(id)arg1 ;
-(id)_cachedValueForKey:(id)arg1 ;
-(id)_stateDispatchQueue;
-(id)_weakReference;
-(id)_tracks;
-(id)videoComposition;
-(void)setVideoComposition:(id)arg1 ;
-(id)customVideoCompositor;
-(id)outputs;
-(void)_removeFPListeners;
-(void)_willAccessKVOForKey:(id)arg1 ;
-(void)_didAccessKVOForKey:(id)arg1 ;
-(void)_playerChangeStatusToFailedWithError:(id)arg1 ;
-(void)_setIsCurrentPlayerItem:(BOOL)arg1 ;
-(OpaqueFigPlaybackItemRef)_figPlaybackItem;
-(void)_enqueueWithPlayer:(id)arg1 shouldAppendItem:(BOOL)arg2 ;
-(id)_playerConnection;
-(void)_addFPListeners;
-(id)_propertyStorage;
-(id)_nextItem;
-(void)_makeReadyForEnqueueingWithCompletionHandler:(/*^block*/ id)arg1 ;
-(void)_changeStatusToFailedWithError:(id)arg1 ;
-(void)_attachToPlayer:(id)arg1 ;
-(void)_insertAfterItem:(id)arg1 ;
-(id)_previousItem;
-(void)_dequeueFromPlayer;
-(void)_removeFromItems;
-(BOOL)seekToDate:(id)arg1 completionHandler:(/*^block*/ id)arg2 ;
-(void)seekToTime:(SCD_Struct_CM4)arg1 toleranceBefore:(SCD_Struct_CM4)arg2 toleranceAfter:(SCD_Struct_CM4)arg3 completionHandler:(/*^block*/ id)arg4 ;
-(id)_fpNotificationNames;
-(void)seekToTime:(SCD_Struct_CM4)arg1 completionHandler:(/*^block*/ id)arg2 ;
-(OpaqueCMTimebaseRef)_copyTimebase;
-(BOOL)_hasEnabledVideo;
-(void)_setTimedMetadata:(id)arg1 ;
-(BOOL)displaysExternalSubtitles;
-(void)cancelPendingSeeks;
-(id)automaticallyLoadedAssetKeys;
-(SCD_Struct_CM4)reversePlaybackEndTime;
-(id)initialDate;
-(id)initialEstimatedDate;
-(BOOL)savesDownloadedDataToDiskWhenDone;
-(BOOL)networkUsuallyExceedsMaxBitRate;
-(BOOL)allowProgressiveSwitchUp;
-(float)maximumBitRate;
-(BOOL)seekingWaitsForVideoCompositionRendering;
-(id)textStyleRules;
-(id)gaplessInfo;
-(float)volumeAdjustment;
-(BOOL)requiresAccessLog;
-(id)serviceIdentifier;
-(id)mediaKind;
-(unsigned)restrictions;
-(id)initWithAsset:(id)arg1 automaticallyLoadedAssetKeys:(id)arg2 ;
-(void)_createPlayerItemInternal;
-(void)_setURL:(id)arg1 ;
-(void)_setAsset:(id)arg1 ;
-(void)_removeFAListeners;
-(void)setTextStyleRules:(id)arg1 ;
-(void)setReversePlaybackEndTime:(SCD_Struct_CM4)arg1 ;
-(void)setVolumeAdjustment:(float)arg1 ;
-(BOOL)continuesPlayingDuringPrerollForRateChange;
-(void)setContinuesPlayingDuringPrerollForRateChange:(BOOL)arg1 ;
-(BOOL)continuesPlayingDuringPrerollForSeek;
-(void)setContinuesPlayingDuringPrerollForSeek:(BOOL)arg1 ;
-(BOOL)isNonForcedSubtitleDisplayEnabled;
-(void)setNonForcedSubtitleDisplayEnabled:(BOOL)arg1 ;
-(id)_URL;
-(BOOL)_isExternalProtectionRequiredForPlayback;
-(OpaqueCMTimebaseRef)timebase;
-(void)setSavesDownloadedDataToDiskWhenDone:(BOOL)arg1 ;
-(void)_quietlySetForwardPlaybackEndTime:(SCD_Struct_CM4)arg1 ;
-(void)_quietlySetReversePlaybackEndTime:(SCD_Struct_CM4)arg1 ;
-(void)_quietlySetContinuesPlayingDuringPrerollForSeek:(BOOL)arg1 ;
-(void)_quietlySetContinuesPlayingDuringPrerollForRateChange:(BOOL)arg1 ;
-(void)_setVideoCompositionFrameDuration:(SCD_Struct_CM4)arg1 ;
-(void)_setVideoCompositionRenderSize:(CGSize)arg1 ;
-(void)_setVideoCompositionRenderScale:(float)arg1 ;
-(void)_setVideoCompositionInstructions:(id)arg1 ;
-(void)_setVideoCompositor:(void*)arg1 ;
-(void)_applySeekingWaitsForVideoCompositionRendering;
-(void)_quietlySetEQPreset:(int)arg1 ;
-(id)_playbackProperties;
-(void)_quietlySetPlaybackProperties:(id)arg1 ;
-(void)_quietlySetVariantIndex:(int)arg1 ;
-(void)_quietlySetSoundCheckVolumeNormalization:(float)arg1 ;
-(void)_quietlySetVolumeAdjustment:(float)arg1 ;
-(void)_quietlySetFigTimePitchAlgorithm:(CFStringRef)arg1 ;
-(void)_applyMediaSelectionOptions;
-(void)_applyTextStyleRules;
-(void)_quietlySetMediaKind:(id)arg1 ;
-(void)_quietlySetRestrictions:(unsigned)arg1 ;
-(void)_quietlySetServiceIdentifier:(id)arg1 ;
-(void)_setSyncLayersOnFigPlaybackItem:(id)arg1 ;
-(void)_attachOutputs;
-(void)_detachOutputs;
-(void)_setPlayerConnection:(id)arg1 ;
-(void)_configurePlaybackItem;
-(void)_quietlySetLimitReadAhead:(BOOL)arg1 ;
-(void)_quietlySetPlaybackLikelyToKeepUpTrigger:(int)arg1 ;
-(void)_quietlySetWillNeverSeekBackwardsHint:(BOOL)arg1 ;
-(void)_quietlySetAlwaysMonitorsPlayability:(BOOL)arg1 ;
-(void)_quietlySetBufferingTargetMaximum:(double)arg1 ;
-(void)_quietlySetBufferingTargetMinimum:(double)arg1 ;
-(void)_quietlySetNonForcedSubtitleDisplayEnabled:(BOOL)arg1 ;
-(void)_evaluateVideoOutputs;
-(void)_evaluateLegibleOutputs;
-(void)_respondToBecomingReadyForBasicInspection;
-(BOOL)_isNonForcedSubtitleDisplayEnabled;
-(void)_attachToFigPlayer;
-(void)_createPlayerConnection:(id)arg1 shouldAppendItem:(BOOL)arg2 ;
-(void)_addFAListeners;
-(void)_setAssetWithFigPlaybackItem:(id)arg1 ;
-(void)_makeNewAssetWithFigPlaybackItem;
-(BOOL)_hasEnabledAudio;
-(CGSize)_presentationSize;
-(BOOL)_isCurrentPlayerItem;
-(void)_setTrackIDsForAssetWithFigPlaybackItem:(id)arg1 ;
-(void)_informObserversAboutAvailabilityOfDuration;
-(void)_applyInitialAudioMix;
-(void)_kickAssetObserversIfAppropriate;
-(void)_informObserversAboutAvailabilityOfTracks;
-(void)_informObserversAboutAvailabilityOfPresentationSize;
-(void)_invokeReadyForEnqueueingHandlers;
-(BOOL)_canPlayFastForward;
-(BOOL)_canPlayFastReverse;
-(BOOL)_isAFileBasedItemThatsReadyToPlay;
-(BOOL)_canPlayReverse;
-(BOOL)_canPlaySlowForward;
-(BOOL)_canPlaySlowReverse;
-(BOOL)_canStepForward;
-(BOOL)_canStepBackward;
-(int)_CreateSeekID;
-(int)_cancelPendingSeekAndRegisterSeekCompletionHandler:(/*^block*/ id)arg1 ;
-(void)_unregisterInvokeAndReleasePendingSeekCompletionHandlerForSeekID:(int)arg1 finished:(BOOL)arg2 ;
-(SCD_Struct_CM4)_forwardPlaybackEndTime;
-(SCD_Struct_CM4)_reversePlaybackEndTime;
-(BOOL)_limitReadAhead;
-(double)_bufferingTargetMaximum;
-(double)_bufferingTargetMinimum;
-(BOOL)_alwaysMonitorsPlayability;
-(int)_playbackLikelyToKeepUpTrigger;
-(BOOL)_willNeverSeekBackwardsHint;
-(BOOL)_continuesPlayingDuringPrerollForSeek;
-(BOOL)_continuesPlayingDuringPrerollForRateChange;
-(id)audioTimePitchAlgorithm;
-(void)_applyAudioMix;
-(id)_audioTimePitchAlgorithm;
-(id)_loadedTimeRanges;
-(void)_selectMediaOption:(id)arg1 inMediaSelectionGroup:(id)arg2 cacheIfAppropriate:(BOOL)arg3 ;
-(void)_selectMediaOption:(id)arg1 usingFigSelectedMediaArrayObtainedFromGroup:(id)arg2 ;
-(void)_cacheMediaSelectionOption:(id)arg1 forMediaSelectionGroup:(id)arg2 ;
-(void)_selectMediaOption:(id)arg1 inAlternateTrackGroup:(id)arg2 cacheIfAppropriate:(BOOL)arg3 ;
-(void)_selectMediaOption:(id)arg1 inKeyValueGroup:(id)arg2 cacheIfAppropriate:(BOOL)arg3 ;
-(void)_allowSelectMediaOptionsAutomaticallyUsingFigSelectedMediaArrayObtainedFromGroup:(id)arg1 ;
-(void)_clearCachedMediaSelectionGroup:(id)arg1 ;
-(BOOL)_suppressionForOutputs:(id)arg1 ;
-(void)_evaluateVideoSuppression;
-(void)_evaluateLegibleSuppression;
-(void)_setAssetToAssetWithFigPlaybackItemIfAppropriate;
-(id)_trackWithTrackID:(int)arg1 ;
-(BOOL)canPlayReverse;
-(BOOL)canPlaySlowForward;
-(BOOL)canPlaySlowReverse;
-(BOOL)canStepForward;
-(BOOL)canStepBackward;
-(void)setInitialDate:(id)arg1 ;
-(id)currentEstimatedDate;
-(void)setInitialEstimatedDate:(id)arg1 ;
-(void)stepByCount:(int)arg1 ;
-(void)_updateTimebase;
-(double)bufferingTargetMaximum;
-(void)setBufferingTargetMaximum:(double)arg1 ;
-(double)bufferingTargetMinimum;
-(void)setBufferingTargetMinimum:(double)arg1 ;
-(BOOL)alwaysMonitorsPlayability;
-(void)setAlwaysMonitorsPlayability:(BOOL)arg1 ;
-(int)playbackLikelyToKeepUpTrigger;
-(BOOL)willNeverSeekBackwardsHint;
-(void)setSeekingWaitsForVideoCompositionRendering:(BOOL)arg1 ;
-(BOOL)isPlaybackBufferEmpty;
-(float)progressTowardsPlaybackLikelyToKeepUp;
-(id)playabilityMetrics;
-(int)variantIndex;
-(void)setVariantIndex:(int)arg1 ;
-(OpaqueFigCPEProtectorRef)_figCPEProtector;
-(void)_removeSyncLayer:(id)arg1 ;
-(void)_addSyncLayer:(id)arg1 ;
-(id)_playbackItemNotificationPayloadToError:(CFDictionaryRef)arg1 ;
-(BOOL)hasEnabledVideo;
-(BOOL)hasEnabledAudio;
-(void)setNetworkUsuallyExceedsMaxBitRate:(BOOL)arg1 ;
-(void)setAllowProgressiveSwitchUp:(BOOL)arg1 ;
-(void)setMaximumBitRate:(float)arg1 ;
-(void)_renderingSuppressionDidChangeForOutput:(id)arg1 ;
-(void)setRequiresAccessLog:(BOOL)arg1 ;
-(BOOL)isAuthorizationRequiredForPlayback;
-(BOOL)isApplicationAuthorizedForPlayback;
-(BOOL)isContentAuthorizedForPlayback;
-(void)_setExternalProtectionRequiredForPlayback:(BOOL)arg1 ;
-(BOOL)_isRental;
-(id)_rentalStartDate;
-(id)_rentalExpirationDate;
-(BOOL)_isRentalPlaybackStarted;
-(id)_rentalPlaybackStartedDate;
-(id)_rentalPlaybackExpirationDate;
-(BOOL)canDisplayExternalSubtitles;
-(void)displayExternalSubtitleString:(id)arg1 forced:(BOOL)arg2 ;
-(void)setDisplaysExternalSubtitles:(BOOL)arg1 ;
-(void)_setTimebaseOnOutputs:(OpaqueCMTimebaseRef)arg1 ;
-(id)_mediaKind;
-(id)_player;
-(SCD_Struct_CM4)currentTime;
-(id)accessLog;
-(id)errorLog;
-(id)timedMetadata;
-(BOOL)limitReadAhead;
-(void)setLimitReadAhead:(BOOL)arg1 ;
-(long long)_fileSize;
-(id)currentDate;
-(BOOL)seekToDate:(id)arg1 ;
-(void)selectMediaOption:(id)arg1 inMediaSelectionGroup:(id)arg2 ;
-(void)selectMediaOptionAutomaticallyInMediaSelectionGroup:(id)arg1 ;
-(id)selectedMediaOptionInMediaSelectionGroup:(id)arg1 ;
-(void)removeOutput:(id)arg1 ;
-(SCD_Struct_CM4)forwardPlaybackEndTime;
-(void)setForwardPlaybackEndTime:(SCD_Struct_CM4)arg1 ;
-(id)dataYouTubeID;
-(void)setDataYouTubeID:(id)arg1 ;
-(id)_seekableTimeRanges;
-(id)loadedTimeRanges;
-(id)seekableTimeRanges;
-(void)setSoundCheckVolumeNormalization:(float)arg1 ;
-(void)_setEQPreset:(int)arg1 ;
-(void)seekToTime:(SCD_Struct_CM4)arg1 ;
-(void)setGaplessInfo:(id)arg1 ;
-(void)_setAudibleDRMInfo:(id)arg1 ;
-(void)_setRampInOutInfo:(id)arg1 ;
-(float)soundCheckVolumeNormalization;
-(void)setPlaybackLikelyToKeepUpTrigger:(int)arg1 ;
-(void)setWillNeverSeekBackwardsHint:(BOOL)arg1 ;
-(void)setMediaKind:(id)arg1 ;
-(void)seekToTime:(SCD_Struct_CM4)arg1 toleranceBefore:(SCD_Struct_CM4)arg2 toleranceAfter:(SCD_Struct_CM4)arg3 ;
-(BOOL)isPlaybackLikelyToKeepUp;
-(BOOL)isPlaybackBufferFull;
-(BOOL)canPlayFastForward;
-(BOOL)canPlayFastReverse;
-(long long)_availableFileSize;
-(void)setServiceIdentifier:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)description;
-(id)delegate;
-(SCD_Struct_CM4)duration;
-(SCD_Struct_CM4)_duration;
-(void)willChangeValueForKey:(id)arg1 ;
-(void)didChangeValueForKey:(id)arg1 ;
-(id)copyWithZone:(NSZoneRef)arg1 ;
-(void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned)arg3 context:(void*)arg4 ;
-(id)valueForUndefinedKey:(id)arg1 ;
-(id)initWithURL:(id)arg1 ;
-(id)initWithAsset:(id)arg1 ;
-(id)asset;
-(int)status;
-(CGSize)presentationSize;
-(void)addOutput:(id)arg1 ;
-(void)setAudioMix:(id)arg1 ;
-(void)setAudioTimePitchAlgorithm:(id)arg1 ;
-(id)tracks;
-(id)audioMix;
-(id)error;
-(void)setRestrictions:(unsigned)arg1 ;
-(void)finalize;
@end

