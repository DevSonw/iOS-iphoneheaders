/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:19:04 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /usr/libexec/mc_mobile_tunnel
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <ManagedConfiguration/MCTunnelParser.h>

@class NSMutableDictionary, NSString, NSData;

@interface MCIPCUTunnelParser : MCTunnelParser {

	/*^block*/ id _escalationBlock;
	NSMutableDictionary* _CSR;
	NSString* _hostIdentifier;
	NSData* _challengeCertificate;
	NSData* _challenge;

}

@property (nonatomic,copy) id escalationBlock;                           //@synthesize escalationBlock=_escalationBlock - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * CSR;                  //@synthesize CSR=_CSR - In the implementation block
@property (nonatomic,retain) NSString * hostIdentifier;                  //@synthesize hostIdentifier=_hostIdentifier - In the implementation block
@property (nonatomic,retain) NSData * challengeCertificate;              //@synthesize challengeCertificate=_challengeCertificate - In the implementation block
@property (nonatomic,retain) NSData * challenge;                         //@synthesize challenge=_challenge - In the implementation block
-(void)setCSR:(id)arg1 ;
-(id)CSR;
-(/*^block*/ id)escalationBlock;
-(void)setChallengeCertificate:(id)arg1 ;
-(id)challengeCertificate;
-(id)_commandGetEncryptionKey:(id)arg1 ;
-(id)_commandSetCertificate:(id)arg1 ;
-(id)_commandHello:(id)arg1 ;
-(id)_commandGetProfileList:(id)arg1 ;
-(id)_commandInstallProfile:(id)arg1 ;
-(id)_commandRemoveProfile:(id)arg1 ;
-(id)_commandStoreProfile:(id)arg1 ;
-(void)_commandGetStoredProfile:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)_commandGetCloudConfiguration:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)_commandSetCloudConfiguration:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)_commandSetLanguage:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)_commandSetLocale:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)_commandEscalate:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)_commandEscalateResponse:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void)setEscalationBlock:(/*^block*/ id)arg1 ;
-(id)hostIdentifier;
-(void)setHostIdentifier:(id)arg1 ;
-(void)processRequest:(id)arg1 completionBlock:(/*^block*/ id)arg2 ;
-(void).cxx_destruct;
-(id)challenge;
-(void)setChallenge:(id)arg1 ;
@end

