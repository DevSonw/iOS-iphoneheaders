/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:19:06 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /usr/libexec/nsnetworkd
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <nsnetworkd/NDSpringBoardAppObserver.h>
#import <nsnetworkd/NSURLSessionDownloadDelegate_Private.h>
#import <nsnetworkd/NDCredentialStorageDelegate.h>
#import <CFNetwork/NDBackgroundSessionProtocol.h>
#import <nsnetworkd/NDCallbackQueueDelegate.h>
#import <MultipeerConnectivity/NSURLSessionDataDelegate.h>
#import <iWorkImport/NSURLSessionDownloadDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_semaphore, NSXPCProxyCreatingNDBackgroundSessionClient, NDBackgroundSessionDelegate;
@class NSURLSession, NDCredentialStorage, NSObject, NSString, NDCallbackQueue, NSMutableDictionary, NSMutableArray, NSURL, NSXPCConnection;

@interface NDBackgroundSession : NSObject <NDSpringBoardAppObserver, NSURLSessionDownloadDelegate_Private, NDCredentialStorageDelegate, NDBackgroundSessionProtocol, NDCallbackQueueDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate> {

	NSURLSession* _userInitiatedSession;
	NSURLSession* _discretionaryPrioritySession;
	NDCredentialStorage* _credentialStorage;
	NSObject<OS_dispatch_queue>* _workQueue;
	NSObject<OS_dispatch_queue>* _archiveQueue;
	NSString* _clientBundleID;
	NDCallbackQueue* _callbackQueue;
	NSMutableDictionary* _tasksToIdentifiers;
	NSMutableDictionary* _identifiersToTasks;
	NSMutableDictionary* _identifiersToTaskInfo;
	NSMutableDictionary* _identifiersToMonitors;
	NSMutableArray* _outstandingTaskIDs;
	NSURL* _sessionDirectory;
	NSURL* _downloadDirectory;
	BOOL _sendsLaunchEvents;
	BOOL _discretionary;
	BOOL _obliterated;
	BOOL _cleanedUp;
	BOOL _delayPendingEventsUntilReady;
	NSObject<OS_dispatch_semaphore>* _readyForPendingEventsSem;
	int _clientPID;
	<NSXPCProxyCreating><NDBackgroundSessionClient>* _clientProxy;
	NSXPCConnection* _xpcConn;
	<NDBackgroundSessionDelegate>* _delegate;
	NSString* _identifier;

}

@property (__weak) <NDBackgroundSessionDelegate> * delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) NSString * identifier;                               //@synthesize identifier=_identifier - In the implementation block
-(id)setupDownloadDirectory:(id)arg1 ;
-(id)configurationWithClientConfiguration:(id)arg1 forPriority:(int)arg2 ;
-(void)clientDidDisconnect;
-(void)cancelMonitorForTask:(unsigned)arg1 ;
-(void)archiveTaskInfo;
-(void)obliterate;
-(void)cleanupSession;
-(id)tasksArchivePath;
-(void)removeDownloadFileForTaskInfo:(id)arg1 ;
-(id)sessionForPriority:(int)arg1 ;
-(void)initializeTask:(id)arg1 fromTaskInfo:(id)arg2 ;
-(id)createNewTaskFromInfo:(id)arg1 ;
-(id)restoreCompletedTask:(id)arg1 ;
-(id)restoreInProgressTask:(id)arg1 ;
-(id)restoreTask:(id)arg1 isOutstanding:(BOOL*)arg2 ;
-(void)requeueTask:(unsigned)arg1 ;
-(BOOL)sessionHasOutstandingTasks;
-(void)wakeUpClient;
-(BOOL)clientIsActive;
-(id)createClientTaskForTask:(id)arg1 taskInfo:(id)arg2 ;
-(void)enqueueTask:(id)arg1 withPriority:(int)arg2 ;
-(id)makeTempUploadFile:(id)arg1 ;
-(void)notifyQueueOfTaskCompletion:(id)arg1 identifier:(unsigned)arg2 taskInfo:(id)arg3 suppressWake:(BOOL)arg4 ;
-(void)retryTask:(id)arg1 originalError:(id)arg2 ;
-(void)removeUploadFileForTask:(id)arg1 ;
-(void)applicationWasQuitFromAppSwitcher:(id)arg1 ;
-(void)applicationBackgroundUpdatesTurnedOff:(id)arg1 ;
-(void)applicationWasSuspended:(id)arg1 ;
-(void)applicationEnteredForeground:(id)arg1 ;
-(void)applicationNoLongerInForeground:(id)arg1 ;
-(id)getClientProxy;
-(void)errorOccurredDuringFinishedCallbackDelivery:(id)arg1 ;
-(void)errorOccurredDuringAuthCallbackDelivery:(id)arg1 completionHandler:(/*^block*/ id)arg2 ;
-(void)clientAcknowledgedTerminalCallbackForTask:(unsigned)arg1 ;
-(id)initWithConfiguration:(id)arg1 bundleID:(id)arg2 downloadDirectory:(id)arg3 clientProxy:(id)arg4 delegate:(id)arg5 ;
-(void)setXPCConnection:(id)arg1 ;
-(void)clientApplicationWasReinstalled;
-(id)restoreTasks;
-(void)reconnectClient:(id)arg1 withCompletion:(/*^block*/ id)arg2 ;
-(void)allowReconnect;
-(id)getTasksForReconnection;
-(void)taskShouldResume:(unsigned)arg1 withTimeout:(long long)arg2 ;
-(void)taskShouldSuspend:(unsigned)arg1 ;
-(void)downloadTaskWithRequest:(id)arg1 originalRequest:(id)arg2 identifier:(unsigned)arg3 reply:(/*^block*/ id)arg4 ;
-(void)uploadTaskWithRequest:(id)arg1 originalRequest:(id)arg2 fromFile:(id)arg3 identifier:(unsigned)arg4 reply:(/*^block*/ id)arg5 ;
-(void)downloadTaskWithResumeData:(id)arg1 identifier:(unsigned)arg2 reply:(/*^block*/ id)arg3 ;
-(void)cancelTaskWithIdentifier:(unsigned)arg1 ;
-(void)cancelTaskWithIdentifier:(unsigned)arg1 byProducingResumeData:(/*^block*/ id)arg2 ;
-(void)suspendTaskWithIdentifier:(unsigned)arg1 ;
-(void)resumeTaskWithIdentifier:(unsigned)arg1 ;
-(void)setDescription:(id)arg1 forTask:(unsigned)arg2 ;
-(void)resetStorageWithReply:(/*^block*/ id)arg1 ;
-(void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(/*^block*/ id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(/*^block*/ id)arg4 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(/*^block*/ id)arg4 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4 ;
-(void)_URLSession:(id)arg1 downloadTask:(id)arg2 didReceiveResponse:(id)arg3 ;
-(id)_URLSession:(id)arg1 downloadTaskNeedsDownloadDirectory:(id)arg2 ;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(id)identifier;
-(int)currentPriority;
-(void).cxx_destruct;
@end

