/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:18:51 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /usr/libexec/backboardd
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue, OS_xpc_object;
@class NSObject, NSMutableSet, BKWorkspaceServerManager, BKApplicationStateService;

@interface BKApplicationStateServer : NSObject {

	NSObject<OS_dispatch_queue>* _queue;
	NSObject<OS_xpc_object>* _clientConnection;
	NSMutableSet* _clients;
	BOOL _connectionResumed;
	BOOL _usesAnonymousConnection;
	BKWorkspaceServerManager* _workspaceServerManager;
	BKApplicationStateService* _stateService;

}

@property (nonatomic,retain) BKApplicationStateService * stateService;                                 //@synthesize stateService=_stateService - In the implementation block
@property (nonatomic,retain) BKWorkspaceServerManager * workspaceServerManager;                        //@synthesize workspaceServerManager=_workspaceServerManager - In the implementation block
@property (assign,getter=usesAnonymousConnection,nonatomic) BOOL usesAnonymousConnection;              //@synthesize usesAnonymousConnection=_usesAnonymousConnection - In the implementation block
+(id)sharedInstance;
-(void)_stateChanged:(id)arg1 ;
-(void)_handleConnect:(id)arg1 ;
-(void)_handleInterestedNotificationsChanged:(id)arg1 ;
-(void)_handleApplicationInfoForApplication:(id)arg1 ;
-(void)_handleApplicationInfoForProcessID:(id)arg1 ;
-(void)_handleApplicationStateForApplication:(id)arg1 ;
-(void)_handleMostElevatedApplicationStateForPID:(id)arg1 ;
-(void)_handleIsApplicationBeingDebugged:(id)arg1 ;
-(void)_handleRetrieveBundleInfoForKey:(id)arg1 ;
-(id)workspaceServerManager;
-(void)setWorkspaceServerManager:(id)arg1 ;
-(id)stateService;
-(void)setStateService:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(void)_invalidate;
-(id)_connection;
-(void)registerServerSuspended;
-(void)resumeServer;
-(void)_addClientConnection:(id)arg1 ;
-(void)_removeClientConnection:(id)arg1 ;
-(id)_clientForConnection:(id)arg1 ;
-(void)_sendReply:(id)arg1 messagePacker:(/*^block*/ id)arg2 ;
-(id)_getStringFromMessage:(id)arg1 key:(char*)arg2 ;
-(id)_clients;
-(id)_copyEndpoint;
-(BOOL)usesAnonymousConnection;
-(void)setUsesAnonymousConnection:(BOOL)arg1 ;
-(void)_handleMessage:(id)arg1 ;
@end

