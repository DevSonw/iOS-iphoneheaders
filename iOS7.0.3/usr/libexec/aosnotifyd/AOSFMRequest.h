/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:18:47 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /usr/libexec/aosnotifyd
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <libTelephonyUtilDynamic.dylib/NSURLConnectionDelegate.h>
#import <ManagedConfiguration/NSURLConnectionDataDelegate.h>

@protocol AOSFMRequestDelegate;
@class NSDictionary, NSError, NSRecursiveLock, NSMutableDictionary, NSString, NSDate, PCPersistentTimer, NSMutableData, NSHTTPURLResponse, NSURLConnection, NSURL;

@interface AOSFMRequest : NSObject <NSURLConnectionDelegate, NSURLConnectionDataDelegate> {

	BOOL _inProgress;
	BOOL _cancelled;
	BOOL _isComplete;
	BOOL _willRetry;
	int _httpResponseStatus;
	NSDictionary* _httpResponseHeaders;
	NSDictionary* _httpResponseBody;
	NSError* _httpResponseError;
	<AOSFMRequestDelegate>* _delegate;
	/*^block*/ id _willSendHandler;
	/*^block*/ id _completionHandler;
	NSDictionary* _alertFromServerResponse;
	NSRecursiveLock* _requestModifierLock;
	int _totalRetryCount;
	NSMutableDictionary* _totalRetriesByType;
	NSMutableDictionary* _consecutiveRetriesByType;
	NSString* _lastRetryType;
	NSDate* _lastRetryTime;
	NSString* _nextRetryType;
	NSDate* _nextRetryTime;
	PCPersistentTimer* _retryTimer;
	NSMutableData* _temporaryResponseData;
	NSHTTPURLResponse* _temporaryURLResponse;
	NSURLConnection* _currentURLConnection;

}

@property (nonatomic,readonly) NSURL * requestUrl; 
@property (nonatomic,readonly) NSMutableDictionary * requestBody; 
@property (nonatomic,readonly) NSMutableDictionary * requestHeaders; 
@property (nonatomic,readonly) NSString * authToken; 
@property (nonatomic,readonly) BOOL needsSignature; 
@property (nonatomic,readonly) BOOL showAuthFailedMessage; 
@property (assign,nonatomic) BOOL inProgress;                                             //@synthesize inProgress=_inProgress - In the implementation block
@property (assign,nonatomic) BOOL cancelled;                                              //@synthesize cancelled=_cancelled - In the implementation block
@property (assign,nonatomic) BOOL isComplete;                                             //@synthesize isComplete=_isComplete - In the implementation block
@property (assign,nonatomic) BOOL willRetry;                                              //@synthesize willRetry=_willRetry - In the implementation block
@property (assign,nonatomic) int httpResponseStatus;                                      //@synthesize httpResponseStatus=_httpResponseStatus - In the implementation block
@property (nonatomic,retain) NSDictionary * httpResponseHeaders;                          //@synthesize httpResponseHeaders=_httpResponseHeaders - In the implementation block
@property (nonatomic,retain) NSDictionary * httpResponseBody;                             //@synthesize httpResponseBody=_httpResponseBody - In the implementation block
@property (nonatomic,retain) NSError * httpResponseError;                                 //@synthesize httpResponseError=_httpResponseError - In the implementation block
@property (nonatomic,readonly) int responseErrorType; 
@property (assign,nonatomic,__weak) <AOSFMRequestDelegate> * delegate;                    //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy) id willSendHandler;                                            //@synthesize willSendHandler=_willSendHandler - In the implementation block
@property (nonatomic,copy) id completionHandler;                                          //@synthesize completionHandler=_completionHandler - In the implementation block
@property (nonatomic,readonly) double firstRetryInterval; 
@property (nonatomic,readonly) double retryIntervalDecayFactor; 
@property (nonatomic,readonly) double maxRetryInterval; 
@property (nonatomic,readonly) int maxTimerBasedNetworkRetries; 
@property (nonatomic,readonly) int maxNonNetworkRelatedRetries; 
@property (nonatomic,readonly) int maxConsecutiveNetworkNotificationRetries; 
@property (nonatomic,readonly) BOOL canRequestBeRetriedNow; 
@property (nonatomic,retain) NSDictionary * alertFromServerResponse;                      //@synthesize alertFromServerResponse=_alertFromServerResponse - In the implementation block
@property (nonatomic,retain) NSRecursiveLock * requestModifierLock;                       //@synthesize requestModifierLock=_requestModifierLock - In the implementation block
@property (assign,nonatomic) int totalRetryCount;                                         //@synthesize totalRetryCount=_totalRetryCount - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * totalRetriesByType;                    //@synthesize totalRetriesByType=_totalRetriesByType - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * consecutiveRetriesByType;              //@synthesize consecutiveRetriesByType=_consecutiveRetriesByType - In the implementation block
@property (nonatomic,retain) NSString * lastRetryType;                                    //@synthesize lastRetryType=_lastRetryType - In the implementation block
@property (nonatomic,retain) NSDate * lastRetryTime;                                      //@synthesize lastRetryTime=_lastRetryTime - In the implementation block
@property (nonatomic,retain) NSString * nextRetryType;                                    //@synthesize nextRetryType=_nextRetryType - In the implementation block
@property (nonatomic,retain) NSDate * nextRetryTime;                                      //@synthesize nextRetryTime=_nextRetryTime - In the implementation block
@property (nonatomic,retain) PCPersistentTimer * retryTimer;                              //@synthesize retryTimer=_retryTimer - In the implementation block
@property (nonatomic,retain) NSMutableData * temporaryResponseData;                       //@synthesize temporaryResponseData=_temporaryResponseData - In the implementation block
@property (nonatomic,retain) NSHTTPURLResponse * temporaryURLResponse;                    //@synthesize temporaryURLResponse=_temporaryURLResponse - In the implementation block
@property (nonatomic,retain) NSURLConnection * currentURLConnection;                      //@synthesize currentURLConnection=_currentURLConnection - In the implementation block
+(void)initialize;
-(void)setIsComplete:(BOOL)arg1 ;
-(int)httpResponseStatus;
-(id)httpResponseError;
-(BOOL)willRetry;
-(id)alertFromServerResponse;
-(int)responseErrorType;
-(BOOL)showAuthFailedMessage;
-(void)setRequestModifierLock:(id)arg1 ;
-(void)setWillSendHandler:(/*^block*/ id)arg1 ;
-(id)httpResponseBody;
-(id)requestModifierLock;
-(BOOL)canReplace:(id)arg1 ;
-(void)deinitializeRequest;
-(id)requestUrl;
-(id)authTokenType;
-(BOOL)canRequestBeRetriedNow;
-(double)maxRetryInterval;
-(int)maxNonNetworkRelatedRetries;
-(int)maxConsecutiveNetworkNotificationRetries;
-(void)setWillRetry:(BOOL)arg1 ;
-(void)_networkStateChanged:(id)arg1 ;
-(id)nextRetryType;
-(id)_basicAuthValue;
-(void)setAlertFromServerResponse:(id)arg1 ;
-(/*^block*/ id)willSendHandler;
-(id)requestHeaders;
-(BOOL)needsSignature;
-(void)_enablePowerAssertion;
-(int)totalRetryCount;
-(void)_beginXPCTransaction;
-(void)setCurrentURLConnection:(id)arg1 ;
-(id)currentURLConnection;
-(id)retryTimer;
-(void)setRetryTimer:(id)arg1 ;
-(void)setNextRetryTime:(id)arg1 ;
-(void)_endXPCTransaction;
-(void)_disablePowerAssertion;
-(id)temporaryURLResponse;
-(id)temporaryResponseData;
-(void)setHttpResponseStatus:(int)arg1 ;
-(void)setHttpResponseError:(id)arg1 ;
-(void)setHttpResponseBody:(id)arg1 ;
-(void)setTemporaryURLResponse:(id)arg1 ;
-(void)setTemporaryResponseData:(id)arg1 ;
-(void)_copyStuffFromURLResponseWithError:(id)arg1 ;
-(void)checkAndScheduleRetries;
-(void)_doneWithConnection:(id)arg1 andError:(id)arg2 ;
-(void)setNextRetryType:(id)arg1 ;
-(int)_retryCountForType:(id)arg1 ;
-(int)maxTimerBasedNetworkRetries;
-(double)_decayedWaitIntervalForRetryCount:(int)arg1 ;
-(int)_consecutiveRetryCountForType:(id)arg1 ;
-(void)_scheduleRetryAfterTimeInterval:(double)arg1 ;
-(double)firstRetryInterval;
-(double)retryIntervalDecayFactor;
-(void)_retryNow;
-(void)setLastRetryTime:(id)arg1 ;
-(void)_incrementRetryCountForType:(id)arg1 ;
-(id)nextRetryTime;
-(id)lastRetryType;
-(id)lastRetryTime;
-(void)_retryTimerFired;
-(id)totalRetriesByType;
-(id)consecutiveRetriesByType;
-(void)setTotalRetriesByType:(id)arg1 ;
-(void)setConsecutiveRetriesByType:(id)arg1 ;
-(void)_networkCameUp;
-(void)setTotalRetryCount:(int)arg1 ;
-(void)setLastRetryType:(id)arg1 ;
-(id)authToken;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(/*^block*/ id)completionHandler;
-(BOOL)cancelled;
-(void)setCancelled:(BOOL)arg1 ;
-(void)cancel;
-(void)connection:(id)arg1 didFailWithError:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(void)connectionDidFinishLoading:(id)arg1 ;
-(void)connection:(id)arg1 didReceiveResponse:(id)arg2 ;
-(void)send;
-(void)setCompletionHandler:(/*^block*/ id)arg1 ;
-(id)requestBody;
-(id)httpResponseHeaders;
-(BOOL)inProgress;
-(void)setInProgress:(BOOL)arg1 ;
-(BOOL)isComplete;
-(void)setHttpResponseHeaders:(id)arg1 ;
-(void).cxx_destruct;
-(BOOL)connectionShouldUseCredentialStorage:(id)arg1 ;
-(void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2 ;
@end

