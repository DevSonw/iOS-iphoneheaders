/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:18:46 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /usr/libexec/aosnotifyd
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <aosnotifyd/AOSServiceProvider.h>
#import <aosnotifyd/AOSFMRequestDelegate.h>

@class AOSFindBaseAccount, NSString, AOSLocator, AOSLocationTracker, NSMutableArray, NSRecursiveLock, NSMutableDictionary;

@interface AOSFindBaseServiceProvider : AOSServiceProvider <AOSFMRequestDelegate> {

	BOOL _allowServerRequests;
	BOOL _hasProviderRegisteredOnce;
	NSString* _apsToken;
	AOSLocator* _standardLocator;
	AOSLocationTracker* _locationTracker;
	NSMutableArray* _requests;
	NSRecursiveLock* _requestModifierLock;

}

@property (nonatomic,retain) AOSFindBaseAccount * account; 
@property (nonatomic,retain) NSString * apsToken;                                        //@synthesize apsToken=_apsToken - In the implementation block
@property (nonatomic,retain) AOSLocator * standardLocator;                               //@synthesize standardLocator=_standardLocator - In the implementation block
@property (nonatomic,retain) AOSLocationTracker * locationTracker;                       //@synthesize locationTracker=_locationTracker - In the implementation block
@property (assign,nonatomic) BOOL allowServerRequests;                                   //@synthesize allowServerRequests=_allowServerRequests - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * standardDeviceContext; 
@property (nonatomic,readonly) NSMutableDictionary * volatileDeviceInfo; 
@property (nonatomic,readonly) NSMutableDictionary * fullDeviceInfo; 
@property (nonatomic,readonly) NSMutableDictionary * locationDeviceInfo; 
@property (nonatomic,readonly) BOOL locServicesCapable; 
@property (nonatomic,readonly) BOOL locatesAllowed; 
@property (nonatomic,readonly) NSString * serviceIdentifierInURL; 
@property (nonatomic,retain) NSMutableArray * requests;                                  //@synthesize requests=_requests - In the implementation block
@property (nonatomic,retain) NSRecursiveLock * requestModifierLock;                      //@synthesize requestModifierLock=_requestModifierLock - In the implementation block
@property (assign,nonatomic) BOOL hasProviderRegisteredOnce;                             //@synthesize hasProviderRegisteredOnce=_hasProviderRegisteredOnce - In the implementation block
+(void)initialize;
-(void)localeChanged:(id)arg1 ;
-(void)deleteRegisterDigest;
-(void)setLocationTracker:(id)arg1 ;
-(id)locationTracker;
-(void)registerCommonNotifications;
-(void)deinitializeProvider;
-(void)deregisterCommonNotifications;
-(void)unregisterDevice;
-(unsigned)essentialServerInfoMissingError;
-(void)tryToFetchAuthToken;
-(BOOL)enqueueRequest:(id)arg1 ;
-(void)registerDeviceWithCause:(id)arg1 force:(BOOL)arg2 ;
-(void)registerDeviceWithCause:(id)arg1 ;
-(void)sendQueueCheckRequest:(id)arg1 ;
-(id)_constructVolatileFullDeviceInfo;
-(void)didReceiveAuthFailureForRequest:(id)arg1 ;
-(id)newLocationManager;
-(id)urlForRequestType:(id)arg1 ;
-(unsigned)authInvalidError;
-(void)setAllowServerRequests:(BOOL)arg1 ;
-(id)apsToken;
-(void)setApsToken:(id)arg1 ;
-(id)_constructStandardDeviceContext;
-(id)_constructNonVolatileFullDeviceInfo;
-(id)substituteStandardURLPlaceholders:(id)arg1 ;
-(id)serviceIdentifierInURL;
-(id)copyHandlerForCommand:(id)arg1 params:(id)arg2 ;
-(BOOL)isProviderEnabledForLocations;
-(BOOL)locatesAllowed;
-(id)standardLocator;
-(void)setRequestModifierLock:(id)arg1 ;
-(void)deviceNameChanged:(id)arg1 ;
-(void)passcodeStateChanged:(id)arg1 ;
-(void)locationServicesStateChanged:(id)arg1 ;
-(void)timezoneChanged:(id)arg1 ;
-(id)_registerDigestPrefKey;
-(id)_lastForcedRegisterTimePrefKey;
-(void)setStandardLocator:(id)arg1 ;
-(id)_constructNonCriticalFullDeviceInfo;
-(id)_constructLocationDeviceInfo;
-(id)volatileDeviceInfo;
-(void)_registerDeviceWithCause:(id)arg1 ;
-(id)_registrationInformationDigest;
-(BOOL)hasProviderRegisteredOnce;
-(void)setHasProviderRegisteredOnce:(BOOL)arg1 ;
-(void)handleQueueCheckResponseWithStatus:(int)arg1 andBody:(id)arg2 ;
-(void)recordLocation:(id)arg1 ofType:(int)arg2 ;
-(void)sendTrackedLocations:(id)arg1 withCurrentLocation:(id)arg2 ;
-(id)alertActionInfoForAction:(id)arg1 andURL:(id)arg2 ;
-(BOOL)allowServerRequests;
-(id)requestModifierLock;
-(void)showAlertFromServerResponse:(id)arg1 ;
-(void)didReceiveResponseFor:(id)arg1 ;
-(void)didCancelRequest:(id)arg1 ;
-(id)standardDeviceContext;
-(id)fullDeviceInfo;
-(id)locationDeviceInfo;
-(void)sendCurrentLocation:(id)arg1 isFinished:(BOOL)arg2 forCmd:(id)arg3 withReason:(int)arg4 andAccuracyChange:(double)arg5 ;
-(void)ackRegisterCommand:(id)arg1 ;
-(void)ackMessageCommand:(id)arg1 ;
-(void)ackLockCommand:(id)arg1 withStatus:(int)arg2 ;
-(void)ackTrackCommand:(id)arg1 ;
-(void)ackLocateCommand:(id)arg1 withStatusCode:(int)arg2 andStatusMessage:(id)arg3 ;
-(void)didAddNewTrackedLocation:(id)arg1 ;
-(BOOL)locServicesCapable;
-(BOOL)setPasscodeLock:(id)arg1 statusCode:(int*)arg2 ;
-(id)serviceName;
-(void)dealloc;
-(id)init;
-(id)requests;
-(void)setRequests:(id)arg1 ;
-(void).cxx_destruct;
@end

