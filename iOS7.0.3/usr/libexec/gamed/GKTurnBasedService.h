/*
* This header is generated by classdump-dyld 0.1
* on Thursday, November 28, 2013 at 4:18:59 AM Eastern European Standard Time
* Operating System: Version 7.0.3 (Build 11B511)
* Image Source: /usr/libexec/gamed
* classdump-dyld is free of use, Copyright Â© 2013 by Elias Limneos.
*/

#import <gamed/GKService.h>
#import <GameCenterFoundation/GKTurnBasedService.h>

@protocol GKTurnBasedService <NSObject>
@required
-(oneway void)getNextTurnBasedEventWithHandler:(/*^block*/ id)arg1;
-(oneway void)getTurnBasedMatchesAndCompatibleBundleID:(BOOL)arg1 handler:(/*^block*/ id)arg2;
-(oneway void)getDetailsForTurnBasedMatchIDs:(id)arg1 includeGameData:(BOOL)arg2 handler:(/*^block*/ id)arg3;
-(oneway void)acceptInviteForTurnBasedMatch:(id)arg1 handler:(/*^block*/ id)arg2;
-(oneway void)declineInviteForTurnBasedMatch:(id)arg1 handler:(/*^block*/ id)arg2;
-(oneway void)removeTurnBasedMatch:(id)arg1 handler:(/*^block*/ id)arg2;
-(oneway void)submitTurnForTurnBasedMatch:(id)arg1 nextParticipantIndexes:(id)arg2 turnTimeout:(double)arg3 handler:(/*^block*/ id)arg4;
-(oneway void)resignFromTurnBasedGame:(id)arg1 outcome:(unsigned)arg2 handler:(/*^block*/ id)arg3;
-(oneway void)completeTurnBasedMatch:(id)arg1 scores:(id)arg2 achievements:(id)arg3 handler:(/*^block*/ id)arg4;
-(oneway void)saveDataForTurnBasedMatch:(id)arg1 resolvedExchangeIDs:(id)arg2 handler:(/*^block*/ id)arg3;
-(oneway void)sendExchangeToParticipants:(id)arg1 data:(id)arg2 message:(id)arg3 timeout:(double)arg4 match:(id)arg5 handler:(/*^block*/ id)arg6;
-(oneway void)sendReminderToParticipants:(id)arg1 message:(id)arg2 match:(id)arg3 handler:(/*^block*/ id)arg4;
-(oneway void)cancelExchange:(id)arg1 withMessage:(id)arg2 match:(id)arg3 handler:(/*^block*/ id)arg4;
-(oneway void)replyToExchange:(id)arg1 withMessage:(id)arg2 data:(id)arg3 match:(id)arg4 handler:(/*^block*/ id)arg5;
-(oneway void)createTurnBasedGameForMatchRequest:(id)arg1 individualMessages:(id)arg2 handler:(/*^block*/ id)arg3;
@end


@interface GKTurnBasedService : GKService <GKTurnBasedService>
+(Class)interfaceClass;
+(unsigned long)requiredEntitlements;
-(void)getTurnBasedMatchesWithHandler:(/*^block*/ id)arg1 ;
-(void)_determineCompatibleBundleIDForAppID:(id)arg1 appVersion:(id)arg2 withCompletionHandler:(/*^block*/ id)arg3 ;
-(void)_updateGamesForTurnBasedMatches:(id)arg1 dispatchGroup:(id)arg2 ;
-(void)_determineTurnBasedBadgeCountForGame:(id)arg1 context:(id)arg2 completionHandler:(/*^block*/ id)arg3 ;
-(oneway void)getDetailsForTurnBasedMatchIDs:(id)arg1 includeGameData:(BOOL)arg2 prefetchOnly:(BOOL)arg3 handler:(/*^block*/ id)arg4 ;
-(void)_determineCompatibleGamesForMatches:(id)arg1 dispatchGroup:(id)arg2 ;
-(void)loadTurnBasedMatchesForGame:(id)arg1 loadDetails:(BOOL)arg2 prefetchOnly:(BOOL)arg3 context:(id)arg4 handler:(/*^block*/ id)arg5 ;
-(void)fetchTurnBasedMatchesForGame:(id)arg1 includeBundleID:(BOOL)arg2 context:(id)arg3 responseKind:(int)arg4 handler:(/*^block*/ id)arg5 ;
-(void)_updatePlayersForMatches:(id)arg1 group:(id)arg2 ;
-(void)loadDetailsForTurnBasedMatchIDs:(id)arg1 includeGameData:(BOOL)arg2 context:(id)arg3 handler:(/*^block*/ id)arg4 ;
-(void)fetchDetailsForTurnBasedMatchIDs:(id)arg1 includeGameData:(BOOL)arg2 responseKind:(int)arg3 context:(id)arg4 handler:(/*^block*/ id)arg5 ;
-(id)turnsForParticipantIndexes:(id)arg1 turnTimeout:(double)arg2 ;
-(id)_requestForTurnBasedSubmitValues:(id)arg1 withServerLabel:(id)arg2 sessionID:(id)arg3 ;
-(oneway void)sendRequest:(id)arg1 forBagKey:(id)arg2 exchange:(id)arg3 matchID:(id)arg4 responseHandler:(/*^block*/ id)arg5 ;
-(oneway void)getNextTurnBasedEventWithHandler:(/*^block*/ id)arg1 ;
-(oneway void)getTurnBasedMatchesAndCompatibleBundleID:(BOOL)arg1 handler:(/*^block*/ id)arg2 ;
-(oneway void)getDetailsForTurnBasedMatchIDs:(id)arg1 includeGameData:(BOOL)arg2 handler:(/*^block*/ id)arg3 ;
-(oneway void)acceptInviteForTurnBasedMatch:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(oneway void)declineInviteForTurnBasedMatch:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(oneway void)removeTurnBasedMatch:(id)arg1 handler:(/*^block*/ id)arg2 ;
-(oneway void)submitTurnForTurnBasedMatch:(id)arg1 nextParticipantIndexes:(id)arg2 turnTimeout:(double)arg3 handler:(/*^block*/ id)arg4 ;
-(oneway void)resignFromTurnBasedGame:(id)arg1 outcome:(unsigned)arg2 handler:(/*^block*/ id)arg3 ;
-(oneway void)completeTurnBasedMatch:(id)arg1 scores:(id)arg2 achievements:(id)arg3 handler:(/*^block*/ id)arg4 ;
-(oneway void)saveDataForTurnBasedMatch:(id)arg1 resolvedExchangeIDs:(id)arg2 handler:(/*^block*/ id)arg3 ;
-(oneway void)sendExchangeToParticipants:(id)arg1 data:(id)arg2 message:(id)arg3 timeout:(double)arg4 match:(id)arg5 handler:(/*^block*/ id)arg6 ;
-(oneway void)sendReminderToParticipants:(id)arg1 message:(id)arg2 match:(id)arg3 handler:(/*^block*/ id)arg4 ;
-(oneway void)cancelExchange:(id)arg1 withMessage:(id)arg2 match:(id)arg3 handler:(/*^block*/ id)arg4 ;
-(oneway void)replyToExchange:(id)arg1 withMessage:(id)arg2 data:(id)arg3 match:(id)arg4 handler:(/*^block*/ id)arg5 ;
-(oneway void)createTurnBasedGameForMatchRequest:(id)arg1 individualMessages:(id)arg2 handler:(/*^block*/ id)arg3 ;
@end

