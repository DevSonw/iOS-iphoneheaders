/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:26:58 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/CoreServices/AssistiveTouch.app/assistivetouchd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <assistivetouchd/assistivetouchd-Structs.h>
#import <assistivetouchd/HNDViewDelegateControl.h>
#import <assistivetouchd/HNDWindowDelegateProtocol.h>

@class AXDispatchTimer, HNDWindow, HNDRocker, UIView, HNDView, HNDFingerView, HNDPinchChainView, NSMutableArray, NSString;

@interface HNDDisplayManager : NSObject <HNDViewDelegateControl, HNDWindowDelegateProtocol> {

	AXDispatchTimer* _idleTimer;
	AXDispatchTimer* _longIdleTimer;
	HNDWindow* _window;
	HNDWindow* _ignoredWindow;
	HNDRocker* _rocker;
	UIView* _contentView;
	UIView* _fingerContentView;
	UIView* _scannerContentView;
	UIView* _scannerBackCursorView;
	UIView* _scannerFrontCursorView;
	HNDView* _rockerDismiss;
	HNDView* _multiTouchBackgound;
	CGPoint _currentPoint;
	CGPoint _menuPoint;
	CGPoint _previousMenuPoint;
	double _menuOpenTime;
	CGPoint _menuOpenDistance;
	CGPoint _pointBeforePinch;
	BOOL _menuDownWillFireAutomaticUp;
	CGRect _screenBounds;
	HNDFingerView* _pinchFinger1;
	HNDFingerView* _pinchFinger2;
	HNDPinchChainView* _pinchChain;
	int _orientation;
	NSMutableArray* _fingers;
	BOOL _showingHoverOverMenu;
	BOOL _isPressedDown;
	BOOL _openedMenuOnDown;
	BOOL _inPinchMode;
	double _nubbitTouchToUpTimeLatency;
	double _nubbitTouchDownTime;
	SCRCMathAverageValue _nubbitDistanceTracking;
	SCRCMathAverageValue _nubbitAngleTracking;
	double _nubbitVelocity;
	BOOL _nubbitMoving;
	CGPoint _downPoint;
	CGPoint _movePoint;
	CGPoint _nubbitStartDownPoint;
	HNDView* _downView;
	unsigned _lastHandType;
	double _nubbitPositionPercentage;
	int _nubbitPositionEdge;
	CGPoint _preKeyboardMovePosition;
	BOOL _visualsHidden;
	AXDispatchTimer* _positionSetTimer;
	BOOL _keyboardVisible;
	CGRect _keyboardFrame;
	NSString* _reachabilityHandlerIdentifier;
	double _reachabilityOffset;

}

@property (assign,nonatomic) BOOL showingHoverOverMenu;                           //@synthesize showingHoverOverMenu=_showingHoverOverMenu - In the implementation block
@property (nonatomic,readonly) UIView * scannerContentView; 
@property (nonatomic,readonly) UIView * scannerBackCursorView; 
@property (nonatomic,readonly) UIView * scannerFrontCursorView; 
@property (nonatomic,copy) NSString * reachabilityHandlerIdentifier;              //@synthesize reachabilityHandlerIdentifier=_reachabilityHandlerIdentifier - In the implementation block
@property (assign,nonatomic) double reachabilityOffset;                           //@synthesize reachabilityOffset=_reachabilityOffset - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(double)fadeDuration;
+(void)initialize;
+(id)sharedManager;
-(void)restartWithCompletion:(/*^block*/id)arg1 ;
-(void)hideVisuals:(BOOL)arg1 animate:(BOOL)arg2 ;
-(void)deviceCountChanged:(long long)arg1 ;
-(CGPoint)hoverMoved:(CGPoint)arg1 ;
-(BOOL)acceptsHitTest:(CGPoint)arg1 ;
-(void)initializeDisplayWithScanner:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_updateNubbitPosition;
-(void)_startHandlingReachabilityIfNeeded;
-(void)_updateViewsForOrientation;
-(void)updateMenuStyle;
-(void)_endHandlingReachabilityIfNeeded;
-(CGPoint)convertPointToOrientation:(CGPoint)arg1 ;
-(BOOL)multiTouchToolBackgroundEnabled;
-(CGRect)rotatedScreenBounds;
-(CGPoint)_nubbitPointForEdgePosition;
-(int)_angleForDegrees:(double)arg1 ;
-(CGPoint)closestNubbitPositionForPoint:(CGPoint)arg1 offsetByMidpoint:(BOOL)arg2 ;
-(void)_moveNubbitToPosition:(CGPoint)arg1 forKeyboard:(BOOL)arg2 ;
-(CGPoint)_validateNubbitPosition:(CGPoint)arg1 forKeyboard:(BOOL)arg2 ;
-(CGPoint)nubbitPositionForFlick:(CGPoint)arg1 ;
-(void)_moveNubbitToPosition:(CGPoint)arg1 ;
-(CGPoint)_nubbitPositionForKeyboardFrame:(CGRect)arg1 ;
-(BOOL)_nubbitIsOverKeyboard:(CGRect)arg1 ;
-(void)_moveNubbitAboveKeyboard:(CGRect)arg1 ;
-(BOOL)inPinchMode;
-(id)viewAtPoint:(CGPoint)arg1 downPoint:(CGPoint*)arg2 window:(id)arg3 ;
-(void)_repositionNubbitAfterLift:(CGPoint)arg1 ;
-(void)resetNubbitLocation;
-(void)_handleNubbitMove:(CGPoint)arg1 ;
-(CGPoint)convertPointFromOrientation:(CGPoint)arg1 ;
-(id)addFinger:(CGPoint)arg1 active:(BOOL)arg2 ;
-(void)showMultiFingersWithPoints:(id)arg1 alpha:(double)arg2 ;
-(void)removeMultiFingers:(BOOL)arg1 ;
-(id)addFinger:(CGPoint)arg1 ;
-(BOOL)_shouldEnableMultiTouchToolBackground;
-(void)setMultiTouchToolBackgroundEnabled:(BOOL)arg1 ;
-(void)showPrimaryFinger:(BOOL)arg1 active:(BOOL)arg2 location:(CGPoint)arg3 ;
-(void)showPinchFingers:(BOOL)arg1 withPoint:(CGPoint)arg2 ;
-(void)showMenu:(BOOL)arg1 ;
-(void)_longIdleTimerFired;
-(void)activateDisplayItems;
-(CGPoint)normalizedPointDifference:(CGPoint)arg1 ;
-(void)modifyRealPinch:(CGPoint)arg1 finger:(id)arg2 ;
-(void)_updatePinchChainFrame;
-(double)_rotationDegreesForOrientation:(int)arg1 ;
-(void)adjustMultiFingersToScreenCenter;
-(BOOL)_position:(CGPoint)arg1 isOverKeyboard:(CGRect)arg2 ;
-(void)_updateCurrentPoint:(CGPoint)arg1 ;
-(void)_hoverMultiFingers:(CGPoint)arg1 ;
-(void)cancelImplodeAnimation;
-(void)performPress:(int)arg1 type:(int)arg2 ;
-(void)_multiFingers:(BOOL)arg1 animated:(BOOL)arg2 ;
-(BOOL)initialMenuDownHasFinished;
-(BOOL)initialDownMenuCanTransitionToPressDown;
-(void)_handlePinchPress:(BOOL)arg1 ;
-(CGPoint)_menuPointForFingerLayout;
-(void)removeMultiFingers:(BOOL)arg1 animateToPoint:(CGPoint)arg2 ;
-(void)showPinchFingers:(BOOL)arg1 withPoint:(CGPoint)arg2 animateToVisible:(BOOL)arg3 alpha:(double)arg4 ;
-(void)resetPinchChain:(CGPoint)arg1 ;
-(CGPoint)_onScreenMidpointForPinchChainMidpoint:(CGPoint)arg1 ;
-(void)getFirstFingerPosition:(CGPoint*)arg1 secondFingerPosition:(CGPoint*)arg2 forPinchAroundFulcrum:(CGPoint)arg3 ;
-(void)_deviceCountChanged:(id)arg1 ;
-(void)updateRingerSwitch;
-(void)volumeChanged;
-(void)viewPressed:(id)arg1 ;
-(void)_hoverFingerRecorder:(CGPoint)arg1 ;
-(void)keyboardVisible:(BOOL)arg1 withFrame:(CGRect)arg2 ;
-(id)viewAtPoint:(CGPoint)arg1 ;
-(BOOL)handleRealEvent:(id)arg1 ;
-(id)fingerViews;
-(id)multiFingers;
-(BOOL)canMoveFinger:(long long)arg1 toPoint:(CGPoint)arg2 ;
-(void)moveFinger:(long long)arg1 toPoint:(CGPoint)arg2 ;
-(void)showMultiFingersWithPoints:(id)arg1 ;
-(id)currentMultiFingerPositions;
-(CGPoint)modifyFakePinch:(CGPoint)arg1 ;
-(void)modifyPinch:(BOOL)arg1 angle:(double)arg2 movement:(CGPoint)arg3 ;
-(unsigned long long)isFingerInCorner;
-(void)setOrientation:(int)arg1 withCompletion:(/*^block*/id)arg2 ;
-(CGPoint)rotatedScreenPoint;
-(CGPoint)screenPoint;
-(void)fingerFinishedImplosion:(id)arg1 ;
-(void)showCircleMenu:(BOOL)arg1 ;
-(void)setFingersVisible:(BOOL)arg1 animated:(BOOL)arg2 ;
-(CGPoint)absoluteCentroidForMultifingers:(CGPoint)arg1 ;
-(CGPoint)standardCentroidForMultifingers:(CGPoint)arg1 ;
-(CGPoint)centroidForPinchChainMidPoint:(CGPoint)arg1 ;
-(void)showPrimaryFinger:(BOOL)arg1 location:(CGPoint)arg2 ;
-(BOOL)visualsHidden;
-(void)updatePinchChain;
-(void)hidePinchFingers;
-(void)handlePinchToolBeginMove;
-(void)handlePinchToolEndMove;
-(BOOL)inNubbitMode;
-(UIView *)scannerContentView;
-(UIView *)scannerFrontCursorView;
-(UIView *)scannerBackCursorView;
-(BOOL)showingHoverOverMenu;
-(void)setShowingHoverOverMenu:(BOOL)arg1 ;
-(void)dealloc;
-(id)init;
-(int)orientation;
-(BOOL)isMenuVisible;
-(CGPoint)point;
-(void)_idleTimerFired;
-(CGRect)screenBounds;
-(void)cleanup;
-(void)_displayLinkFired:(id)arg1 ;
-(void)setReachabilityHandlerIdentifier:(NSString *)arg1 ;
-(void)setReachabilityOffset:(double)arg1 ;
-(NSString *)reachabilityHandlerIdentifier;
-(double)reachabilityOffset;
-(long long)fingerCount;
-(void)_startIdleTimer;
@end

