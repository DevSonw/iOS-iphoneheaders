/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:27:50 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/Frameworks/CloudKit.framework/CloudKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/NSOperation.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class CKContainer, CKPlaceholderOperation, NSString, NSError, NSObject, NSArray, CKOperationInfo;

@interface CKOperation : NSOperation {

	BOOL _allowsCellularAccess;
	BOOL _isExecuting;
	BOOL _isFinished;
	BOOL _isDiscretionary;
	CKContainer* _container;
	CKPlaceholderOperation* _placeholderOperation;
	NSString* _operationID;
	NSError* _error;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	NSString* _sectionID;
	NSString* _parentSectionID;
	id _context;
	NSArray* _requestUUIDs;
	NSString* _sourceApplicationBundleIdentifier;
	NSString* _sourceApplicationSecondaryIdentifier;
	NSString* _deviceIdentifier;
	NSObject*<OS_dispatch_source> _timeoutSource;
	long long _usesBackgroundSessionOverride;

}

@property (nonatomic,retain) CKContainer * container;                                      //@synthesize container=_container - In the implementation block
@property (assign,nonatomic) BOOL usesBackgroundSession; 
@property (assign,nonatomic) BOOL allowsCellularAccess;                                    //@synthesize allowsCellularAccess=_allowsCellularAccess - In the implementation block
@property (nonatomic,retain) CKPlaceholderOperation * placeholderOperation;                //@synthesize placeholderOperation=_placeholderOperation - In the implementation block
@property (nonatomic,retain) NSString * operationID;                                       //@synthesize operationID=_operationID - In the implementation block
@property (assign,nonatomic) BOOL isExecuting;                                             //@synthesize isExecuting=_isExecuting - In the implementation block
@property (assign,nonatomic) BOOL isFinished;                                              //@synthesize isFinished=_isFinished - In the implementation block
@property (nonatomic,retain) NSError * error;                                              //@synthesize error=_error - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> callbackQueue;                   //@synthesize callbackQueue=_callbackQueue - In the implementation block
@property (nonatomic,retain) NSString * sectionID;                                         //@synthesize sectionID=_sectionID - In the implementation block
@property (nonatomic,readonly) NSString * parentSectionID;                                 //@synthesize parentSectionID=_parentSectionID - In the implementation block
@property (nonatomic,readonly) id context;                                                 //@synthesize context=_context - In the implementation block
@property (assign,nonatomic) BOOL isDiscretionary;                                         //@synthesize isDiscretionary=_isDiscretionary - In the implementation block
@property (nonatomic,retain) NSArray * requestUUIDs;                                       //@synthesize requestUUIDs=_requestUUIDs - In the implementation block
@property (nonatomic,readonly) CKOperationInfo * operationInfo; 
@property (nonatomic,retain) NSString * sourceApplicationBundleIdentifier;                 //@synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier - In the implementation block
@property (nonatomic,retain) NSString * sourceApplicationSecondaryIdentifier;              //@synthesize sourceApplicationSecondaryIdentifier=_sourceApplicationSecondaryIdentifier - In the implementation block
@property (nonatomic,retain) NSString * deviceIdentifier;                                  //@synthesize deviceIdentifier=_deviceIdentifier - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> timeoutSource;                  //@synthesize timeoutSource=_timeoutSource - In the implementation block
@property (assign,nonatomic) long long usesBackgroundSessionOverride;                      //@synthesize usesBackgroundSessionOverride=_usesBackgroundSessionOverride - In the implementation block
-(void)fillOutOperationInfo:(id)arg1 ;
-(CKOperationInfo *)operationInfo;
-(BOOL)CKOperationShouldRun:(id*)arg1 ;
-(void)performCKOperation;
-(void)_handleProgressCallback:(id)arg1 ;
-(Class)operationInfoClass;
-(void)_handleCompletionCallback:(id)arg1 ;
-(void)setSectionID:(NSString *)arg1 ;
-(void)setPlaceholderOperation:(CKPlaceholderOperation *)arg1 ;
-(CKPlaceholderOperation *)placeholderOperation;
-(NSObject*<OS_dispatch_source>)timeoutSource;
-(void)setTimeoutSource:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)_uninstallTimeoutSource;
-(void)_installTimeoutSource;
-(void)processOperationResult:(id)arg1 ;
-(void)cancel;
-(void)dealloc;
-(id)init;
-(id)description;
-(id)context;
-(void)setContainer:(CKContainer *)arg1 ;
-(CKContainer *)container;
-(void)start;
-(void)main;
-(BOOL)isFinished;
-(BOOL)isExecuting;
-(void)setUsesBackgroundSession:(BOOL)arg1 ;
-(BOOL)allowsCellularAccess;
-(void)setAllowsCellularAccess:(BOOL)arg1 ;
-(NSObject*<OS_dispatch_queue>)callbackQueue;
-(BOOL)isDiscretionary;
-(void)setIsDiscretionary:(BOOL)arg1 ;
-(BOOL)usesBackgroundSession;
-(void)setSourceApplicationBundleIdentifier:(NSString *)arg1 ;
-(void)setSourceApplicationSecondaryIdentifier:(NSString *)arg1 ;
-(NSString *)sourceApplicationSecondaryIdentifier;
-(BOOL)isConcurrent;
-(id)daemon;
-(void)setCallbackQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSString *)operationID;
-(NSString *)sourceApplicationBundleIdentifier;
-(NSString *)sectionID;
-(void)finishWithError:(id)arg1 ;
-(void)setOperationID:(NSString *)arg1 ;
-(id)CKPropertiesDescription;
-(void)_finishOnCallbackQueueWithError:(id)arg1 ;
-(NSString *)parentSectionID;
-(long long)usesBackgroundSessionOverride;
-(NSString *)deviceIdentifier;
-(NSArray *)requestUUIDs;
-(void)setUsesBackgroundSessionOverride:(long long)arg1 ;
-(void)setDeviceIdentifier:(NSString *)arg1 ;
-(void)_finishInternalOnCallbackQueueWithError:(id)arg1 ;
-(void)setIsFinished:(BOOL)arg1 ;
-(void)setRequestUUIDs:(NSArray *)arg1 ;
-(void)setIsExecuting:(BOOL)arg1 ;
-(NSError *)error;
-(void)setError:(NSError *)arg1 ;
@end

