/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:28:30 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/Frameworks/MapKit.framework/MapKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

typedef struct {
	double field1;
	double field2;
} SCD_Struct_MK0;

typedef struct {
	double latitude;
	double longitude;
} SCD_Struct_MK1;

typedef struct {
	SCD_Struct_MK1 center;
	SCD_Struct_MK1 span;
} SCD_Struct_MK2;

typedef struct {
	double field1;
	double field2;
	double field3;
} SCD_Struct_MK3;

typedef struct UIEdgeInsets {
	double top;
	double left;
	double bottom;
	double right;
} UIEdgeInsets;

typedef struct {
	double field1;
	SCD_Struct_MK1 field2;
} SCD_Struct_MK5;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct __SCPreferences* SCPreferencesRef;

typedef struct __WiFiManagerClient* WiFiManagerClientRef;

typedef struct __WiFiDeviceClient* WiFiDeviceClientRef;

typedef struct CGImage* CGImageRef;

typedef struct CGPath* CGPathRef;

typedef struct CGContext* CGContextRef;

typedef struct {
	unsigned field1;
	unsigned field2;
	unsigned field3;
} SCD_Struct_MK13;

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct _NSZone* NSZoneRef;

typedef struct {
	unsigned long long field1;
	unsigned long long field2;
} SCD_Struct_MK16;

typedef struct CGColor* CGColorRef;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct CGAffineTransform {
	double a;
	double b;
	double c;
	double d;
	double tx;
	double ty;
} CGAffineTransform;

typedef struct {
	long long field1;
	SCD_Struct_MK1 field2;
	CGPoint field3;
	CGPoint field4;
	id field5;
	BOOL field6;
} SCD_Struct_MK20;

typedef struct {
	long long field1;
	long long field2;
	long long field3;
	double field4;
} SCD_Struct_MK21;

typedef struct {
	long long x;
	long long y;
	long long z;
	double contentScaleFactor;
} SCD_Struct_MK22;

typedef struct GEOTileKey {
	unsigned z : 6;
	unsigned x : 26;
	unsigned y : 26;
	unsigned type : 6;
	unsigned pixelSize : 8;
	unsigned textScale : 8;
	unsigned provider : 8;
	unsigned expires : 1;
	unsigned reserved1 : 7;
	unsigned char reserved2[4];
} GEOTileKey;

typedef struct __IOHIDEventSystemClient* IOHIDEventSystemClientRef;

typedef struct _compressed_pair<double **, std::__1::allocator<double *> > {
	double __first_;
} compressed_pair<double **, std::__1::allocator<double *> >;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<double> > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<double> >;

typedef struct _split_buffer<double *, std::__1::allocator<double *> > {
	double __first_;
	double __begin_;
	double __end_;
	compressed_pair<double **, std::__1::allocator<double *> > __end_cap_;
} split_buffer<double *, std::__1::allocator<double *> >;

typedef struct deque<double, std::__1::allocator<double> > {
	split_buffer<double *, std::__1::allocator<double *> > __map_;
	unsigned long long __start_;
	compressed_pair<unsigned long, std::__1::allocator<double> > __size_;
} deque<double, std::__1::allocator<double> >;

typedef struct __IOHIDEvent* IOHIDEventRef;

typedef struct {
	unsigned field1 : 1;
	unsigned field2 : 1;
	unsigned field3 : 1;
} SCD_Struct_MK30;

typedef struct {
	int field1;
	int field2;
	int field3;
	SCD_Struct_MK3 field4;
	0 field5;
} SCD_Struct_MK31;

typedef struct {
	CGSize field1;
	double field2;
	double field3;
	double field4;
	CGSize field5;
	double field6;
	double field7;
	double field8;
	long long field9;
	double field10;
	double field11;
	double field12;
	double field13;
	double field14;
	double field15;
	double field16;
	double field17;
	double field18;
	double field19;
	double field20;
	double field21;
	double field22;
	double field23;
	double field24;
	double field25;
	BOOL field26;
	double field27;
	double field28;
	double field29;
	BOOL field30;
	BOOL field31;
} SCD_Struct_MK32;

