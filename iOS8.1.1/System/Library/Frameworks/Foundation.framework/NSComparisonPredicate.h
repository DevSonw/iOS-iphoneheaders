/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:28:18 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/Frameworks/Foundation.framework/Foundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Foundation/Foundation-Structs.h>
#import <Foundation/NSPredicate.h>

@class NSPredicateOperator, NSExpression;

@interface NSComparisonPredicate : NSPredicate {

	void* _reserved2;
	NSPredicateOperator* _predicateOperator;
	NSExpression* _lhs;
	NSExpression* _rhs;

}

@property (readonly) unsigned long long predicateOperatorType; 
@property (readonly) unsigned long long comparisonPredicateModifier; 
@property (retain,readonly) NSExpression * leftExpression; 
@property (retain,readonly) NSExpression * rightExpression; 
@property (readonly) SEL customSelector; 
@property (readonly) unsigned long long options; 
+(id)predicateWithLeftExpression:(id)arg1 rightExpression:(id)arg2 customSelector:(SEL)arg3 ;
+(id)predicateWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightValue:(id)arg3 ;
+(id)predicateWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightKeyPath:(id)arg3 ;
+(id)predicateWithPredicateOperator:(id)arg1 leftExpression:(id)arg2 rightExpression:(id)arg3 ;
+(BOOL)supportsSecureCoding;
+(id)predicateWithLeftExpression:(id)arg1 rightExpression:(id)arg2 modifier:(unsigned long long)arg3 type:(unsigned long long)arg4 options:(unsigned long long)arg5 ;
-(id)hk_filterRepresentationForDataTypes:(id)arg1 filterClasses:(id)arg2 ;
-(id)_parseComparisonPredicateWithKeyPath:(id)arg1 predicateOperatorType:(unsigned long long)arg2 value:(id)arg3 dataTypes:(id)arg4 filterClasses:(id)arg5 ;
-(id)br_watchedURL;
-(id)CKDPQueryFiltersWithTranslator:(id)arg1 error:(id*)arg2 ;
-(id)_nearFilterWithKey:(id)arg1 location:(id)arg2 radius:(double)arg3 translator:(id)arg4 ;
-(unsigned long long)_comparisonOptionForString:(id)arg1 ;
-(id)_parseFullTextSearchFiltersWithTranslator:(id)arg1 withError:(id*)arg2 ;
-(id)_parseNearFiltersWithTranslator:(id)arg1 withError:(id*)arg2 ;
-(id)_parseListContainsFiltersWithTranslator:(id)arg1 withError:(id*)arg2 ;
-(id)_parseInFiltersWithTranslator:(id)arg1 withError:(id*)arg2 ;
-(id)_parseListContainsAnyFiltersWithTranslator:(id)arg1 withError:(id*)arg2 ;
-(id)_parseListContainsAllFiltersWithTranslator:(id)arg1 withError:(id*)arg2 ;
-(id)_parseBeginsWithFiltersWithTranslator:(id)arg1 withError:(id*)arg2 ;
-(id)_parseBetweenFiltersWithTranslator:(id)arg1 withError:(id*)arg2 ;
-(id)_parseBasicOperatorFiltersWithTranslator:(id)arg1 withError:(id*)arg2 ;
-(BOOL)validateFullTextSearchPredicate;
-(BOOL)validateNearPredicate;
-(BOOL)validateContainsPredicate;
-(BOOL)validateInPredicate;
-(BOOL)validateContainsAnyPredicate;
-(BOOL)validateContainsAllInPredicate;
-(BOOL)validateBeginsWithPredicate;
-(BOOL)validateBetweenPredicate;
-(BOOL)validateBasicOperatorPredicate;
-(void)validate;
-(unsigned long long)_comparisonOptionForString:(id)arg1 ;
-(id)minimalFormInContext:(id)arg1 ;
-(BOOL)_isForeignObjectExpression:(id)arg1 givenContext:(id)arg2 ;
-(id)generateMetadataDescription;
-(void)allowEvaluation;
-(id)predicateOperator;
-(id)initWithPredicateOperator:(id)arg1 leftExpression:(id)arg2 rightExpression:(id)arg3 ;
-(void)acceptVisitor:(id)arg1 flags:(unsigned long long)arg2 ;
-(void)setPredicateOperator:(id)arg1 ;
-(id)initWithLeftExpression:(id)arg1 rightExpression:(id)arg2 modifier:(unsigned long long)arg3 type:(unsigned long long)arg4 options:(unsigned long long)arg5 ;
-(id)predicateWithSubstitutionVariables:(id)arg1 ;
-(id)predicateFormat;
-(id)initWithLeftExpression:(id)arg1 rightExpression:(id)arg2 customSelector:(SEL)arg3 ;
-(id)initWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightValue:(id)arg3 ;
-(id)initWithPredicateOperator:(id)arg1 leftKeyPath:(id)arg2 rightKeyPath:(id)arg3 ;
-(id)keyPathExpressionForString:(id)arg1 ;
-(void)_acceptOperator:(id)arg1 flags:(unsigned long long)arg2 ;
-(void)_acceptExpressions:(id)arg1 flags:(unsigned long long)arg2 ;
-(SEL)customSelector;
-(BOOL)evaluateWithObject:(id)arg1 substitutionVariables:(id)arg2 ;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)copyWithZone:(NSZone*)arg1 ;
-(unsigned long long)options;
-(NSExpression *)leftExpression;
-(NSExpression *)rightExpression;
-(unsigned long long)comparisonPredicateModifier;
-(unsigned long long)predicateOperatorType;
@end

