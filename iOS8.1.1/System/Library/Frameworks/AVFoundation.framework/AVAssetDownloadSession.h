/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:27:36 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <AVFoundation/AVFoundation-Structs.h>
@class AVAssetDownloadSessionInternal, NSError, NSURL;

@interface AVAssetDownloadSession : NSObject {

	AVAssetDownloadSessionInternal* _internal;

}

@property (nonatomic,readonly) long long status; 
@property (nonatomic,readonly) NSError * error; 
@property (nonatomic,readonly) NSURL * URL; 
@property (nonatomic,readonly) NSURL * destinationURL; 
@property (nonatomic,readonly) long long priority; 
@property (nonatomic,readonly) unsigned long long fileSize; 
@property (nonatomic,readonly) unsigned long long availableFileSize; 
@property (nonatomic,readonly) unsigned long long downloadToken; 
+(id)assetDownloadSessionWithDownloadToken:(unsigned long long)arg1 ;
+(id)assetDownloadSessionWithURL:(id)arg1 destinationURL:(id)arg2 options:(id)arg3 ;
-(OpaqueFigAssetRef)_figAsset;
-(OpaqueFigPlaybackItemRef)_playbackItem;
-(id)_weakReference;
-(id)_errorForFigNotificationPayload:(CFDictionaryRef)arg1 key:(CFStringRef)arg2 ;
-(BOOL)_setFigAsset:(OpaqueFigAssetRef)arg1 ;
-(void)_removeFigAssetListeners;
-(void)_removeFigPlaybackItemListeners;
-(int)_primeCache;
-(int)_readyForInspection;
-(void)_transitionToTerminalStatus:(long long)arg1 error:(id)arg2 ;
-(void)_addFigAssetListeners;
-(void)_addFigPlaybackItemListeners;
-(id)_figAssetNotificationNames;
-(id)_figPlaybackItemNotificationNames;
-(void)_primeCacheOnDispatchQueue;
-(id)initWithURL:(id)arg1 destinationURL:(id)arg2 options:(id)arg3 ;
-(id)initWithDownloadToken:(unsigned long long)arg1 ;
-(unsigned long long)availableFileSize;
-(NSURL *)destinationURL;
-(void)dealloc;
-(id)init;
-(NSURL *)URL;
-(void)start;
-(long long)priority;
-(void)stop;
-(void)pause;
-(long long)status;
-(unsigned long long)downloadToken;
-(unsigned long long)fileSize;
-(NSError *)error;
-(void)finalize;
@end

