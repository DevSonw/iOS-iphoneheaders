/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:27:32 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue, AVPlayerItemDelegate;
#import <AVFoundation/AVFoundation-Structs.h>
@class NSObject, AVWeakReference, NSArray, NSMutableArray, NSMutableDictionary, AVPlayerItem, AVPlayerConnection, AVPropertyStorage, NSError, NSURL, AVAsset, NSDate, AVAudioMix, AVVideoComposition, AVCustomVideoCompositorSession, NSDictionary, NSString;

@interface AVPlayerItemInternal : NSObject {

	NSObject*<OS_dispatch_queue> ivarAccessQueue;
	AVWeakReference* weakReference;
	NSObject*<OS_dispatch_queue> figConfigurationQueue;
	OpaqueVTPixelBufferAttributesMediatorRef pixelBufferAttributeMediator;
	OpaqueCMTimebaseRef proxyTimebase;
	BOOL isCurrentPlayerItem;
	NSArray* cachedTracks;
	NSMutableArray* syncLayers;
	NSArray* itemOutputs;
	NSMutableArray* itemVideoOutputs;
	NSMutableDictionary* itemLegibleOutputsForKeys;
	NSMutableDictionary* itemMetadataOutputsForKeys;
	BOOL suppressesVideoLayers;
	OpaqueCMTimebaseRef figTimebase;
	OpaqueFigPlaybackItemRef figPlaybackItem;
	AVPlayerItem* previousItem;
	AVPlayerItem* nextItem;
	OpaqueFigCPEProtectorRef figCPEProtector;
	id<AVPlayerItemDelegate> delegate;
	AVWeakReference* playerReference;
	AVPlayerConnection* playerConnection;
	NSObject*<OS_dispatch_queue> stateDispatchQueue;
	AVPropertyStorage* propertyStorage;
	long long status;
	NSError* error;
	NSURL* URL;
	AVAsset* asset;
	NSArray* automaticallyLoadedAssetKeys;
	AVAsset* assetWithFigPlaybackItem;
	NSArray* trackIDsForAssetWithFigPlaybackItem;
	NSArray* timedMetadata;
	SCD_Struct_CM4 initialTime;
	SCD_Struct_CM4 initialToleranceBefore;
	SCD_Struct_CM4 initialToleranceAfter;
	SCD_Struct_CM4 forwardPlaybackEndTime;
	SCD_Struct_CM4 reversePlaybackEndTime;
	NSDate* initialDate;
	NSDate* initialEstimatedDate;
	BOOL initialLimitReadAhead;
	BOOL allowsExtendedReadAhead;
	SCD_Struct_CM4 maximumTrailingBufferDuration;
	long long initialPlaybackLikelyToKeepUpTrigger;
	BOOL initialAlwaysMonitorsPlayability;
	BOOL initialWillNeverSeekBackwardsHint;
	BOOL initialContinuesPlayingDuringPrerollForSeek;
	BOOL initialContinuesPlayingDuringPrerollForRateChange;
	BOOL usesIFrameOnlyPlaybackForHighRateScaledEdits;
	BOOL usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet;
	SCD_Struct_CM4 minimumIntervalForIFrameOnlyPlayback;
	BOOL minimumIntervalForIFrameOnlyPlaybackWasSet;
	float speedThresholdForIFrameOnlyPlayback;
	BOOL speedThresholdForIFrameOnlyPlaybackWasSet;
	CFStringRef initialFigTimePitchAlgorithm;
	BOOL savesDownloadedDataToDiskWhenDone;
	BOOL nonForcedSubtitlesEnabled;
	BOOL networkUsuallyExceedsMaxBitRate;
	BOOL allowProgressiveSwitchUp;
	double preferredPeakBitRate;
	AVAudioMix* audioMix;
	AVVideoComposition* videoComposition;
	AVWeakReference* clientsOriginalVideoComposition;
	void* figVideoCompositor;
	AVCustomVideoCompositorSession* customVideoCompositorSession;
	BOOL seekingWaitsForVideoCompositionRendering;
	NSArray* textStyleRules;
	NSDictionary* gaplessInfo;
	long long initialVariantIndex;
	NSDictionary* audibleDRMInfo;
	NSDictionary* rampInOutInfo;
	float soundCheckVolumeNormalization;
	float volumeAdjustment;
	NSMutableArray* handlersToCallWhenReadyForEnqueueing;
	NSMutableDictionary* mediaOptionsSelectedByClient;
	BOOL haveInitialSamples;
	BOOL haveCPEProtector;
	BOOL didSetAssetToAssetWithFigPlaybackItem;
	BOOL didBecomeReadyForBasicInspection;
	BOOL didBecomeReadyForInspectionOfMediaSelectionOptions;
	BOOL didBecomeReadyForInspectionOfTracks;
	BOOL didBecomeReadyForInspectionOfPresentationSize;
	BOOL didBecomeReadyForInspectionOfDuration;
	BOOL didInformObserversAboutAvailabilityOfTracks;
	BOOL didFireKVOForAssetForNonStreamingItem;
	BOOL wasInitializedWithURL;
	BOOL needTimedMetadataNotification;
	BOOL externalSubtitlesEnabled;
	BOOL externalProtectionRequested;
	BOOL requiresAccessLog;
	int eqPreset;
	OpaqueFigSimpleMutexRef seekIDMutex;
	unsigned nextSeekIDToGenerate;
	int pendingSeekID;
	/*^block*/id seekCompletionHandler;
	NSString* dataYouTubeID;
	unsigned RTCReportingFlags;
	NSString* serviceIdentifier;
	NSString* mediaKind;
	unsigned long long restrictions;

}
@end

