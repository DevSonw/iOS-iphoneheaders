/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:28:33 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayer/MediaPlayer-Structs.h>
#import <MediaPlayer/MPAVQueuePlayerFeederSource.h>

@protocol MPAVPlaylistFeeder;
@class NSString, MPAVItem, MPAVQueuePlayerFeeder, MPQueuePlayer;

@interface MPAVPlaylistManager : NSObject <MPAVQueuePlayerFeederSource> {

	NSString* _audioSessionModeOverride;
	MPAVItem* _currentItem;
	MPAVQueuePlayerFeeder* _feeder;
	BOOL _goToTargetIndex;
	long long _isChangingPlaylistFeeder;
	long long _lastSelectionDirection;
	MPQueuePlayer* _player;
	id<MPAVPlaylistFeeder> _playlistFeeder;
	int _repeatMode;
	long long _targetIndex;
	BOOL _updatedAudioSessionMode;

}

@property (nonatomic,readonly) BOOL canChangePlaylistFeeder; 
@property (nonatomic,readonly) BOOL isChangingPlaylistFeeder; 
@property (nonatomic,retain) id<MPAVPlaylistFeeder> playlistFeeder;              //@synthesize playlistFeeder=_playlistFeeder - In the implementation block
@property (readonly) MPQueuePlayer * player;                                     //@synthesize player=_player - In the implementation block
@property (readonly) MPAVItem * currentItem;                                     //@synthesize currentItem=_currentItem - In the implementation block
@property (readonly) long long currentIndex; 
@property (readonly) long long lastSelectionDirection;                           //@synthesize lastSelectionDirection=_lastSelectionDirection - In the implementation block
@property (assign) int repeatMode; 
@property (assign,nonatomic) BOOL managesSystemDownloads; 
@property (assign,nonatomic) BOOL forceSynchronousQueueFilling; 
@property (assign,nonatomic) unsigned long long minQueueDepth; 
@property (assign,nonatomic) unsigned long long maxQueueDepth; 
@property (nonatomic,retain) NSString * audioSessionModeOverride;                //@synthesize audioSessionModeOverride=_audioSessionModeOverride - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(int)repeatMode;
-(void)setRepeatMode:(int)arg1 ;
-(NSString *)audioSessionModeOverride;
-(void)setAudioSessionModeOverride:(NSString *)arg1 ;
-(void)setForceSynchronousQueueFilling:(BOOL)arg1 ;
-(id)_feeder;
-(void)contentsDidChangeByRemovingRange:(NSRange)arg1 ;
-(void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned long long)arg1 ;
-(void)contentInvalidated;
-(BOOL)setPlaylistFeeder:(id)arg1 startIndex:(long long)arg2 ;
-(void)setCurrentIndex:(long long)arg1 selectionDirection:(long long)arg2 ;
-(long long)lastSelectionDirection;
-(id<MPAVPlaylistFeeder>)playlistFeeder;
-(void)setPlaylistFeeder:(id<MPAVPlaylistFeeder>)arg1 ;
-(void)setManagesSystemDownloads:(BOOL)arg1 ;
-(BOOL)isChangingPlaylistFeeder;
-(void)setMaxQueueDepth:(unsigned long long)arg1 ;
-(BOOL)forceSynchronousQueueFilling;
-(BOOL)managesSystemDownloads;
-(void)_downloadCancelledNotification:(id)arg1 ;
-(void)_assetCancelNotification:(id)arg1 ;
-(void)_mediaLibraryDisplayValuesDidChangeNotification:(id)arg1 ;
-(void)_reloadQueuedItemsIfPathBecameAvailable;
-(unsigned long long)maxQueueDepth;
-(unsigned long long)minQueueDepth;
-(void)setMinQueueDepth:(unsigned long long)arg1 ;
-(void)_updateAudioSessionMode;
-(long long)_prepareToQueuePlaybackIndex:(long long)arg1 selectionDirection:(long long)arg2 ;
-(BOOL)canChangePlaylistFeeder;
-(void)contentInvalidatedWithNewIndex:(unsigned long long)arg1 ;
-(id)_feederItemForIndex:(long long)arg1 ;
-(long long)_nextItemIndex:(long long)arg1 repeatMode:(int)arg2 ;
-(id)_itemToFollowItemIndex:(long long)arg1 skipUnavailableContent:(BOOL)arg2 ;
-(id)_audioSessionModeForMediaItem:(id)arg1 ;
-(id)queuePlayerFeeder:(id)arg1 itemToFollowItem:(id)arg2 ;
-(void)queuePlayerFeeder:(id)arg1 willRemoveItem:(id)arg2 ;
-(BOOL)queuePlayerFeeder:(id)arg1 willInsertItem:(id)arg2 ;
-(void)queuePlayerFeederDidUpdateQueue:(id)arg1 queuedItems:(id)arg2 dequeuedItems:(id)arg3 ;
-(void)queuePlayerFeederFailedToQueueAnyItems:(id)arg1 ;
-(void)updateForSoundCheckDefaultsChange;
-(void)dealloc;
-(id)init;
-(long long)currentIndex;
-(MPAVItem *)currentItem;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(MPQueuePlayer *)player;
@end

