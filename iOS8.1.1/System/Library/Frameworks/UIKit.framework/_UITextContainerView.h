/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:29:30 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/NSUITextViewCommonMethods.h>

@class NSTextContainer, NSDictionary, NSTextStorage, NSLayoutManager, NSString;

@interface _UITextContainerView : UIView <NSUITextViewCommonMethods> {

	UIEdgeInsets _textContainerInset;
	CGPoint _textContainerOrigin;
	CGSize _minSize;
	CGSize _maxSize;
	NSTextContainer* _textContainer;
	NSDictionary* _linkTextAttributes;
	struct {
		unsigned textContainerOriginInvalid : 1;
		unsigned verticalLayout : 2;
		unsigned horizontallyResizable : 1;
		unsigned verticallyResizable : 1;
	}  _tcvFlags;

}

@property (assign,nonatomic) NSTextContainer * textContainer;                                        //@synthesize textContainer=_textContainer - In the implementation block
@property (nonatomic,readonly) NSTextStorage * textStorage; 
@property (nonatomic,readonly) NSLayoutManager * layoutManager; 
@property (assign,nonatomic) UIEdgeInsets textContainerInset; 
@property (assign,getter=isHorizontallyResizable,nonatomic) BOOL horizontallyResizable; 
@property (assign,getter=isVerticallyResizable,nonatomic) BOOL verticallyResizable; 
@property (assign,nonatomic) CGSize minSize;                                                         //@synthesize minSize=_minSize - In the implementation block
@property (assign,nonatomic) CGSize maxSize;                                                         //@synthesize maxSize=_maxSize - In the implementation block
@property (nonatomic,copy) NSDictionary * linkTextAttributes;                                        //@synthesize linkTextAttributes=_linkTextAttributes - In the implementation block
@property (assign,nonatomic) BOOL usesTiledViews; 
@property (assign,nonatomic) long long layoutOrientation; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) NSRange markedRange; 
+(Class)layerClass;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(void)drawRect:(CGRect)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)setBounds:(CGRect)arg1 ;
-(NSString *)description;
-(id)delegate;
-(CGSize)maxSize;
-(void)tintColorDidChange;
-(void)sizeToFit;
-(void)_didScroll;
-(NSLayoutManager *)layoutManager;
-(NSTextStorage *)textStorage;
-(CGPoint)textContainerOrigin;
-(NSRange)markedRange;
-(CGRect)visibleRect;
-(UIEdgeInsets)textContainerInset;
-(void)setConstrainedFrameSize:(CGSize)arg1 ;
-(void)invalidateTextContainerOrigin;
-(CGSize)minSize;
-(BOOL)isHorizontallyResizable;
-(void)setNeedsDisplayInRect:(CGRect)arg1 avoidAdditionalLayout:(BOOL)arg2 ;
-(NSTextContainer *)textContainer;
-(void)setTextContainer:(NSTextContainer *)arg1 ;
-(long long)layoutOrientation;
-(void)setLayoutOrientation:(long long)arg1 ;
-(NSDictionary *)linkTextAttributes;
-(void)updateInsertionPointStateAndRestartTimer:(BOOL)arg1 ;
-(void)setMaxSize:(CGSize)arg1 ;
-(id)initWithFrame:(CGRect)arg1 textContainer:(id)arg2 ;
-(void)setVerticallyResizable:(BOOL)arg1 ;
-(void)setUsesTiledViews:(BOOL)arg1 ;
-(void)setMinSize:(CGSize)arg1 ;
-(BOOL)usesTiledViews;
-(void)setHorizontallyResizable:(BOOL)arg1 ;
-(void)setTextContainerInset:(UIEdgeInsets)arg1 ;
-(void)setLinkTextAttributes:(NSDictionary *)arg1 ;
-(void)_ensureMinAndMaxSizesConsistentWithBounds;
-(BOOL)_ensureLayoutCompleteForRect:(CGRect)arg1 withExtension:(BOOL)arg2 ;
-(NSRange)_extendedGlyphRangeForRange:(NSRange)arg1 maxGlyphIndex:(unsigned long long)arg2 drawingToScreen:(BOOL)arg3 ;
-(BOOL)_ensureLayoutCompleteForRect:(CGRect)arg1 withExtensionFactor:(double)arg2 minimumExtensionDistance:(double)arg3 repetitions:(unsigned long long)arg4 ;
-(BOOL)isVerticallyResizable;
-(void)_ensureLayoutCompleteToEndOfCharacterRange:(NSRange)arg1 ;
@end

