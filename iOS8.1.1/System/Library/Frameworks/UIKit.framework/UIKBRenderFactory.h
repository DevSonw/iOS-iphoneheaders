/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:29:32 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <UIKit/UIKit-Structs.h>
@class UIKBRenderConfig, NSMutableArray, NSArray;

@interface UIKBRenderFactory : NSObject {

	UIKBRenderConfig* _renderConfig;
	NSMutableArray* _segmentTraits;
	double _rivenSizeFactor;
	BOOL _lightweightFactory;
	double _scale;
	BOOL _boldTextEnabled;

}

@property (assign,nonatomic) double scale;                                   //@synthesize scale=_scale - In the implementation block
@property (nonatomic,readonly) UIKBRenderConfig * renderConfig;              //@synthesize renderConfig=_renderConfig - In the implementation block
@property (nonatomic,readonly) NSArray * segmentTraits;                      //@synthesize segmentTraits=_segmentTraits - In the implementation block
@property (assign,nonatomic) double rivenSizeFactor;                         //@synthesize rivenSizeFactor=_rivenSizeFactor - In the implementation block
@property (assign,nonatomic) BOOL lightweightFactory;                        //@synthesize lightweightFactory=_lightweightFactory - In the implementation block
@property (nonatomic,readonly) BOOL boldTextEnabled;                         //@synthesize boldTextEnabled=_boldTextEnabled - In the implementation block
+(long long)_graphicsQuality;
+(BOOL)_enabled;
+(id)lightweightFactoryForVisualStyle:(SCD_Struct_UI32)arg1 renderConfig:(id)arg2 ;
+(id)cacheKeyForString:(id)arg1 withRenderFlags:(long long)arg2 renderConfig:(id)arg3 ;
+(id)factoryForVisualStyle:(SCD_Struct_UI32)arg1 renderConfig:(id)arg2 ;
+(id)segmentedControlColor:(BOOL)arg1 ;
+(Class)factoryClassForVisualStyle:(SCD_Struct_UI32)arg1 ;
-(double)passcodeEdgeWeight;
-(id)passcodeKeyEdgeColorName;
-(id)passcodeActiveControlKeyTraits;
-(void)modifyKeyTraitsForPasscode:(id)arg1 forKey:(id)arg2 onKeyplane:(id)arg3 ;
-(id)passcodeBackgroundTraitsForKeyplane:(id)arg1 ;
-(id)passcodeControlKeyTraits;
-(id)passcodeShiftedControlKeyTraits;
-(id)extraPasscodePaddleTraits;
-(void)dealloc;
-(double)scale;
-(void)setScale:(double)arg1 ;
-(UIKBRenderConfig *)renderConfig;
-(id)backgroundTraitsForKeyplane:(id)arg1 ;
-(id)defaultKeyBackgroundColorName;
-(id)controlKeyBackgroundColorName;
-(id)traitsHashStringForKey:(id)arg1 withGeometry:(id)arg2 controlOpacities:(BOOL)arg3 ;
-(id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2 ;
-(id)lightKeycapsFontName;
-(void)_customizeTraits:(id)arg1 forPopupForKey:(id)arg2 withRenderConfig:(id)arg3 keycapsFontName:(id)arg4 ;
-(double)translucentGapWidth;
-(id)lightTextFontName;
-(id)lightPadKeycapsFontName;
-(void)modifyTraitsForDetachedInputSwitcher:(id)arg1 withKey:(id)arg2 ;
-(id)thinKeycapsFontName;
-(double)keyCornerRadius;
-(double)RivenFactor:(double)arg1 ;
-(id)displayContentsForKey:(id)arg1 ;
-(id)traitsForKey:(id)arg1 onKeyplane:(id)arg2 ;
-(id)_controlKeyBackgroundColorName;
-(long long)enabledBlendForm;
-(void)removeAllLayoutSegments;
-(BOOL)useBlueThemingForKey:(id)arg1 ;
-(void)addLayoutSegment:(id)arg1 ;
-(long long)lightHighQualityEnabledBlendForm;
-(id)controlKeyForegroundColorName;
-(id)multitapCompleteKeyImageName;
-(id)muttitapReverseKeyImageName;
-(void)setupLayoutSegments;
-(void)scaleTraits:(id)arg1 ;
-(id)shiftKeyImageName;
-(id)shiftOnKeyImageName;
-(id)shiftLockImageName;
-(id)initWithRenderConfig:(id)arg1 skipLayoutSegments:(BOOL)arg2 ;
-(void)setLightweightFactory:(BOOL)arg1 ;
-(void)lowQualityTraits:(id)arg1 ;
-(NSArray *)segmentTraits;
-(BOOL)lightweightFactory;
-(id)hashStringElement;
-(id)deleteKeyImageName;
-(double)skinnyKeyThreshold;
-(id)keyImageNameWithSkinnyVariation:(id)arg1 ;
-(id)globalEmojiKeyImageName;
-(id)globalKeyImageName;
-(id)dismissKeyImageName;
-(id)handwritingMoreKeyImageName;
-(id)dictationKeyImageName;
-(id)leftArrowKeyImageName;
-(id)rightArrowKeyImageName;
-(id)cutKeyImageName;
-(id)copyKeyImageName;
-(id)pasteKeyImageName;
-(id)undoKeyImageName;
-(id)boldKeyImageName;
-(BOOL)shouldClearBaseDisplayStringForVariants;
-(id)defaultKeyShadowColorName;
-(id)controlKeyShadowColorName;
-(id)thinTextFontName;
-(double)rivenSizeFactor;
-(void)setRivenSizeFactor:(double)arg1 ;
-(BOOL)boldTextEnabled;
@end

