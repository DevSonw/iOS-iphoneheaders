/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:36:10 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/SyncBundles/MusicLibrary.syncBundle/MusicLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MusicLibrary/MusicLibrary-Structs.h>
#import <MusicLibrary/SSDownloadManagerObserver.h>
#import <MusicLibrary/ATClient.h>
#import <MusicLibrary/ATSyncClient.h>
#import <MusicLibrary/ATAssetClient.h>

@protocol ATSyncClientDelegate, OS_dispatch_queue, OS_dispatch_source;
@class ML3MusicLibrary, NSMutableDictionary, NSArray, NSDate, NSMutableArray, NSNotificationCenter, NSObject, SSDownloadManager, NSString;

@interface MLSyncClient : NSObject <SSDownloadManagerObserver, ATClient, ATSyncClient, ATAssetClient> {

	ML3MusicLibrary* _library;
	NSMutableDictionary* _pendingUploads;
	NSArray* _autoCreatedSmartPlaylistsPIDs;
	long long _syncStartRevision;
	long long _cloudAssetBaseLocationID;
	BOOL _hasCloudGeniusData;
	unsigned _grappaID;
	BOOL _hadUnsucessfulAssetTransfer;
	unsigned long long _currentAssetNumber;
	NSDate* _lastAssetNumberPostDate;
	NSMutableArray* _streams;
	NSNotificationCenter* _notificationCenter;
	id<ATSyncClientDelegate> _syncClientDelegate;
	NSObject*<OS_dispatch_queue> _queue;
	NSMutableDictionary* _requestsByIdentifier;
	NSObject*<OS_dispatch_source> _requestTimer;
	SSDownloadManager* _downloadManager;
	id _nanoSyncSettings;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(BOOL)_processUploadTrackOperations;
-(id)_geniusAssetsToSync;
-(void)_processCompletedTrackAsset:(id)arg1 ;
-(void)_processGeniusConfigPlist:(id)arg1 ;
-(void)_handleSyncPrefsChangedNotification:(id)arg1 ;
-(void)_pauseObservingChangeNotifications;
-(id)_trackAssetsToSync;
-(void)_postCurrentAssetNumber:(unsigned long long)arg1 ;
-(id)_tracksToSyncPredicate;
-(CGSize)_maxArtworkSizeForMediaType:(unsigned)arg1 ;
-(void)_postAssetTotal:(unsigned long long)arg1 ;
-(id)_artworkAssetsToSync;
-(void)_processCompletedGeniusAsset:(id)arg1 ;
-(id)_getPlaylistSyncSettingsParams;
-(BOOL)_verifySyncPlistFiles;
-(void)_processCompletedArtworkAsset:(id)arg1 ;
-(void)_exportTrackChangesForSyncType:(unsigned)arg1 endpointType:(int)arg2 afterRevision:(unsigned long long)arg3 upToRevision:(unsigned long long)arg4 withSyncParams:(id)arg5 intoOutputStream:(id)arg6 withProgressHandler:(/*^block*/id)arg7 withCompletionHandler:(/*^block*/id)arg8 ;
-(BOOL)_evaluateUploadTrackDatabaseChangeStep:(id)arg1 ;
-(void)_resumeObservingChangeNotifications;
-(id)_syncPlistFiles;
-(void)getDataForTrackAsset:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)getDataForArtworkAsset:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)getDataForGeniusAsset:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_applyPlaylistSyncSettingsParams:(id)arg1 ;
-(id)_existingOutstandingAssetTransfersWithDownloadManager:(id)arg1 ;
-(id)_artworkSizeVariantForMediaType:(unsigned)arg1 ;
-(void)_deleteTrackForFailedAsset:(id)arg1 withError:(id)arg2 action:(id)arg3 ;
-(void)_handleContentsChangedNotification:(id)arg1 ;
-(void)_handleDisplayValuesChangedNotification:(id)arg1 ;
-(void)_adjustRequestQueue;
-(BOOL)_processArtworkIdentifier:(id)arg1 artworkToken:(id)arg2 artworkType:(long long)arg3 mediaType:(unsigned)arg4 sourceType:(long long)arg5 ;
-(void)_processGeniusPlist:(id)arg1 geniusIDString:(id)arg2 geniusChecksum:(long long)arg3 ;
-(void)downloadManager:(id)arg1 downloadStatesDidChange:(id)arg2 ;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)disabledAssetTypes;
-(void)assetSync:(id)arg1 didUpdateProgress:(float)arg2 ;
-(void)assetSync:(id)arg1 didCompleteWithError:(id)arg2 ;
-(void)assetsToSyncWithCompletion:(/*^block*/id)arg1 ;
-(id)outstandingAssetTransfersWithDownloadManager:(id)arg1 ;
-(void)assetTransfer:(id)arg1 succeeded:(BOOL)arg2 withError:(id)arg3 ;
-(void)assetInstallFailed:(id)arg1 withError:(id)arg2 ;
-(id)assetDataClass;
-(void)getDataForAsset:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)assetSyncDidComplete;
-(void)assetTransferEndedWithSuccess:(BOOL)arg1 ;
-(id)syncDataClass;
-(id)revisionVersionToken;
-(void)getChangesForSyncType:(unsigned)arg1 endpointType:(int)arg2 afterRevision:(unsigned long long)arg3 upToRevision:(unsigned long long)arg4 withSyncParams:(id)arg5 intoOutputStream:(id)arg6 withStartHandler:(/*^block*/id)arg7 withProgressHandler:(/*^block*/id)arg8 withCompletionHandler:(/*^block*/id)arg9 ;
-(void)applyChangesForSyncType:(unsigned)arg1 endpointType:(int)arg2 fromStream:(id)arg3 withSyncParams:(id)arg4 withProgressHandler:(/*^block*/id)arg5 withCompletionHandler:(/*^block*/id)arg6 ;
-(void)resetSyncDataWithCompletion:(/*^block*/id)arg1 ;
-(void)syncSessionCompletedWithError:(id)arg1 allAssetsTransferred:(BOOL)arg2 ;
-(void)cancelSyncOperations;
-(BOOL)prepareForSyncWithHostAnchor:(id)arg1 progressCallback:(/*^block*/id)arg2 grappaID:(unsigned)arg3 hostVersion:(id)arg4 error:(id*)arg5 ;
-(BOOL)reconcileSync:(unsigned)arg1 withNewAnchor:(id)arg2 progressCallback:(/*^block*/id)arg3 error:(id*)arg4 ;
-(void)metadataUpdate:(id)arg1 forAsset:(id)arg2 withNewAnchor:(id)arg3 ;
-(id)currentSyncAnchor;
-(BOOL)reconcileRestoreWithError:(id*)arg1 ;
-(void)pathsToBackup:(id*)arg1 pathsNotToBackup:(id*)arg2 ;
-(id)appleIDsForAssets;
-(void)clearSyncData;
-(id)installedAssetMetrics;
-(id)supportedDataclasses;
-(unsigned long long)currentRevision;
@end

