/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:32:08 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


#import <identityservicesd/identityservicesd-Structs.h>
@class IDSLinkManager, NSMutableDictionary;

@interface IDSUTunController : NSObject {

	SimpleNSStringToObjectTable* _deviceConnectionInfoTableByToken;
	IDSLinkManager* _linkManager;
	BOOL _logPackets;
	BOOL _vifShouldReadAutomatically;
	NSMutableDictionary* _serviceDataUsageStats;
	BOOL _encryptionEnabled;

}

@property (nonatomic,readonly) NSMutableDictionary * serviceDataUsageStats;              //@synthesize serviceDataUsageStats=_serviceDataUsageStats - In the implementation block
+(id)sharedInstance;
-(void)startUDPGlobalLinkForDevice:(id)arg1 ;
-(void)createConnectionDataForDevice:(id)arg1 localPartyID:(id)arg2 dataReadyHandler:(/*^block*/id)arg3 ;
-(void)startConnectionForDevice:(id)arg1 isInitiator:(BOOL)arg2 remotePartyID:(id)arg3 ;
-(void)processRemoteConnectionDataForDevice:(id)arg1 remoteConnectionData:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)openSocketWithOptions:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)stopUDPGlobalLinkForDevice:(id)arg1 ;
-(void)link:(id)arg1 didConnectForDevice:(id)arg2 ;
-(void)link:(id)arg1 hasSpaceAvailable:(BOOL)arg2 deviceID:(id)arg3 ;
-(BOOL)link:(id)arg1 fromDeviceID:(id)arg2 didReceivePacket:(SCD_Struct_ID7*)arg3 ;
-(void)obliterateConnectionInfo;
-(id)startInternetLink;
-(void)link:(id)arg1 didDisconnectForDevice:(id)arg2 ;
-(void)stopInternetLink;
-(NSMutableDictionary *)serviceDataUsageStats;
-(void)suspendSocketWithOptions:(id)arg1 ;
-(void)resumeSocketWithOptions:(id)arg1 ;
-(id)initWithDeviceToken:(id)arg1 ;
-(void)handleIPPayload:(const void*)arg1 bytesLength:(unsigned long long)arg2 source:(sockaddr*)arg3 destination:(sockaddr*)arg4 upperProtocol:(unsigned char)arg5 forDeviceConnectionInfo:(id)arg6 ;
-(void)resetAllConnectionsForDevice:(id)arg1 ;
-(void)startControlChannelWithDevice:(id)arg1 ;
-(void)receiveControlChannelMessage:(id)arg1 fromDevice:(id)arg2 ;
-(void)internalOpenSocketWithDestination:(id)arg1 localSA:(id)arg2 remoteSA:(id)arg3 protocol:(int)arg4 trafficClass:(int)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)resetTCPConnection:(id)arg1 forDeviceConnectionInfo:(id)arg2 ;
-(void)removeConnection:(id)arg1 fromDeviceConnectionInfo:(id)arg2 removeCode:(long long)arg3 removeReason:(id)arg4 ;
-(void)checkSuspendTrafficForDevice:(id)arg1 wait:(BOOL)arg2 ;
-(void)startCompressionForConnection:(id)arg1 deviceConnectionInfo:(id)arg2 ;
-(BOOL)processCompressionRequest:(id)arg1 fromDeviceConnectionInfo:(id)arg2 ;
-(BOOL)processCompressionResponse:(id)arg1 fromDeviceConnectionInfo:(id)arg2 ;
-(id)setupNewDeviceConnectionInfoForDeviceToken:(id)arg1 deviceUniqueID:(id)arg2 pushToken:(id)arg3 ;
-(void)setupDataConnectionWithDeviceConnetionInfo:(id)arg1 options:(id)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)closeDataConnectionWithDeviceConnetionInfo:(id)arg1 options:(id)arg2 ;
-(void)doCheckSuspendTrafficForDevice:(id)arg1 ;
-(BOOL)handleIncomingPacket:(SCD_Struct_ID7*)arg1 fromDeviceToken:(id)arg2 ;
-(void)_accountPacket:(SCD_Struct_ID7*)arg1 forGenericConnection:(id)arg2 ;
-(id)initWithName:(id)arg1 address:(id)arg2 andTestTransport:(id)arg3 ;
-(void)startLocalSetup;
-(void)addPairedDevice:(id)arg1 ;
-(void)deletePairedDevice:(id)arg1 ;
-(void)closeSocketWithOptions:(id)arg1 ;
-(void)reloadSettings;
@end

