/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:30:16 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/AXHearingAidSupport.framework/AXHearingAidSupport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <AXHearingAidSupport/AXHADeviceProtocol.h>

@protocol AXHARemoteUpdateProtocol;
@class NSString, NSDate, NSArray, AXHearingAidMode, AXHATimer;

@interface AXRemoteHearingAidDevice : NSObject <AXHADeviceProtocol> {

	AXHATimer* _propertyWriteTimer;
	BOOL _keepInSync;
	BOOL _isBluetoothPaired;
	BOOL _isPaired;
	BOOL _isConnecting;
	BOOL _leftConnected;
	BOOL _rightConnected;
	int availableEars;
	double _rightMicrophoneVolume;
	double _leftMicrophoneVolume;
	double _rightStreamVolume;
	double _leftStreamVolume;
	id<AXHARemoteUpdateProtocol> _updateDelegate;
	NSString* _name;
	NSString* _manufacturer;
	NSString* _model;
	NSString* _leftFirmwareVersion;
	NSString* _rightFirmwareVersion;
	NSString* _leftHardwareVersion;
	NSString* _rightHardwareVersion;
	NSString* _rightUUID;
	NSString* _leftUUID;
	NSString* _leftPeripheralUUID;
	NSString* _rightPeripheralUUID;
	double _rightBatteryLevel;
	double _leftBatteryLevel;
	NSDate* _leftBatteryLowDate;
	NSDate* _rightBatteryLowDate;
	NSArray* _rightPrograms;
	NSArray* _leftPrograms;
	AXHearingAidMode* _leftSelectedProgram;
	AXHearingAidMode* _rightSelectedProgram;
	NSString* _deviceUUID;
	long long _loadedProperties;
	long long _pendingPropertyWrites;

}

@property (assign,nonatomic) id<AXHARemoteUpdateProtocol> updateDelegate;              //@synthesize updateDelegate=_updateDelegate - In the implementation block
@property (assign,nonatomic) BOOL isBluetoothPaired;                                   //@synthesize isBluetoothPaired=_isBluetoothPaired - In the implementation block
@property (assign,nonatomic) BOOL isPaired;                                            //@synthesize isPaired=_isPaired - In the implementation block
@property (assign,nonatomic) BOOL isConnecting;                                        //@synthesize isConnecting=_isConnecting - In the implementation block
@property (assign,nonatomic) BOOL leftConnected;                                       //@synthesize leftConnected=_leftConnected - In the implementation block
@property (assign,nonatomic) BOOL rightConnected;                                      //@synthesize rightConnected=_rightConnected - In the implementation block
@property (nonatomic,retain) NSString * name;                                          //@synthesize name=_name - In the implementation block
@property (nonatomic,retain) NSString * manufacturer;                                  //@synthesize manufacturer=_manufacturer - In the implementation block
@property (nonatomic,retain) NSString * model;                                         //@synthesize model=_model - In the implementation block
@property (nonatomic,retain) NSString * leftFirmwareVersion;                           //@synthesize leftFirmwareVersion=_leftFirmwareVersion - In the implementation block
@property (nonatomic,retain) NSString * rightFirmwareVersion;                          //@synthesize rightFirmwareVersion=_rightFirmwareVersion - In the implementation block
@property (nonatomic,retain) NSString * leftHardwareVersion;                           //@synthesize leftHardwareVersion=_leftHardwareVersion - In the implementation block
@property (nonatomic,retain) NSString * rightHardwareVersion;                          //@synthesize rightHardwareVersion=_rightHardwareVersion - In the implementation block
@property (nonatomic,retain) NSString * rightUUID;                                     //@synthesize rightUUID=_rightUUID - In the implementation block
@property (nonatomic,retain) NSString * leftUUID;                                      //@synthesize leftUUID=_leftUUID - In the implementation block
@property (nonatomic,retain) NSString * leftPeripheralUUID;                            //@synthesize leftPeripheralUUID=_leftPeripheralUUID - In the implementation block
@property (nonatomic,retain) NSString * rightPeripheralUUID;                           //@synthesize rightPeripheralUUID=_rightPeripheralUUID - In the implementation block
@property (assign,nonatomic) double rightBatteryLevel;                                 //@synthesize rightBatteryLevel=_rightBatteryLevel - In the implementation block
@property (assign,nonatomic) double leftBatteryLevel;                                  //@synthesize leftBatteryLevel=_leftBatteryLevel - In the implementation block
@property (nonatomic,retain) NSDate * leftBatteryLowDate;                              //@synthesize leftBatteryLowDate=_leftBatteryLowDate - In the implementation block
@property (nonatomic,retain) NSDate * rightBatteryLowDate;                             //@synthesize rightBatteryLowDate=_rightBatteryLowDate - In the implementation block
@property (nonatomic,copy) NSArray * rightPrograms;                                    //@synthesize rightPrograms=_rightPrograms - In the implementation block
@property (nonatomic,copy) NSArray * leftPrograms;                                     //@synthesize leftPrograms=_leftPrograms - In the implementation block
@property (nonatomic,retain) AXHearingAidMode * leftSelectedProgram;                   //@synthesize leftSelectedProgram=_leftSelectedProgram - In the implementation block
@property (nonatomic,retain) AXHearingAidMode * rightSelectedProgram;                  //@synthesize rightSelectedProgram=_rightSelectedProgram - In the implementation block
@property (nonatomic,retain) NSString * deviceUUID;                                    //@synthesize deviceUUID=_deviceUUID - In the implementation block
@property (assign,nonatomic) long long loadedProperties;                               //@synthesize loadedProperties=_loadedProperties - In the implementation block
@property (assign,nonatomic) long long pendingPropertyWrites;                          //@synthesize pendingPropertyWrites=_pendingPropertyWrites - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) BOOL keepInSync;                                          //@synthesize keepInSync=_keepInSync - In the implementation block
@property (assign,nonatomic) int availableEars; 
@property (assign,nonatomic) double rightMicrophoneVolume;                             //@synthesize rightMicrophoneVolume=_rightMicrophoneVolume - In the implementation block
@property (assign,nonatomic) double leftMicrophoneVolume;                              //@synthesize leftMicrophoneVolume=_leftMicrophoneVolume - In the implementation block
@property (assign,nonatomic) double rightStreamVolume;                                 //@synthesize rightStreamVolume=_rightStreamVolume - In the implementation block
@property (assign,nonatomic) double leftStreamVolume;                                  //@synthesize leftStreamVolume=_leftStreamVolume - In the implementation block
-(id<AXHARemoteUpdateProtocol>)updateDelegate;
-(void)setUpdateDelegate:(id<AXHARemoteUpdateProtocol>)arg1 ;
-(long long)loadedProperties;
-(BOOL)isConnecting;
-(void)dealloc;
-(id)init;
-(NSString *)description;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(NSString *)model;
-(void)connect;
-(void)setModel:(NSString *)arg1 ;
-(id)valueForProperty:(long long)arg1 ;
-(void)disconnect;
-(BOOL)leftAvailable;
-(BOOL)rightAvailable;
-(double)leftBatteryLevel;
-(double)rightBatteryLevel;
-(void)setLeftPrograms:(NSArray *)arg1 ;
-(void)setRightPrograms:(NSArray *)arg1 ;
-(void)setDeviceUUID:(NSString *)arg1 ;
-(void)setAvailableEars:(int)arg1 ;
-(void)setLeftPeripheralUUID:(NSString *)arg1 ;
-(void)setLeftUUID:(NSString *)arg1 ;
-(void)setRightUUID:(NSString *)arg1 ;
-(void)setRightPeripheralUUID:(NSString *)arg1 ;
-(NSString *)leftUUID;
-(NSString *)rightUUID;
-(void)setIsPaired:(BOOL)arg1 ;
-(void)setLeftFirmwareVersion:(NSString *)arg1 ;
-(void)setRightFirmwareVersion:(NSString *)arg1 ;
-(void)setLeftHardwareVersion:(NSString *)arg1 ;
-(void)setRightHardwareVersion:(NSString *)arg1 ;
-(NSString *)deviceUUID;
-(int)availableEars;
-(BOOL)leftConnected;
-(BOOL)rightConnected;
-(BOOL)didLoadProperty:(long long)arg1 ;
-(long long)pendingPropertyWrites;
-(void)setPendingPropertyWrites:(long long)arg1 ;
-(void)_delayWriteProperties;
-(void)writeVolumesForProperty:(long long)arg1 ;
-(NSArray *)leftPrograms;
-(NSArray *)rightPrograms;
-(id)programs;
-(void)setLeftSelectedProgram:(AXHearingAidMode *)arg1 ;
-(void)setRightSelectedProgram:(AXHearingAidMode *)arg1 ;
-(AXHearingAidMode *)leftSelectedProgram;
-(AXHearingAidMode *)rightSelectedProgram;
-(BOOL)didLoadRequiredProperties;
-(void)loadRequiredProperties;
-(void)setLeftBatteryLevel:(double)arg1 ;
-(void)setRightBatteryLevel:(double)arg1 ;
-(void)setLoadedProperties:(long long)arg1 ;
-(void)setLeftConnected:(BOOL)arg1 ;
-(void)setRightConnected:(BOOL)arg1 ;
-(void)setLeftBatteryLowDate:(NSDate *)arg1 ;
-(void)setRightBatteryLowDate:(NSDate *)arg1 ;
-(void)setIsBluetoothPaired:(BOOL)arg1 ;
-(double)leftMicrophoneVolume;
-(double)rightMicrophoneVolume;
-(double)leftStreamVolume;
-(double)rightStreamVolume;
-(NSString *)leftFirmwareVersion;
-(NSString *)rightFirmwareVersion;
-(NSString *)leftHardwareVersion;
-(NSString *)rightHardwareVersion;
-(NSDate *)leftBatteryLowDate;
-(NSDate *)rightBatteryLowDate;
-(BOOL)isBluetoothPaired;
-(id)initWithPersistentRepresentation:(id)arg1 ;
-(BOOL)hasConnection;
-(BOOL)containsPeripheralWithUUID:(id)arg1 ;
-(BOOL)didLoadBasicProperties;
-(void)selectProgram:(id)arg1 ;
-(id)selectedPrograms;
-(id)selectedProgramIndexes;
-(BOOL)keepInSync;
-(void)setKeepInSync:(BOOL)arg1 ;
-(NSString *)leftPeripheralUUID;
-(NSString *)rightPeripheralUUID;
-(void)setRightMicrophoneVolume:(double)arg1 ;
-(void)setLeftMicrophoneVolume:(double)arg1 ;
-(void)setRightStreamVolume:(double)arg1 ;
-(void)setLeftStreamVolume:(double)arg1 ;
-(id)initWithRemoteRepresentation:(id)arg1 andDeviceID:(id)arg2 ;
-(BOOL)isLeftConnected;
-(BOOL)isRightConnected;
-(void)setIsConnecting:(BOOL)arg1 ;
-(BOOL)isPaired;
-(NSString *)manufacturer;
-(void)setManufacturer:(NSString *)arg1 ;
-(BOOL)isConnected;
-(void)setValue:(id)arg1 forProperty:(long long)arg2 ;
@end

