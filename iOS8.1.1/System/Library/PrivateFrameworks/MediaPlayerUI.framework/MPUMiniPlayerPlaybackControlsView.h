/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:32:30 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/MediaPlayerUI.framework/MediaPlayerUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MediaPlayerUI/MediaPlayerUI-Structs.h>
#import <MediaPlayer/MPPlaybackControlsView.h>
#import <MediaPlayerUI/MPUMiniPlayerActionsViewControllerDelegate.h>
#import <UIKit/UIPopoverControllerDelegate.h>

@class SKUICircleProgressIndicator, UIButton, UIPopoverController, MPUMiniPlayerActionsViewController, UIView, MPUNowPlayingTitlesView, MPUMiniPlayerTransportControls, MPVolumeSlider, MPUProspectivePlaybackInformation, MPUSkipLimitView, NSString;

@interface MPUMiniPlayerPlaybackControlsView : MPPlaybackControlsView <MPUMiniPlayerActionsViewControllerDelegate, UIPopoverControllerDelegate> {

	SKUICircleProgressIndicator* _createActivityIndicatorView;
	UIButton* _createButton;
	UIPopoverController* _createPopoverController;
	MPUMiniPlayerActionsViewController* _createViewController;
	UIView* _hairlineView;
	BOOL _isDetailScrubbing;
	MPUNowPlayingTitlesView* _titlesView;
	MPUMiniPlayerTransportControls* _transportControls;
	MPVolumeSlider* _volumeSlider;
	BOOL _showingCreateLoadingIndicator;
	MPUProspectivePlaybackInformation* _prospectivePlaybackInformation;
	MPUSkipLimitView* _skipLimitView;

}

@property (assign,nonatomic,__weak) id<MPPlaybackControlsDelegate><MPTransportControlsTarget><MPUMiniPlayerActionsViewControllerDelegate> delegate; 
@property (nonatomic,retain) MPUProspectivePlaybackInformation * prospectivePlaybackInformation;                                                                 //@synthesize prospectivePlaybackInformation=_prospectivePlaybackInformation - In the implementation block
@property (assign,getter=isShowingCreateLoadingIndicator,nonatomic) BOOL showingCreateLoadingIndicator;                                                          //@synthesize showingCreateLoadingIndicator=_showingCreateLoadingIndicator - In the implementation block
@property (nonatomic,readonly) double titleMaxX; 
@property (nonatomic,readonly) MPUSkipLimitView * skipLimitView;                                                                                                 //@synthesize skipLimitView=_skipLimitView - In the implementation block
@property (nonatomic,readonly) UIView * _createButton; 
@property (getter=_isDetailScrubbing,nonatomic,readonly) BOOL _detailScrubbing; 
@property (nonatomic,readonly) double _titleBaselineY; 
@property (nonatomic,readonly) MPUMiniPlayerTransportControls * _transportControls; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(unsigned long long)defaultVisibleParts;
-(void)_playbackStateDidChangeNotification:(id)arg1 ;
-(void)detailSliderTrackingDidBegin:(id)arg1 ;
-(void)detailSliderTrackingDidEnd:(id)arg1 ;
-(void)detailSliderTrackingDidCancel:(id)arg1 ;
-(void)detailSlider:(id)arg1 didChangeScrubSpeed:(long long)arg2 ;
-(id)repeatButtonImage;
-(id)shuffleButtonImage;
-(BOOL)detailScrubbingHidesControls;
-(BOOL)shouldOverrideProgressTimeLabelStyle;
-(id)newProgressIndicator;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id<MPPlaybackControlsDelegate><MPTransportControlsTarget><MPUMiniPlayerActionsViewControllerDelegate>)arg1 ;
-(void)didMoveToWindow;
-(void)layoutSubviews;
-(void)tintColorDidChange;
-(void)setItem:(id)arg1 ;
-(void)popoverControllerDidDismissPopover:(id)arg1 ;
-(long long)buttonType;
-(UIView *)_createButton;
-(void)miniPlayerActionsViewController:(id)arg1 didSelectAction:(long long)arg2 ;
-(void)transportControlsDidLayoutSubviews:(id)arg1 ;
-(void)setProspectivePlaybackInformation:(id)arg1 animated:(BOOL)arg2 ;
-(MPUSkipLimitView *)skipLimitView;
-(void)setProspectivePlaybackInformation:(MPUProspectivePlaybackInformation *)arg1 ;
-(MPUProspectivePlaybackInformation *)prospectivePlaybackInformation;
-(void)_createButtonAction:(id)arg1 ;
-(void)_updateMarqueeStatusAllowingCurrentMarqueeToFinish:(BOOL)arg1 ;
-(void)_layoutSkipLimitView;
-(BOOL)_allowsScrubbingForItem:(id)arg1 ;
-(void)_itemIsExplicitDidChangeNotification:(id)arg1 ;
-(void)_itemTitlesDidChangeNotification:(id)arg1 ;
-(void)_updatePlaybackControlsAnimated:(BOOL)arg1 ;
-(void)_playerContentsChangedNotification:(id)arg1 ;
-(void)_updateForChangedShowingCreateLoadingIndicator;
-(id)_artistTextForItem:(id)arg1 ;
-(id)_titleTextForItem:(id)arg1 ;
-(id)_albumTextForItem:(id)arg1 ;
-(Class)_miniPlayerActionsViewControllerClass;
-(void)setShowingCreateLoadingIndicator:(BOOL)arg1 ;
-(void)_setupVisibleAndDisabledPartsForItem:(id)arg1 ;
-(BOOL)_wantsCreateButtonForItem:(id)arg1 ;
-(BOOL)isShowingCreateLoadingIndicator;
-(Class)_transportControlsClassForItem:(id)arg1 ;
-(BOOL)_updateTitlesInView:(id)arg1 forItem:(id)arg2 ;
-(double)titleMaxX;
-(BOOL)_isDetailScrubbing;
-(double)_titleBaselineY;
-(MPUMiniPlayerTransportControls *)_transportControls;
-(void)_updatePlaybackControls;
-(void)_updateTitles;
-(void)setPlayer:(id)arg1 ;
@end

