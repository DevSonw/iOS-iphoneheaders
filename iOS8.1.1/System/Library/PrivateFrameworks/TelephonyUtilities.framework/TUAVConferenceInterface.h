/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:34:14 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <TelephonyUtilities/AVConferenceDelegate.h>

@protocol TUAVConferenceInterfaceDelegate;
@class NSMutableArray, AVConference;

@interface TUAVConferenceInterface : NSObject <AVConferenceDelegate> {

	BOOL _hasActiveConference;
	id<TUAVConferenceInterfaceDelegate> _delegate;
	NSMutableArray* _activeConferenceConnections;
	AVConference* _conference;
	long long _callID;

}

@property (assign,nonatomic) id<TUAVConferenceInterfaceDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,getter=isMuted,nonatomic) BOOL muted; 
@property (nonatomic,retain) NSMutableArray * activeConferenceConnections;              //@synthesize activeConferenceConnections=_activeConferenceConnections - In the implementation block
@property (nonatomic,retain) AVConference * conference;                                 //@synthesize conference=_conference - In the implementation block
@property (assign,nonatomic) long long callID;                                          //@synthesize callID=_callID - In the implementation block
@property (assign,nonatomic) BOOL hasActiveConference;                                  //@synthesize hasActiveConference=_hasActiveConference - In the implementation block
+(id)sharedInstance;
-(void)setMuted:(BOOL)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id<TUAVConferenceInterfaceDelegate>)arg1 ;
-(id)init;
-(id<TUAVConferenceInterfaceDelegate>)delegate;
-(void)conference:(id)arg1 didStartSession:(BOOL)arg2 withUserInfo:(id)arg3 ;
-(void)conference:(id)arg1 didStopWithCallID:(long long)arg2 error:(id)arg3 ;
-(void)conference:(id)arg1 withCallID:(long long)arg2 remoteMediaStalled:(BOOL)arg3 ;
-(void)conference:(id)arg1 receivedFirstRemoteFrameForCallID:(long long)arg2 ;
-(void)conference:(id)arg1 remoteVideoAttributesChanged:(id)arg2 callID:(long long)arg3 ;
-(void)conference:(id)arg1 remoteAudioPaused:(BOOL)arg2 callID:(long long)arg3 ;
-(void)conference:(id)arg1 remoteVideoPaused:(BOOL)arg2 callID:(long long)arg3 ;
-(void)conference:(id)arg1 remoteScreenAttributesChanged:(id)arg2 callID:(long long)arg3 ;
-(void)conference:(id)arg1 updateInputFrequencyLevel:(id)arg2 ;
-(void)conference:(id)arg1 updateOutputFrequencyLevel:(id)arg2 ;
-(void)conference:(id)arg1 updateInputMeterLevel:(float)arg2 ;
-(void)conference:(id)arg1 updateOutputMeterLevel:(float)arg2 ;
-(void)conference:(id)arg1 inititiateRelayRequest:(long long)arg2 requestDict:(id)arg3 ;
-(void)conference:(id)arg1 sendRelayUpdate:(long long)arg2 updateDict:(id)arg3 ;
-(void)conference:(id)arg1 cancelRelayRequest:(long long)arg2 requestDict:(id)arg3 ;
-(void)conference:(id)arg1 videoQualityNotificationForCallID:(long long)arg2 isDegraded:(BOOL)arg3 isRemote:(BOOL)arg4 ;
-(void)conference:(id)arg1 withCallID:(long long)arg2 networkHint:(BOOL)arg3 ;
-(void)conference:(id)arg1 closeConnectionForCallID:(long long)arg2 ;
-(void)serverDiedForConference:(id)arg1 ;
-(long long)callID;
-(void)setCallID:(long long)arg1 ;
-(BOOL)hasActiveConference;
-(void)setHasActiveConference:(BOOL)arg1 ;
-(BOOL)isMuted;
-(void)setActiveConferenceConnections:(NSMutableArray *)arg1 ;
-(void)_cleanUpConference;
-(AVConference *)conference;
-(NSMutableArray *)activeConferenceConnections;
-(void)_startConferenceForConferenceConnection:(id)arg1 withSocket:(int)arg2 ;
-(id)_conferenceConnectionForCall:(id)arg1 ;
-(void)_cleanUpConferenceConnection:(id)arg1 error:(id)arg2 ;
-(void)_cleanUpAllConferenceConnectionsWithError:(id)arg1 ;
-(void)setConference:(AVConference *)arg1 ;
-(void)_startAudioSession;
-(void)_setUpDidStartTimeoutForConference:(id)arg1 conferenceConnection:(id)arg2 ;
-(void)_stopAudioSession;
-(BOOL)_shouldIgnoreAVConferenceError:(id)arg1 ;
-(void)startConferenceForCall:(id)arg1 withSocket:(int)arg2 didStartHandler:(/*^block*/id)arg3 didStopHandler:(/*^block*/id)arg4 ;
-(void)stopConferenceForCall:(id)arg1 ;
-(void)stopConferenceForAllCalls;
@end

