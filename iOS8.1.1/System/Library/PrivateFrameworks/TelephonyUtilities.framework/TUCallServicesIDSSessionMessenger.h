/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:34:15 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/callservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <callservicesd/TUCallServicesIDSMessenger.h>
#import <callservicesd/IDSServiceDelegatePrivate.h>
#import <callservicesd/IDSSessionDelegatePrivate.h>

@class IDSDevice, IDSSession, NSMutableArray, NSString;

@interface TUCallServicesIDSSessionMessenger : TUCallServicesIDSMessenger <IDSServiceDelegatePrivate, IDSSessionDelegatePrivate> {

	IDSDevice* _deviceWithActiveSession;
	IDSSession* _currentIDSSession;
	NSMutableArray* _messagesPendingSessionConnection;
	NSMutableArray* _blocksPendingSocketAvailability;

}

@property (assign,nonatomic,__weak) id<TUCallServicesIDSSessionMessengerDelegate> delegate; 
@property (nonatomic,retain) IDSDevice * deviceWithActiveSession;                                        //@synthesize deviceWithActiveSession=_deviceWithActiveSession - In the implementation block
@property (nonatomic,readonly) int availableSocket; 
@property (nonatomic,retain) IDSSession * currentIDSSession;                                             //@synthesize currentIDSSession=_currentIDSSession - In the implementation block
@property (nonatomic,retain) NSMutableArray * messagesPendingSessionConnection;                          //@synthesize messagesPendingSessionConnection=_messagesPendingSessionConnection - In the implementation block
@property (nonatomic,retain) NSMutableArray * blocksPendingSocketAvailability;                           //@synthesize blocksPendingSocketAvailability=_blocksPendingSocketAvailability - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)endCurrentSession;
-(IDSDevice *)deviceWithActiveSession;
-(void)sendMessage:(id)arg1 andStartSessionIfNecessaryToDevicesSupportingService:(int)arg2 withTimeout:(long long)arg3 ;
-(void)sendMessage:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)sendMessageAndCancelInvitiationIfNecessary:(id)arg1 ;
-(void)sendMessageAndStartSessionIfNecessary:(id)arg1 withDevice:(id)arg2 timeout:(long long)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)sendMessageAndDeclineInvitiationIfNecessary:(id)arg1 ;
-(void)sendMessageAndAcceptInvitiationIfNecessary:(id)arg1 ;
-(void)acceptCurrentSession;
-(int)availableSocket;
-(void)performBlockOnSocketAvailability:(/*^block*/id)arg1 ;
-(void)setMessagesPendingSessionConnection:(NSMutableArray *)arg1 ;
-(void)setBlocksPendingSocketAvailability:(NSMutableArray *)arg1 ;
-(NSMutableArray *)messagesPendingSessionConnection;
-(IDSSession *)currentIDSSession;
-(void)_sendMessagesPendingSessionAvailability:(BOOL)arg1 ;
-(NSMutableArray *)blocksPendingSocketAvailability;
-(void)_runBlocksPendingSocketAvailability:(BOOL)arg1 ;
-(id)_createSessionToDevices:(id)arg1 ;
-(void)setDeviceWithActiveSession:(IDSDevice *)arg1 ;
-(void)setCurrentIDSSession:(IDSSession *)arg1 ;
-(id)_createSessionToAllDevicesSupportingService:(int)arg1 ;
-(void)pendMessageOnSessionConnection:(id)arg1 ;
-(void)_destroyCurrentSession;
-(void)dealloc;
-(id)initWithService:(id)arg1 ;
-(void)service:(id)arg1 account:(id)arg2 inviteReceivedForSession:(id)arg3 fromID:(id)arg4 withContext:(id)arg5 ;
-(void)sessionStarted:(id)arg1 ;
-(void)sessionEnded:(id)arg1 withReason:(unsigned)arg2 error:(id)arg3 ;
-(void)session:(id)arg1 receivedInvitationAcceptFromID:(id)arg2 withData:(id)arg3 ;
-(void)session:(id)arg1 receivedInvitationAcceptFromID:(id)arg2 ;
-(void)session:(id)arg1 receivedInvitationDeclineFromID:(id)arg2 withData:(id)arg3 ;
-(void)session:(id)arg1 receivedInvitationDeclineFromID:(id)arg2 ;
-(void)session:(id)arg1 receivedInvitationCancelFromID:(id)arg2 withData:(id)arg3 ;
-(void)session:(id)arg1 receivedInvitationCancelFromID:(id)arg2 ;
-(void)session:(id)arg1 receivedSessionMessageFromID:(id)arg2 withData:(id)arg3 ;
-(void)session:(id)arg1 receivedSessionEndFromID:(id)arg2 withData:(id)arg3 ;
-(void)sessionEnded:(id)arg1 ;
@end

