/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:34:31 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKVectorTile.h>

@class NSData, VKTileKeyMap, NSMutableArray, NSArray;

@interface VKTrafficTile : VKVectorTile {

	unique_ptr<vk::TrafficLayer, std::__1::default_delete<vk::TrafficLayer> >* _trafficLayer;
	GEOTileKey _dataKey;
	NSData* _data;
	VKTileKeyMap* _dynamicTiles;
	unordered_map<vk::TrafficBatchKey, std::__1::vector<std::__1::unique_ptr<vk::TrafficRibbon, std::__1::default_delete<vk::TrafficRibbon> >, std::__1::allocator<std::__1::unique_ptr<vk::TrafficRibbon, std::__1::default_delete<vk::TrafficRibbon> > > >, std::__1::hash<vk::TrafficBatchKey>, std::__1::equal_to<vk::TrafficBatchKey>, std::__1::allocator<std::__1::pair<const vk::TrafficBatchKey, std::__1::vector<std::__1::unique_ptr<vk::TrafficRibbon, std::__1::default_delete<vk::TrafficRibbon> >, std::__1::allocator<std::__1::unique_ptr<vk::TrafficRibbon, std::__1::default_delete<vk::TrafficRibbon> > > > > > >* _trafficCollection;
	NSMutableArray* _incidents;
	TrafficSkeletonTile* _trafficData;

}

@property (assign,nonatomic) const GEOTileKey* dataKey; 
@property (nonatomic,readonly) NSArray * incidents;                      //@synthesize incidents=_incidents - In the implementation block
@property (nonatomic,readonly) VKTileKeyMap * dynamicTiles;              //@synthesize dynamicTiles=_dynamicTiles - In the implementation block
@property (nonatomic,readonly) TrafficLayer* trafficLayer; 
-(void)dealloc;
-(TrafficLayer*)trafficLayer;
-(BOOL)_buildStartOffset:(float*)arg1 endOffset:(float*)arg2 forLine:(SCD_Struct_VK290*)arg3 forSkeleton:(const Record*)arg4 forRange:(NSRange)arg5 forFlow:(const Flow*)arg6 forPoints:(Matrix<float, 2, 1>*)arg7 ;
-(void)buildIncidentsForDynamic:(id)arg1 withRoadData:(id)arg2 styleSession:(StyleResolutionSession*)arg3 ;
-(void)buildTrafficMeshWithRoadData:(id)arg1 dynamicTile:(id)arg2 trafficAccum:(TrafficAccum*)arg3 styleSession:(StyleResolutionSession*)arg4 ;
-(void)setDataKey:(const GEOTileKey*)arg1 ;
-(const GEOTileKey*)dataKey;
-(id)initWithKey:(const VKTileKey*)arg1 downloadKey:(const GEOTileKey*)arg2 data:(id)arg3 styleManager:(id)arg4 sharedResources:(id)arg5 contentScale:(double)arg6 device:(Device*)arg7 ;
-(void)buildSkeletonMap;
-(void)enumerateTrafficRoadPiecesForTile:(id)arg1 usingFunction:(const function<void (const vk::RoadPiece &)>*)arg2 ;
-(void)buildTrafficMeshWithRoadData:(id)arg1 withDevice:(Device*)arg2 ;
-(NSArray *)incidents;
-(VKTileKeyMap *)dynamicTiles;
@end

