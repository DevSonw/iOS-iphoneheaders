/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:35:38 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>
#import <iWorkImport/TSKTransformableObject.h>

@class TSUMutableRetainedPointerSet, NSMutableDictionary, TSURetainedPointerKeyDictionary, TSWPParagraphStyle, NSSet, NSString;

@interface TSSStylesheet : TSPObject <TSKTransformableObject> {

	TSSStylesheet* mParent;
	TSSStylesheet* mChild;
	TSUMutableRetainedPointerSet* mStyles;
	NSMutableDictionary* mIdentifierToStyleMap;
	TSURetainedPointerKeyDictionary* mParentToChildrenStyleMap;
	BOOL mIsLocked;
	BOOL mCanCullStyles;

}

@property (nonatomic,readonly) TSWPParagraphStyle * defaultPresenterNotesParagraphStyle; 
@property (nonatomic,readonly) TSSStylesheet * parent; 
@property (nonatomic,readonly) TSSStylesheet * child; 
@property (assign,nonatomic) BOOL isLocked; 
@property (assign,nonatomic) BOOL canCullStyles; 
@property (nonatomic,readonly) NSSet * styles; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)presenterNotesParagraphStyleIdentifier;
+(id)p_presenterNotesListStyleIdentifierForListLabelType:(int)arg1 ;
+(id)variationMapForVaryingCharacterStyle:(id)arg1 overParagraphStyle:(id)arg2 withPropertyMap:(id)arg3 ;
-(void)addDefaultPresenterNotesStylesIfAbsent;
-(TSWPParagraphStyle *)defaultPresenterNotesParagraphStyle;
-(void)upgradeDefaultPresenterNotesStyles;
-(void)p_upgradeDefaultPresenterNotesStylesResetExisting:(BOOL)arg1 ;
-(id)p_newDefaultPresenterNotesListStyleWithContext:(id)arg1 forListLabelType:(int)arg2 ;
-(id)p_defaultPresenterNotesListStylePropertyMapForListLabelType:(int)arg1 ;
-(id)p_defaultPresenterNotesParagraphStyleWithContext:(id)arg1 ;
-(id)p_defaultPresenterNotesParagraphStylePropertyMap;
-(id)_defaultCharacterStyleWasCreated:(BOOL*)arg1 ;
-(id)_hyperlinkStyleWasCreated:(BOOL*)arg1 ;
-(id)_defaultParagraphStyleWasCreated:(BOOL*)arg1 ;
-(id)_defaultListStyleWasCreated:(BOOL*)arg1 ;
-(id)_defaultColumnStyleWasCreated:(BOOL*)arg1 ;
-(id)_defaultStyleOfClass:(Class)arg1 withIdentifier:(id)arg2 wasCreated:(BOOL*)arg3 usingBlock:(/*^block*/id)arg4 ;
-(id)hyperlinkStyle;
-(id)defaultColumnStyle;
-(id)variationOfCharacterStyle:(id)arg1 paragraphStyle:(id)arg2 propertyMap:(id)arg3 ;
-(id)headerAndFooterStyle;
-(id)defaultParagraphStyle;
-(id)defaultCharacterStyle;
-(id)defaultListStyle;
-(id)packageLocator;
-(id)initFromUnarchiver:(id)arg1 ;
-(BOOL)shouldDelayArchiving;
-(unsigned)delayedArchivingPriority;
-(void)saveToArchiver:(id)arg1 ;
-(set<long long, std::__1::less<long long>, std::__1::allocator<long long> >*)p_allFilteredIdentifiersInArchive:(const StylesheetArchive*)arg1 unarchiver:(id)arg2 ;
-(void)saveStyles:(id)arg1 toArchiver:(id)arg2 ;
-(id)addDuplicateOfStyle:(id)arg1 withIdentifier:(id)arg2 ;
-(id)styleWithIdentifier:(id)arg1 ;
-(void)didLoadChildObjectFromDocumentSupport:(id)arg1 ;
-(id)rootAncestor;
-(void)removeStyle:(id)arg1 ;
-(id)variationOfStyleMatchingStyle:(id)arg1 withNewParentStyle:(id)arg2 ;
-(void)setIsLocked:(BOOL)arg1 ;
-(id)cascadedStyleWithIdentifier:(id)arg1 ;
-(id)stylesOfClass:(Class)arg1 ;
-(void)addStyle:(id)arg1 withIdentifier:(id)arg2 ;
-(id)unusedStyleIdentifierWithPackageString:(id)arg1 styleDescriptor:(id)arg2 contentTag:(id)arg3 ;
-(void)setIdentifier:(id)arg1 ofStyle:(id)arg2 ;
-(void)unlockStylesheetForDurationOfBlock:(/*^block*/id)arg1 ;
-(id)stylesPassingTest:(/*^block*/id)arg1 ;
-(id)variationOfStyle:(id)arg1 propertyMap:(id)arg2 ;
-(id)commandForTransformingByTransform:(CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(CGRect)arg4 ;
-(unsigned long long)descendantCount;
-(TSSStylesheet *)child;
-(id)childrenOfStyle:(id)arg1 ;
-(BOOL)isDescendentOf:(id)arg1 ;
-(BOOL)isAncestorOf:(id)arg1 ;
-(BOOL)isChildOf:(id)arg1 ;
-(BOOL)isParentOf:(id)arg1 ;
-(void)addStyle:(id)arg1 withParent:(id)arg2 identifier:(id)arg3 ;
-(id)initWithContext:(id)arg1 canCullStyles:(BOOL)arg2 ;
-(void)setParent:(id)arg1 withParentStyleMap:(CFDictionaryRef)arg2 ;
-(void)p_addStyle:(id)arg1 withParent:(id)arg2 identifier:(id)arg3 ;
-(void)p_removeStyle:(id)arg1 ;
-(BOOL)containsStyle:(id)arg1 ;
-(BOOL)cascadedContainsStyle:(id)arg1 ;
-(id)styleWithIdentifier:(id)arg1 componentMask:(int)arg2 ;
-(id)cascadedStyleWithIdentifier:(id)arg1 componentMask:(int)arg2 ;
-(void)p_setIdentifier:(id)arg1 ofStyle:(id)arg2 ;
-(void)p_setParent:(id)arg1 ofStyle:(id)arg2 ;
-(void)enumerateStylesUsingBlock:(/*^block*/id)arg1 ;
-(id)p_stylesPassingTest:(/*^block*/id)arg1 cascade:(BOOL)arg2 ;
-(id)cascadedStylesPassingTest:(/*^block*/id)arg1 ;
-(id)pVariationOfStyle:(id)arg1 propertyMap:(id)arg2 matchStyles:(id)arg3 context:(id)arg4 ;
-(void)p_addStyleToParentChildren:(id)arg1 ;
-(void)p_removeStyleFromParentChildren:(id)arg1 ;
-(BOOL)canCullStyles;
-(void)setCanCullStyles:(BOOL)arg1 ;
-(void)addStyle:(id)arg1 withParent:(id)arg2 ;
-(void)setParent:(id)arg1 ofStyle:(id)arg2 ;
-(id)stylesWithName:(id)arg1 ;
-(id)identifiedStyles;
-(id)identifiedStylesOfClass:(Class)arg1 ;
-(void)enumerateCascadedStylesUsingBlock:(/*^block*/id)arg1 ;
-(id)firstCascadedStylePassingTest:(/*^block*/id)arg1 ;
-(id)namedStylesOfClass:(Class)arg1 ;
-(id)firstRootlessStyleOfClass:(Class)arg1 withOverridePropertyMap:(id)arg2 ;
-(id)variationOfStyle:(id)arg1 propertyMap:(id)arg2 context:(id)arg3 ;
-(id)variationOfStyle:(id)arg1 propertyMap:(id)arg2 matchStyles:(id)arg3 context:(id)arg4 ;
-(id)variationOfStyle:(id)arg1 exactPropertyMap:(id)arg2 ;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(BOOL)isLocked;
-(id)initWithContext:(id)arg1 ;
-(void)addStyle:(id)arg1 ;
-(NSSet *)styles;
-(void)setParent:(TSSStylesheet *)arg1 ;
-(TSSStylesheet *)parent;
@end

