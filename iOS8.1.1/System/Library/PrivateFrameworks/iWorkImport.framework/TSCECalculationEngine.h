/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:35:21 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>

@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_semaphore;
@class TSKAccessController, TSKChangeNotifier, NSString, NSDate, NSObject, NSMutableArray, TSCENamedReferenceManager, TSKChangeGroup;

@interface TSCECalculationEngine : TSPObject {

	TSKAccessController* mAccessController;
	TSKChangeNotifier* mChangeNotifier;
	TSCEDependencyTracker* mDependencyTracker;
	int mXLImportDateMode;
	NSString* mPreviousLocaleIdentifier;
	NSDate* mCurrentDate;
	int mRecalculationThreadState;
	opaque_pthread_mutex_t mRecalculationThreadStateMutex;
	BOOL mShouldCancelRecalculationTask;
	unsigned mCalculationPauseCount;
	NSObject*<OS_dispatch_group> mRecalcLoopGroup;
	BOOL mBlockingUntilRecalcIsComplete;
	NSObject*<OS_dispatch_group> mRecalcDispatchGroup;
	int mRecalcDispatchGroupSize;
	NSObject*<OS_dispatch_queue> mRecalcHighPriorityQueue;
	NSObject*<OS_dispatch_queue> mReaclcLowPriorityQueue;
	NSObject*<OS_dispatch_semaphore> mModifiedOwnersSem;
	CFSetRef mModifiedOwnersInThisRecalcCycle;
	BOOL mShouldRefillRecalcQueue;
	CFDictionaryRef mReferenceResolvers;
	CFDictionaryRef mLegacyGlobalIDStringToOwnerIDDictionary;
	unsigned long long mBatchingGroupCellDirtyingLevel;
	BOOL mDirtyRandomVolatileFunctionsAtEndOfDirtyBatching;
	NSMutableArray* mCalculationStateObservers;
	unsigned long long mSuppressWillModifyCallsLevel;
	unsigned long long mNumberOfFormulas;
	TSCENamedReferenceManager* mNamedReferenceManager;
	TSKChangeGroup* mPendingChangesForAsyncNotification;
	NSObject*<OS_dispatch_queue> mWriteMutualExclusionQueue;
	BOOL mDirtyAllFormulasInDocumentDidLoad;
	CFUUIDRef _transposingTableID;

}

@property (assign) CFUUIDRef transposingTableID;              //@synthesize transposingTableID=_transposingTableID - In the implementation block
+(id)functionLocalizationDictionary;
+(id)localizedTrueString;
+(id)localizedFalseString;
+(id)localizedFunctionCategoryDictionary;
+(void)loadLocalizedStrings;
+(id)localizedNameForFunction:(id)arg1 ;
+(id)localizedNamesForFunctions:(id)arg1 ;
+(id)functionNameForLocalizedString:(id)arg1 ;
+(id)supportedFunctions;
+(id)localizedTypeStringForArgumentType:(int)arg1 ;
+(BOOL)localizedStringIsTrue:(id)arg1 ;
+(BOOL)localizedStringIsFalse:(id)arg1 ;
+(id)localizedFunctionNameForMenuTag:(int)arg1 ;
+(id)localizedToolTipForFunction:(id)arg1 ;
+(id)localizedCategoryForFunction:(id)arg1 ;
+(id)localizedNameForArgument:(short)arg1 ofFunction:(id)arg2 ;
+(id)localizedToolTipForArgument:(short)arg1 ofFunction:(id)arg2 ;
+(id)localizedModeNameForArgument:(short)arg1 modeIndex:(short)arg2 ofFunction:(id)arg3 ;
+(id)localizedModeToolTipForArgument:(short)arg1 modeIndex:(short)arg2 ofFunction:(id)arg3 ;
+(id)localizedTrueStrings;
+(id)localizedFalseStrings;
+(id)localizedCategoryArray;
+(id)allLocalizedFunctions;
+(void)setTableReferenceInterfaceObject:(TSCETableReferenceInterface*)arg1 ;
-(id)allOwnerIDs;
-(id)packageLocator;
-(id)initFromUnarchiver:(id)arg1 ;
-(BOOL)shouldDelayArchiving;
-(unsigned)delayedArchivingPriority;
-(void)saveToArchiver:(id)arg1 ;
-(BOOL)rangeIsWithinTable:(SCD_Struct_TS276*)arg1 ;
-(void)cellReferenceIsDirty:(const SCD_Struct_TS282*)arg1 ;
-(id)resolverForTableID:(CFUUIDRef)arg1 ;
-(BOOL)recalculationIsPaused;
-(void)startRecalcTaskIfNecessary;
-(id)namedReferenceManager;
-(void)updateCurrentDate;
-(void)initializeDispatchObjects;
-(void)pauseRecalculation;
-(void)p_addApplicationNotification;
-(void)p_removeApplicationNotification;
-(id)changeNotifier;
-(int)preferredDispatchQueueSize;
-(void)notifyObserversOfRecalcProgress;
-(void)p_enqueueTaskForCell:(SCD_Struct_TS282*)arg1 ;
-(void)p_recalcOneCellHoldingReadLock:(SCD_Struct_TS282*)arg1 formulaOwner:(id)arg2 hasExistingCalculatedPrecedents:(BOOL)arg3 isInACycle:(BOOL)arg4 ;
-(SCD_Struct_TS282*)p_refillRecalcQueue;
-(unsigned long long)dirtyCellCount;
-(BOOL)allCellsAreClean;
-(BOOL)recalcHoldingReadLock;
-(void)recalcHoldingWriteLock;
-(void)invalidateAfterRecalc;
-(void)beginSuppressingWillModifyCalls;
-(void)endSuppressingWillModifyCalls;
-(int)forwardRegisterOwnerWithOwnerID:(CFUUIDRef)arg1 legacyGlobalID:(id)arg2 ;
-(void)replaceFormula:(SCD_Struct_TS283)arg1 inOwner:(CFUUIDRef)arg2 precedentIterator:(/*function pointer*/void*)arg3 userData:(void*)arg4 hasRandomVolatileFunctions:(BOOL*)arg5 ;
-(void)replaceFormula:(SCD_Struct_TS283)arg1 inOwner:(CFUUIDRef)arg2 precedentIterator:(/*function pointer*/void*)arg3 userData:(void*)arg4 hasRandomVolatileFunctions:(BOOL*)arg5 clearCycle:(BOOL)arg6 ;
-(BOOL)isCellReferenceDirty:(SCD_Struct_TS282*)arg1 ;
-(void)resumeRecalculation;
-(void)p_blockUntilRecalcTaskExitedWithTimeout:(double)arg1 ;
-(void)p_blockUntilRecalcIsCompleteOnNewThreadWithTimeout:(id)arg1 ;
-(void)p_startRecalculationTask;
-(void)randomVolatileFunctionsAreDirty;
-(CFUUIDRef)transposingTableID;
-(id)p_stringForRangeReference:(SCD_Struct_TS276*)arg1 hostTableID:(CFUUIDRef)arg2 contextSheetName:(id)arg3 stickyBits:(unsigned char)arg4 isRangeWithFunction:(BOOL)arg5 quoteComponents:(BOOL)arg6 forceEscaping:(BOOL)arg7 ;
-(SCD_Struct_TS272)parseStringAsGeometricReferenceComponent:(id)arg1 inResolver:(id)arg2 outStickyBits:(char*)arg3 gettingReferencesMatchingInputAsPrefix:(id*)arg4 ;
-(SCD_Struct_TS276*)parseStringAsReferenceComponentIntersection:(id)arg1 inResolver:(id)arg2 inTableNamed:(id)arg3 preferredGeometricResolver:(id)arg4 defaultResolver:(id)arg5 outStickyBits:(char*)arg6 gettingReferencesMatchingInputAsPrefix:(id*)arg7 requireFullMatches:(BOOL)arg8 filterColons:(BOOL)arg9 outNamesUsed:(BOOL*)arg10 ;
-(SCD_Struct_TS276*)parseStringAsReference:(id)arg1 tableName:(id)arg2 rest:(id)arg3 contextResolver:(id)arg4 contextSheetName:(id)arg5 gettingReferencesMatchingInputAsPrefix:(id*)arg6 gettingStickyBits:(char*)arg7 filterColons:(BOOL)arg8 referenceIsComplete:(BOOL)arg9 outNamesUsed:(BOOL*)arg10 ;
-(void)ownerIsDirty:(CFUUIDRef)arg1 ;
-(void)setAccessController:(id)arg1 ;
-(id)accessController;
-(void)setChangeNotifier:(id)arg1 ;
-(void)documentDidLoad;
-(void)recalculateWithTimeout:(double)arg1 ;
-(int)xlImportDateMode;
-(void)setXLImportDateMode:(int)arg1 ;
-(id)previousLocaleIdentifier;
-(int)registerOwnerWithOwnerID:(CFUUIDRef)arg1 owner:(id)arg2 referenceResolver:(id)arg3 ;
-(void)unregisterOwner:(CFUUIDRef)arg1 ;
-(BOOL)ownerIsRegistered:(CFUUIDRef)arg1 ;
-(BOOL)allOwnersRegistered;
-(void)clearLegacyGlobalIDs;
-(CFUUIDRef)ownerIDForLegacyGlobalID:(id)arg1 registeringIfNeeded:(BOOL)arg2 ;
-(void)setOwnerIDForLegacyGlobalID:(id)arg1 ownerID:(CFUUIDRef)arg2 ;
-(void)addFormula:(SCD_Struct_TS283)arg1 inOwner:(CFUUIDRef)arg2 precedentIterator:(/*function pointer*/void*)arg3 userData:(void*)arg4 hasRandomVolatileFunctions:(BOOL*)arg5 ;
-(void)removeFormula:(SCD_Struct_TS283)arg1 inOwner:(CFUUIDRef)arg2 ;
-(void)removeAllFormulasFromOwner:(CFUUIDRef)arg1 ;
-(void)removeFormulasFromRange:(SCD_Struct_TS276*)arg1 ;
-(unsigned long long)dirtyCellCountInOwner:(CFUUIDRef)arg1 ;
-(BOOL)cellIsInACycle:(SCD_Struct_TS282*)arg1 ;
-(BOOL)referenceWasGuaranteedCleanAtRecalcCycleStart:(SCD_Struct_TS285*)arg1 ;
-(BOOL)clearCellIsDirtyAfterRecalc:(SCD_Struct_TS282*)arg1 ;
-(id)rewriteFormulasWithSpec:(id)arg1 ;
-(void)headerStateOfTableChanged:(CFUUIDRef)arg1 changeIsForColumns:(BOOL)arg2 ;
-(void)headerStateOfTableChanged:(CFUUIDRef)arg1 ;
-(void)updateDirtyPrecedentCountsForRemovedIndex:(int)arg1 inTable:(CFUUIDRef)arg2 forColumns:(BOOL)arg3 ;
-(void)rangeReferenceIsDirty:(SCD_Struct_TS276*)arg1 ;
-(void)allFunctionsAreDirty;
-(void)indirectCallsAreDirty;
-(void)markOnlyDependentsDirty:(const SCD_Struct_TS282*)arg1 ;
-(void)detectAndRepairConsistencyViolations;
-(void)timeVolatileFunctionsAreDirty;
-(void)localeVolatileFunctionsAreDirty;
-(void)locationVolatileFunctionsAreDirty;
-(void)compassVolatileFunctionsAreDirty;
-(void)geometryVolatileFunctionsAreDirtyInOwner:(CFUUIDRef)arg1 ;
-(BOOL)cellContainsAFormula:(SCD_Struct_TS282*)arg1 ;
-(void)blockUntilRecalcIsCompleteWithTimeout:(double)arg1 ;
-(void)executeBlockWhileCalculationEngineIsNotWriting:(/*^block*/id)arg1 ;
-(void)beginBatchingGroupCellDirtying;
-(void)endBatchingGroupCellDirtying;
-(SCD_Struct_TS272)cellCoordForCellHandle:(SCD_Struct_TS272)arg1 inTable:(CFUUIDRef)arg2 ;
-(SCD_Struct_TS275)rangeCoordForCellHandleRange:(SCD_Struct_TS275)arg1 inTable:(CFUUIDRef)arg2 ;
-(SCD_Struct_TS272)cellHandleForCellCoord:(SCD_Struct_TS272)arg1 inTable:(CFUUIDRef)arg2 ;
-(SCD_Struct_TS275)cellHandleRangeForRangeCoord:(SCD_Struct_TS275)arg1 inTable:(CFUUIDRef)arg2 ;
-(BOOL)referenceIsValid:(SCD_Struct_TS276*)arg1 ;
-(id)stringForRangeReference:(SCD_Struct_TS276*)arg1 hostTableID:(CFUUIDRef)arg2 stickyBits:(unsigned char)arg3 isRangeWithFunction:(BOOL)arg4 ;
-(id)stringForRangeReference:(SCD_Struct_TS276*)arg1 contextSheetName:(id)arg2 stickyBits:(unsigned char)arg3 isRangeWithFunction:(BOOL)arg4 ;
-(id)escapedStringForRangeReference:(SCD_Struct_TS276*)arg1 hostTableID:(CFUUIDRef)arg2 stickyBits:(unsigned char)arg3 isRangeWithFunction:(BOOL)arg4 forceEscaping:(BOOL)arg5 ;
-(id)escapedStringForRangeReference:(SCD_Struct_TS276*)arg1 contextSheetName:(id)arg2 stickyBits:(unsigned char)arg3 isRangeWithFunction:(BOOL)arg4 forceEscaping:(BOOL)arg5 ;
-(hash_set<TSCECReference, TSCECReferenceHash, TSCECReferenceEqual, std::__1::allocator<TSCECReference> >*)precedentsOfCell:(SCD_Struct_TS282*)arg1 ;
-(SCD_Struct_TS276*)parseStringAsReference:(id)arg1 contextResolver:(id)arg2 contextSheetName:(id)arg3 gettingSpecifiedSheetName:(id*)arg4 gettingSpecifiedTableName:(id*)arg5 gettingRest:(id*)arg6 gettingReferencesMatchingInputAsPrefix:(id*)arg7 gettingStickyBits:(char*)arg8 filterColons:(BOOL)arg9 referenceIsComplete:(BOOL)arg10 outNamesUsed:(BOOL*)arg11 ;
-(void)addCalculationStateObserver:(id)arg1 ;
-(void)removeCalculationStateObserver:(id)arg1 ;
-(unsigned long long)numberOfCellsWithFormulas;
-(void)assertDirtyPrecedentsCountConsistency;
-(void)assertAllDirtyCellsAreOnLeafStack;
-(id)allCellDependenciesAsString;
-(id)allSpanningDependenciesAsString;
-(id)allWholeOwnerDependenciesAsString;
-(hash_set<TSUColumnRowCoordinate, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUColumnRowCoordinate> >*)cellCoordinatesNeedingExcelImportForTable:(CFUUIDRef)arg1 ;
-(void)setTransposingTableID:(CFUUIDRef)arg1 ;
-(id)currentDate;
-(id)retain;
-(void)dealloc;
-(id)init;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(id)initWithContext:(id)arg1 ;
-(id)documentRoot;
@end

