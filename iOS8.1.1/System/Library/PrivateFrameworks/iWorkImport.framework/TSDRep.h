/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:35:33 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSDMagicMoveMatching.h>

@protocol TSDContainerRep, OS_dispatch_queue;
@class TSDCanvas, NSArray, TSDKnobTracker, CALayer, TSDTextureContext, NSDictionary, TSDLayout, TSDTextureSet, NSObject, TSDLayoutGeometry, TSDTilingBackgroundQueue, TSDInteractiveCanvasController;

@interface TSDRep : NSObject <TSDMagicMoveMatching> {

	TSDCanvas* mCanvas;
	TSDRep*<TSDContainerRep> mParentRep;
	NSArray* mKnobs;
	BOOL mKnobPositionsInvalid;
	BOOL mShowKnobsWhenManipulated;
	BOOL mKnobsAreShowing;
	TSDKnobTracker* mKnobTracker;
	BOOL mSelectionHighlightLayerValid;
	CALayer* mSelectionHighlightLayer;
	unsigned long long mTextureDeliveryStyle;
	int mTextureByGlyphStyle;
	TSDTextureContext* mTextureContext;
	unsigned long long mTextureStage;
	NSDictionary* mTextureActionAttributes;
	NSDictionary* mTextureAnimationInfo;
	BOOL mShowTemporaryHighlight;
	CALayer* mTemporaryHighlightLayer;
	BOOL mShowDragAndDropHighlight;
	CALayer* mDragAndDropHighlightLayer;
	TSDLayout* mTemporaryMixingLayout;
	TSDLayout* mLayout;
	TSDTextureSet* mTexture;
	NSObject*<OS_dispatch_queue> mTextureAccessQueue;
	CGColorRef mDefaultSelectionHighlightColor;
	TSDLayoutGeometry* mLastGeometryInRoot;
	CGRect mOriginalLayerFrameInScaledCanvas;
	TSDTilingBackgroundQueue* mTileQueue;
	long long mTileQueueOnce;
	long long mTileProviderQueueLock;
	NSObject*<OS_dispatch_queue> mTileProviderQueue;
	BOOL mHasBeenRemoved;

}

@property (nonatomic,readonly) TSDLayout * layout; 
@property (nonatomic,readonly) TSDCanvas * canvas; 
@property (nonatomic,retain) TSDLayout * temporaryMixingLayout; 
@property (nonatomic,readonly) TSDInteractiveCanvasController * interactiveCanvasController; 
@property (assign,nonatomic) TSDRep*<TSDContainerRep> parentRep; 
@property (nonatomic,readonly) NSArray * knobs; 
@property (assign,nonatomic) TSDKnobTracker * currentKnobTracker; 
@property (assign,nonatomic) CGColorRef selectionHighlightColor; 
@property (retain) TSDTextureSet * texture; 
@property (nonatomic,copy) TSDTextureContext * textureContext; 
@property (assign,nonatomic) unsigned long long textureDeliveryStyle; 
@property (assign,nonatomic) int textureByGlyphStyle; 
@property (assign,nonatomic) unsigned long long textureStage; 
@property (assign,nonatomic) NSDictionary * textureActionAttributes; 
@property (nonatomic,retain) NSDictionary * textureAnimationInfo; 
@property (nonatomic,readonly) double textureAngle; 
@property (nonatomic,readonly) NSArray * hyperlinkRegions; 
@property (nonatomic,readonly) BOOL isEditingPath; 
-(CGRect)i_partition_deepClipRect;
-(void)willBeginEyedropperMode;
-(CGRect)naturalBounds;
-(NSArray *)hyperlinkRegions;
-(void)processChanges:(id)arg1 ;
-(TSDInteractiveCanvasController *)interactiveCanvasController;
-(id)initWithLayout:(id)arg1 canvas:(id)arg2 ;
-(void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(BOOL)arg3 ;
-(CGPoint)convertNaturalPointToLayerRelative:(CGPoint)arg1 ;
-(CGPoint)convertNaturalPointFromUnscaledCanvas:(CGPoint)arg1 ;
-(void)willBeRemoved;
-(CGRect)convertNaturalRectFromUnscaledCanvas:(CGRect)arg1 ;
-(CGRect)convertNaturalRectToLayerRelative:(CGRect)arg1 ;
-(CGRect)frameInUnscaledCanvas;
-(void)willUpdateLayer:(id)arg1 ;
-(void)didUpdateLayer:(id)arg1 ;
-(CGRect)layerFrameInScaledCanvas;
-(void)computeDirectLayerFrame:(CGRect*)arg1 andTransform:(CGAffineTransform*)arg2 ;
-(BOOL)isBeingResized;
-(void)recursivelyDrawInContext:(CGContextRef)arg1 ;
-(void)didDrawInLayer:(id)arg1 context:(CGContextRef)arg2 ;
-(void)becameSelected;
-(void)becameNotSelected;
-(BOOL)shouldShowSelectionHighlight;
-(BOOL)shouldShowKnobs;
-(void)dynamicDragDidBegin;
-(void)dynamicDragDidEnd;
-(void)beginDragInsertFromPalette;
-(void)endDragInsertFromPalette;
-(id)dynamicResizeDidBegin;
-(void)dynamicResizeDidEndWithTracker:(id)arg1 ;
-(void)viewScaleDidChange;
-(void)viewScrollDidChange;
-(void)viewScrollingEnded;
-(CGRect)boundsForStandardKnobs;
-(void)setTextureStage:(unsigned long long)arg1 ;
-(void)setTextureDeliveryStyle:(unsigned long long)arg1 ;
-(void)markTextureDirty;
-(unsigned long long)textureDeliveryStyle;
-(void)setTextureContext:(TSDTextureContext *)arg1 ;
-(void)updatePositionsOfKnobs:(id)arg1 ;
-(id)newTrackerForKnob:(id)arg1 ;
-(void)invalidateKnobPositions;
-(BOOL)directlyManagesLayerContent;
-(BOOL)mustDrawOnMainThreadForInteractiveCanvas;
-(BOOL)canDrawInParallel;
-(BOOL)shouldShowSizesInRulers;
-(BOOL)shouldShowDragHUD;
-(void)setTextureAnimationInfo:(NSDictionary *)arg1 ;
-(id)textureForContext:(id)arg1 ;
-(void)updateFromLayout;
-(id)commandController;
-(id)overlayLayers;
-(void)setupForDrawingInLayer:(id)arg1 context:(CGContextRef)arg2 ;
-(BOOL)isDrawingInFlippedContext;
-(CGRect)convertNaturalRectToUnscaledCanvas:(CGRect)arg1 ;
-(id)itemsToAddToEditMenu;
-(CGPoint)centerForRotation;
-(TSDLayout *)temporaryMixingLayout;
-(void)dynamicallyResizingWithTracker:(id)arg1 ;
-(int)dragTypeAtCanvasPoint:(CGPoint)arg1 ;
-(void)addKnobsToArray:(id)arg1 ;
-(void)invalidateKnobs;
-(void)setCurrentKnobTracker:(TSDKnobTracker *)arg1 ;
-(BOOL)intersectsUnscaledRect:(CGRect)arg1 ;
-(BOOL)shouldLayoutTilingLayer:(id)arg1 ;
-(CGRect)visibleBoundsForTilingLayer:(id)arg1 ;
-(TSDKnobTracker *)currentKnobTracker;
-(void)beginDrawingOperation;
-(CGRect)snapRectForDynamicDragWithOffset:(CGPoint)arg1 ;
-(id)additionalRectsForSnappingWithOffset:(CGPoint)arg1 ;
-(CGRect)targetRectForEditMenu;
-(unsigned long long)adjustedKnobForComputingResizeGeometry:(unsigned long long)arg1 ;
-(BOOL)canEditWithEditor:(id)arg1 ;
-(void)endDrawingOperation;
-(void)processChangedProperty:(int)arg1 ;
-(NSDictionary *)textureAnimationInfo;
-(CGPoint)convertNaturalPointToUnscaledCanvas:(CGPoint)arg1 ;
-(CGAffineTransform)transformToConvertNaturalToLayerRelative;
-(BOOL)isInDynamicOperation;
-(void)drawInLayerContext:(CGContextRef)arg1 ;
-(BOOL)directlyManagesVisibilityOfKnob:(id)arg1 ;
-(void)i_shutdownTileQueue;
-(void)recursivelyPerformSelector:(SEL)arg1 ;
-(TSDRep*<TSDContainerRep>)parentRep;
-(id)hitRep:(CGPoint)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)hitRep:(CGPoint)arg1 ;
-(id)hitReps:(CGPoint)arg1 withSlop:(CGSize)arg2 ;
-(NSArray *)knobs;
-(void)invalidateComments;
-(void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 ;
-(void)dynamicOperationDidEnd;
-(void)i_invalidateSelectionHighlightLayer;
-(id)repForSelecting;
-(id)parentRepToPerformSelecting;
-(BOOL)isSelectedIgnoringLocking;
-(id)repForHandleSingleTap;
-(BOOL)wantsToHandleTapsWhenLocked;
-(BOOL)handleSingleTapAtPoint:(CGPoint)arg1 ;
-(BOOL)handleDoubleTapAtPoint:(CGPoint)arg1 ;
-(BOOL)handleMultipleTapAtPoint:(CGPoint)arg1 ;
-(BOOL)canDrawTilingLayerInBackground:(id)arg1 ;
-(id)i_tileQueue;
-(void)invalidateAnnotationColor;
-(void)i_willEnterForeground;
-(void)screenScaleDidChange;
-(BOOL)canClipThemeContentToCanvas;
-(BOOL)canDrawInBackgroundDuringScroll;
-(void)updateLayerGeometryFromLayout:(id)arg1 ;
-(id)additionalLayersUnderLayer;
-(BOOL)repDirectlyManagesContentsScaleOfLayer:(id)arg1 ;
-(id)additionalLayersOverLayer;
-(id)popoutLayers;
-(CGRect)frameInUnscaledCanvasIncludingChrome;
-(BOOL)shouldBeginDrawingTilingLayerInBackground:(id)arg1 returningToken:(id*)arg2 andQueue:(id*)arg3 ;
-(void)didEndDrawingTilingLayerInBackground:(id)arg1 withToken:(id)arg2 ;
-(BOOL)mustDrawTilingLayerOnMainThread:(id)arg1 ;
-(id)queueForDrawingTilingLayerInBackground:(id)arg1 ;
-(double)angleInRoot;
-(BOOL)isBeingRotated;
-(BOOL)isBeingDragged;
-(CGPoint)layerOffsetForDragging;
-(CGRect)i_layerFrameInScaledCanvasIgnoringDragging;
-(CGRect)i_originalLayerFrameInScaledCanvas;
-(CGAffineTransform)transformToConvertNaturalFromLayerRelative;
-(id)hitReps:(CGPoint)arg1 withSlopBlock:(/*^block*/id)arg2 ;
-(BOOL)containsPoint:(CGPoint)arg1 withSlop:(CGSize)arg2 ;
-(id)hitRepChrome:(CGPoint)arg1 ;
-(CGAffineTransform)layerTransformInRootForZeroAnchor;
-(CGRect)layerFrameInScaledCanvasRelativeToParent;
-(CGAffineTransform)layerTransform;
-(void)computeDirectLayerFrame:(CGRect*)arg1 andTransform:(CGAffineTransform*)arg2 basedOnTransform:(CGAffineTransform)arg3 andSize:(CGSize)arg4 ;
-(void)i_configureFontSmoothingForContext:(CGContextRef)arg1 layer:(id)arg2 ;
-(void)recursivelyDrawChildrenInContext:(CGContextRef)arg1 ;
-(BOOL)shouldCreateKnobs;
-(unsigned long long)enabledKnobMask;
-(CGRect)trackingBoundsForStandardKnobs;
-(BOOL)shouldCreateSelectionKnobs;
-(void)addSelectionKnobsToArray:(id)arg1 ;
-(BOOL)shouldCreateLockedKnobs;
-(void)addLockedKnobsToArray:(id)arg1 ;
-(BOOL)shouldCreateCommentKnob;
-(void)addCommentKnobToArray:(id)arg1 ;
-(BOOL)shouldDisplayHyperlinkUI;
-(void)addHyperlinkKnobToArray:(id)arg1 ;
-(void)addActionGhostKnobToArrayIfNecessary:(id)arg1 ;
-(id)newSelectionKnobForType:(int)arg1 tag:(unsigned long long)arg2 ;
-(CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(CGRect)arg2 ;
-(CGPoint)p_commentPoleTopPositionShouldDisplayDirectlyOverRep:(BOOL)arg1 ;
-(CGPoint)positionOfHyperlinkKnob;
-(CGPoint)p_positionOfActionGhostKnobForBounds:(CGRect)arg1 ;
-(BOOL)shouldShowCommentHighlight;
-(BOOL)isEditingPath;
-(double)selectionHighlightWidth;
-(CGRect)boundsForHighlightLayer;
-(CGAffineTransform)transformForHighlightLayer;
-(CGPoint)convertKnobPositionToUnscaledCanvas:(CGPoint)arg1 ;
-(CGPoint)convertKnobPositionFromUnscaledCanvas:(CGPoint)arg1 ;
-(id)selectionHighlightLayer;
-(id)p_addLayersForKnobsToArray:(id)arg1 withDelegate:(id)arg2 isOverlay:(BOOL)arg3 ;
-(void)p_dynamicOperationDidBegin;
-(void)p_dynamicOperationDidEnd;
-(id)connectedReps;
-(void)p_dynamicDragDidBegin;
-(BOOL)allowDragDelegate;
-(BOOL)allowResizeDelegate;
-(void)p_dynamicRotateDidBegin;
-(CGAffineTransform)unRotatedTransform:(CGAffineTransform)arg1 ;
-(void)setTextureAttributes:(id)arg1 ;
-(BOOL)i_hasInteractiveCanvasController;
-(void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2 ;
-(void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 ;
-(void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2 ;
-(void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 ;
-(void)i_willBeRemoved;
-(BOOL)hasBeenRemoved;
-(void)addToSet:(id)arg1 ;
-(CGPathRef)newPathInScaledCanvasFromNaturalRect:(CGRect)arg1 ;
-(CGRect)frameInScreenSpace;
-(CGPoint)convertNaturalPointFromLayerRelative:(CGPoint)arg1 ;
-(CGRect)convertNaturalRectFromLayerRelative:(CGRect)arg1 ;
-(id)hitRepChrome:(CGPoint)arg1 passingTest:(/*^block*/id)arg2 ;
-(BOOL)shouldExpandHitRegionWhenSmall;
-(double)shortestDistanceToPoint:(CGPoint)arg1 countAsHit:(BOOL*)arg2 ;
-(id)repForDragging;
-(id)additionalRepsForDragging;
-(id)repForRotating;
-(void)updateChildrenFromLayout;
-(CGAffineTransform)parentLayerInverseTransformInRootForZeroAnchor;
-(void)antiAliasDefeatLayerTransform:(CGAffineTransform*)arg1 forFrame:(CGRect)arg2 ;
-(void)antiAliasDefeatLayerFrame:(CGRect*)arg1 forTransform:(CGAffineTransform)arg2 ;
-(void)computeDirectLayerFrame:(CGRect*)arg1 andTransform:(CGAffineTransform*)arg2 basedOnLayoutGeometry:(id)arg3 ;
-(id)colorBehindLayer:(id)arg1 ;
-(void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(CGContextRef)arg2 ;
-(BOOL)canUseSpecializedHitRegionForKnob:(id)arg1 ;
-(BOOL)forcesPlacementOnTop;
-(CGPoint)positionOfActionGhostKnob;
-(void)p_toggleCommentVisibility;
-(void)p_toggleHyperlinkUIVisibility;
-(void)p_actionGhostKnobHit;
-(id)knobForTag:(unsigned long long)arg1 ;
-(double)additionalRotationForKnobOrientation;
-(BOOL)shouldShowCommentUIDirectlyOverRep;
-(CGPoint)unscaledActivityLineEndPointForEntry:(id)arg1 ;
-(void)showKnobsDuringManipulation:(BOOL)arg1 ;
-(void)turnKnobsOn;
-(void)fadeKnobsIn;
-(void)fadeKnobsOut;
-(void)dynamicOperationDidBegin;
-(BOOL)providesGuidesWhileAligning;
-(BOOL)exclusivelyProvidesGuidesWhileAligning;
-(BOOL)resetGuidesAfterDragAfterReset;
-(void)i_dynamicDragDidEnd;
-(CGPoint)i_dragOffset;
-(BOOL)allowRotateDelegate;
-(BOOL)demandsExclusiveSelection;
-(void)dynamicRotateDidBegin;
-(double)angleForRotation;
-(CGPoint)unscaledGuidePosition;
-(void)dynamicallyRotatingWithTracker:(id)arg1 ;
-(void)p_dynamicRotateDidEnd;
-(void)dynamicRotateDidEndWithTracker:(id)arg1 ;
-(id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2 ;
-(BOOL)handleSingleTapAtPoint:(CGPoint)arg1 onKnob:(id)arg2 ;
-(BOOL)handleDoubleTapAtPoint:(CGPoint)arg1 onKnob:(id)arg2 ;
-(BOOL)wantsEditMenuForTapAtPoint:(CGPoint)arg1 onKnob:(id)arg2 ;
-(BOOL)shouldIgnoreEditMenuTapAtPoint:(CGPoint)arg1 withRecognizer:(id)arg2 ;
-(BOOL)shouldIgnoreSingleTapAtPoint:(CGPoint)arg1 withRecognizer:(id)arg2 ;
-(BOOL)wantsToHandleTapsOnContainingGroup;
-(double)textureAngle;
-(void)setTextureByGlyphStyle:(int)arg1 ;
-(void)setTextureActionAttributes:(NSDictionary *)arg1 ;
-(id)allLayers;
-(int)dragHUDAndGuidesTypeAtCanvasPoint:(CGPoint)arg1 ;
-(BOOL)handlesEditMenu;
-(id)resizedGeometryForTransform:(CGAffineTransform)arg1 ;
-(BOOL)resizeFromCenterOnly;
-(id)infoForTransforming;
-(BOOL)wantsGuidesWhileResizing;
-(CGRect)boundsForResizeGuideUI;
-(id)i_queueForTileProvider;
-(BOOL)wantsToDistortWithImagerContext;
-(void)setTemporaryMixingLayout:(TSDLayout *)arg1 ;
-(void)setParentRep:(TSDRep*<TSDContainerRep>)arg1 ;
-(int)textureByGlyphStyle;
-(TSDTextureContext *)textureContext;
-(unsigned long long)textureStage;
-(NSDictionary *)textureActionAttributes;
-(CGRect)clipRect;
-(void)dealloc;
-(void)setNeedsDisplay;
-(id)description;
-(BOOL)isLocked;
-(BOOL)containsPoint:(CGPoint)arg1 ;
-(BOOL)isOpaque;
-(Class)layerClass;
-(void)setNeedsDisplayInRect:(CGRect)arg1 ;
-(BOOL)masksToBounds;
-(double)opacity;
-(void)scrollRectToVisible:(CGRect)arg1 animated:(BOOL)arg2 ;
-(BOOL)isSelected;
-(TSDLayout *)layout;
-(id)beginEditing;
-(id)info;
-(CGColorRef)selectionHighlightColor;
-(void)setSelectionHighlightColor:(CGColorRef)arg1 ;
-(void)drawInContext:(CGContextRef)arg1 ;
-(BOOL)isSelectable;
-(BOOL)isPlaceholder;
-(TSDCanvas *)canvas;
-(TSDTextureSet *)texture;
-(BOOL)isDraggable;
-(void)setTexture:(TSDTextureSet *)arg1 ;
-(int)tilingMode;
@end

