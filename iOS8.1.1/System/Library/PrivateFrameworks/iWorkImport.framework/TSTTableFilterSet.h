/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:35:41 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <iWorkImport/iWorkImport-Structs.h>
#import <iWorkImport/TSPObject.h>
#import <iWorkImport/TSPCopying.h>

@class NSArray;

@interface TSTTableFilterSet : TSPObject <TSPCopying> {

	int mType;
	BOOL mIsEnabled;
	NSArray* mRules;
	BOOL mNeedsFormulaRewriteForImport;
	vector<unsigned long, std::__1::allocator<unsigned long> >* mFilterOffsets;
	vector<bool, std::__1::allocator<bool> >* mFilterEnabled;

}
-(id)initFromUnarchiver:(id)arg1 ;
-(void)saveToArchiver:(id)arg1 ;
-(id)copyWithContext:(id)arg1 ;
-(void)saveToArchive:(FilterSetArchive*)arg1 archiver:(id)arg2 ;
-(id)initFromArchive:(const FilterSetArchive*)arg1 unarchiver:(id)arg2 ;
-(id)initWithFilterRules:(id)arg1 type:(int)arg2 context:(id)arg3 ;
-(id)addRules:(id)arg1 inFilter:(unsigned long long)arg2 ;
-(id)addRules:(id)arg1 atRuleIndices:(id)arg2 inFilter:(unsigned long long)arg3 isNew:(BOOL)arg4 ;
-(id)removeRulesWithIndices:(id)arg1 inFilter:(unsigned long long)arg2 ;
-(id)removeRules:(id)arg1 ;
-(id)replaceRule:(id)arg1 atRuleIndex:(unsigned long long)arg2 inFilter:(unsigned long long)arg3 ;
-(BOOL)needsFormulaRewriteForImport;
-(void)setNeedsFormulaRewriteForImport:(BOOL)arg1 ;
-(id)ruleAtAbsoluteIndex:(unsigned long long)arg1 ;
-(void)enableRuleAtIndex:(unsigned long long)arg1 inFilterIndex:(unsigned long long)arg2 ;
-(void)disableRuleAtIndex:(unsigned long long)arg1 inFilterIndex:(unsigned long long)arg2 ;
-(void)enableFilterAtIndex:(unsigned long long)arg1 ;
-(void)disableFilterAtIndex:(unsigned long long)arg1 ;
-(void)setFilterSetType:(int)arg1 ;
-(void)setRulesAtAbsoluteIndices:(id)arg1 enabled:(BOOL)arg2 ;
-(BOOL)rowIsShown:(unsigned short)arg1 withHiddenStateFormulaOwner:(id)arg2 withCalculationEngine:(id)arg3 ;
-(BOOL)p_thresholdComparisonMatchesFilter:(long long)arg1 withPredicateType:(int)arg2 ;
-(unsigned long long)numberOfRulesInFilter:(unsigned long long)arg1 ;
-(id)filterAtIndex:(unsigned long long)arg1 inTable:(id)arg2 ;
-(void)enumerateFiltersForColumn:(unsigned char)arg1 withTable:(id)arg2 usingBlock:(/*^block*/id)arg3 ;
-(void)enumerateRulesInFilterIndex:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)ruleInFilter:(unsigned long long)arg1 atIndex:(unsigned long long)arg2 ;
-(int)filterSetType;
-(unsigned long long)newFilterIndex;
-(void)enumerateFiltersInTable:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)enumerateFilterIndicesInTable:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)filterIndicesForColumn:(unsigned char)arg1 inTable:(id)arg2 ;
-(unsigned long long)firstFilterIndexForColumn:(unsigned char)arg1 inTable:(id)arg2 ;
-(BOOL)isFilterEnabledInColumn:(unsigned char)arg1 withTable:(id)arg2 ;
-(BOOL)isFilterRuleEnabledInColumn:(unsigned char)arg1 withTable:(id)arg2 ;
-(unsigned long long)ruleIndexInFilter:(unsigned long long)arg1 matchingCell:(id)arg2 ;
-(id)absoluteRuleIndicesForColumn:(unsigned char)arg1 inTable:(id)arg2 ;
-(BOOL)isRuleEnabledAtIndex:(unsigned long long)arg1 inFilterIndex:(unsigned long long)arg2 ;
-(BOOL)isFilterEnabledAtIndex:(unsigned long long)arg1 ;
-(void)dealloc;
-(BOOL)isEnabled;
-(void)setIsEnabled:(BOOL)arg1 ;
-(unsigned long long)ruleCount;
-(unsigned long long)filterCount;
@end

