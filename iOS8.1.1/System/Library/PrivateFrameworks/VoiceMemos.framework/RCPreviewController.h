/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:34:40 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/VoiceMemos.framework/VoiceMemos
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <VoiceMemos/VoiceMemos-Structs.h>
#import <VoiceMemos/RCAVPlayerDelegate.h>

@class RCAudioSessionRoutingAssertion, NSUUID, NSHashTable, NSMutableDictionary, AVPlayerItem, RCAVState, RCAVPlayer, NSString;

@interface RCPreviewController : NSObject <RCAVPlayerDelegate> {

	BOOL _resetUseVoiceMemoSettingsValue;
	BOOL _voiceMemoSettingEnabledNeedsReset;
	BOOL _isPreparingForPreview;
	double _currentTimeTarget;
	double _currentRateTarget;
	RCAudioSessionRoutingAssertion* _activePreviewRouteAssertion;
	RCAudioSessionRoutingAssertion* _preparingToPreviewRouteAssertion;
	NSUUID* _preparingToPreviewRouteAssertionSessionUUID;
	NSHashTable* _weakObservers;
	NSMutableDictionary* _monitoredDispatchSourcesByURL;
	BOOL _useVoiceMemoSettings;
	AVPlayerItem* _AVPlayerItem;
	RCAVState* _AVState;
	double _currentTimeDelegateUpdateRate;
	RCAVPlayer* _AVPlayer;

}

@property (nonatomic,retain) AVPlayerItem * AVPlayerItem;                       //@synthesize AVPlayerItem=_AVPlayerItem - In the implementation block
@property (assign,nonatomic) SCD_Struct_RC1 playableTimeRange; 
@property (assign,nonatomic) double currentTime; 
@property (nonatomic,readonly) float rate; 
@property (nonatomic,retain) RCAVState * AVState;                               //@synthesize AVState=_AVState - In the implementation block
@property (assign,nonatomic) double currentTimeDelegateUpdateRate;              //@synthesize currentTimeDelegateUpdateRate=_currentTimeDelegateUpdateRate - In the implementation block
@property (assign,nonatomic) BOOL useVoiceMemoSettings;                         //@synthesize useVoiceMemoSettings=_useVoiceMemoSettings - In the implementation block
@property (nonatomic,readonly) RCAVPlayer * AVPlayer;                           //@synthesize AVPlayer=_AVPlayer - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_applicationDidEnterBackgroundNotification:(id)arg1 ;
-(void)_applicationWillEnterForegroundNotification:(id)arg1 ;
-(void)setCurrentTime:(double)arg1 ;
-(void)dealloc;
-(id)init;
-(void)removeObserver:(id)arg1 ;
-(void)stop;
-(void)pause;
-(void)addObserver:(id)arg1 ;
-(void)setAVPlayerItem:(AVPlayerItem *)arg1 ;
-(float)rate;
-(void)setRate:(float)arg1 ;
-(RCAVState *)AVState;
-(id)_recreateAVPlayer;
-(void)_audioRouteControllerWillDeactivateAudioSessionNotification:(id)arg1 ;
-(void)_stopMonitoringUnderylingAssetPath;
-(void)_handleUnderlyingAssetDisappeared;
-(BOOL)_monitorUnderlyingAssetPathInPlayerItem:(id)arg1 assetDisappearedBlock:(/*^block*/id)arg2 ;
-(void)_beginPreparingToPreviewRouteAssertion;
-(BOOL)useVoiceMemoSettings;
-(void)setUseVoiceMemoSettings:(BOOL)arg1 ;
-(void)_readyToPlay_playPlayer:(id)arg1 ;
-(void)playWithTimeRange:(SCD_Struct_RC1)arg1 startTime:(double)arg2 ;
-(id)_AVPlayerIfActive;
-(void)_playerCurrentRateDidChangeToRate:(float)arg1 hadPlaybackItem:(BOOL)arg2 ;
-(void)_handleDidStopPlaybackWithError:(id)arg1 ;
-(void)_endActivePreviewRouteAssertion;
-(void)_beginActivePreviewRouteAssertion;
-(void)_postDelegateCurrentRateChangeToRate:(float)arg1 ;
-(void)_postDelegateCurrentTimeUpdate;
-(void)_performWithObserversBlock:(/*^block*/id)arg1 ;
-(void)playerCurrentItemDidBecomeReadyToPlay:(id)arg1 ;
-(void)playerCurrentRateDidChange:(id)arg1 ;
-(void)playerCurrentTimeDidChange:(id)arg1 ;
-(void)playerDidBecomeInvalid:(id)arg1 ;
-(void)playOrRestart;
-(void)setPlayableTimeRange:(SCD_Struct_RC1)arg1 ;
-(SCD_Struct_RC1)playableTimeRange;
-(void)setCurrentTimeDelegateUpdateRate:(double)arg1 ;
-(void)handlePreviewEnded;
-(void)_setPreparingToPlay:(BOOL)arg1 notifyObservers:(BOOL)arg2 ;
-(AVPlayerItem *)AVPlayerItem;
-(void)setAVState:(RCAVState *)arg1 ;
-(double)currentTimeDelegateUpdateRate;
-(RCAVPlayer *)AVPlayer;
-(double)currentTime;
@end

