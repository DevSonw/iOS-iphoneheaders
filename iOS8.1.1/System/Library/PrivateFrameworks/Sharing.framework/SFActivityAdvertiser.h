/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:33:50 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/Sharing.framework/Sharing
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Sharing/SFCompanionXPCManagerObserver.h>
#import <Sharing/SFActivityAdvertiserClient.h>

@protocol SFActivityAdvertiserDelegate, SFActivityAdvertiserProtocol;
@class SFInternalAdvertisement, NSString;

@interface SFActivityAdvertiser : NSObject <SFCompanionXPCManagerObserver, SFActivityAdvertiserClient> {

	id<SFActivityAdvertiserDelegate> _delegate;
	id<SFActivityAdvertiserProtocol> _connectionProxy;
	SFInternalAdvertisement* _currentAdvertisement;

}

@property (assign) id<SFActivityAdvertiserDelegate> delegate;                     //@synthesize delegate=_delegate - In the implementation block
@property (retain) id<SFActivityAdvertiserProtocol> connectionProxy;              //@synthesize connectionProxy=_connectionProxy - In the implementation block
@property (retain) SFInternalAdvertisement * currentAdvertisement;                //@synthesize currentAdvertisement=_currentAdvertisement - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedAdvertiser;
-(void)setupXPCConnection;
-(void)dealloc;
-(void)setDelegate:(id<SFActivityAdvertiserDelegate>)arg1 ;
-(id)init;
-(id<SFActivityAdvertiserDelegate>)delegate;
-(void)xpcManagerConnectionInterrupted;
-(void)setConnectionProxy:(id<SFActivityAdvertiserProtocol>)arg1 ;
-(id<SFActivityAdvertiserProtocol>)connectionProxy;
-(SFInternalAdvertisement *)currentAdvertisement;
-(void)setCurrentAdvertisement:(SFInternalAdvertisement *)arg1 ;
-(void)activityPayloadForAdvertisementPayload:(id)arg1 requestedByDeviceIdentifier:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(void)didSendPayloadForActivityIdentifier:(id)arg1 toDeviceIdentifier:(id)arg2 error:(id)arg3 ;
-(void)advertiseAdvertisementPayload:(id)arg1 options:(id)arg2 ;
@end

