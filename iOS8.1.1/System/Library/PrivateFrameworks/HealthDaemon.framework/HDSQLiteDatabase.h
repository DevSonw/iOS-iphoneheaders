/*
* This header is generated by classdump-dyld 0.7
* on Tuesday, December 2, 2014 at 7:32:00 PM Japan Standard Time
* Operating System: Version 8.1.1 (Build 12B436)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <HealthDaemon/HealthDaemon-Structs.h>
@class NSMutableDictionary, NSURL;

@interface HDSQLiteDatabase : NSObject {

	sqlite3Ref _db;
	BOOL _isInTransaction;
	long long _transactionType;
	CFDictionaryRef _statementCache;
	NSMutableDictionary* _attachedDatabaseURLsByName;
	NSURL* _fileURL;

}

@property (nonatomic,readonly) NSURL * fileURL;              //@synthesize fileURL=_fileURL - In the implementation block
+(id)virtualFilesystemModule;
+(void)_stepStatement:(sqlite3_stmtRef)arg1 hasRow:(BOOL*)arg2 didFinish:(BOOL*)arg3 ;
+(BOOL)deleteDatabaseAtPath:(id)arg1 ;
+(BOOL)statementHasRowAfterStepping:(sqlite3_stmtRef)arg1 ;
+(BOOL)statementDidFinishAfterStepping:(sqlite3_stmtRef)arg1 ;
-(void)dealloc;
-(NSURL *)fileURL;
-(int)open;
-(BOOL)executeSQL:(id)arg1 ;
-(BOOL)performTransactionWithType:(long long)arg1 error:(id*)arg2 usingBlock:(/*^block*/id)arg3 ;
-(int)_openWithPath:(id)arg1 ;
-(BOOL)executeSQL:(id)arg1 error:(id*)arg2 ;
-(BOOL)alterTable:(id)arg1 removeColumns:(id)arg2 renameColumns:(id)arg3 ;
-(BOOL)isDatabaseWithNameAttached:(id)arg1 ;
-(void)performTransactionWithType:(long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(BOOL)setUserVersion:(long long)arg1 withDatabaseName:(id)arg2 ;
-(long long)userVersionWithDatabaseName:(id)arg1 ;
-(BOOL)addColumnInTable:(id)arg1 columnSQL:(id)arg2 ;
-(BOOL)removeColumnInTable:(id)arg1 name:(id)arg2 ;
-(BOOL)renameColumnInTable:(id)arg1 oldName:(id)arg2 newName:(id)arg3 ;
-(BOOL)renameTable:(id)arg1 newName:(id)arg2 ;
-(BOOL)insertColumns:(id)arg1 fromTableNamed:(id)arg2 toTableNamed:(id)arg3 ;
-(BOOL)attachDatabaseWithName:(id)arg1 fileURL:(id)arg2 error:(id*)arg3 ;
-(void)detachDatabaseWithName:(id)arg1 ;
-(BOOL)dropTable:(id)arg1 ;
-(id)initWithDatabaseURL:(id)arg1 ;
-(void)prepareStatementForSQL:(id)arg1 cache:(BOOL)arg2 usingBlock:(/*^block*/id)arg3 ;
-(sqlite3_stmtRef)_statementForSQL:(id)arg1 cache:(BOOL)arg2 ;
-(void)accessDatabaseUsingBlock:(/*^block*/id)arg1 ;
@end

