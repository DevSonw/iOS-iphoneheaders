/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 7:09:45 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /Applications/MobileCal.app/MobileCal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <MobileCal/MobileCal-Structs.h>
#import <MobileCal/MonthViewController.h>
#import <MobileCal/EKEventGestureControllerUntimedDelegate.h>
#import <MobileCal/EKEventViewDelegate.h>
#import <MobileCal/EKEventEditViewDelegate.h>
#import <MobileCal/EKEventViewDelegatePrivate.h>
#import <MobileCal/ABPersonViewControllerDelegate.h>
#import <MobileCal/LargeMonthWeekViewDataSource.h>
#import <MobileCal/LargeMonthWeekViewDelegate.h>
#import <UIKit/UIPopoverPresentationControllerDelegate.h>

@class UIViewController, EKEventEditViewController, EKEvent, LargeMonthWeekView, EKCalendarDate, NSArray, EKEventGestureController, LargeMonthViewOccurrenceView, EventDetailContainerViewController, NSString;

@interface LargeMonthViewController : MonthViewController <EKEventGestureControllerUntimedDelegate, EKEventViewDelegate, EKEventEditViewDelegate, EKEventViewDelegatePrivate, ABPersonViewControllerDelegate, LargeMonthWeekViewDataSource, LargeMonthWeekViewDelegate, UIPopoverPresentationControllerDelegate> {

	UIViewController* _presentedEventViewController;
	char _currentlyEditingEvent;
	EKEventEditViewController* _editViewController;
	EKEvent* _eventBeingInspected;
	LargeMonthWeekView* _weekContainingEventBeingInspected;
	CGRect _scrubbingRect;
	EKCalendarDate* _tappedDay;
	char _isTrackingTouches;
	NSArray* _verticalGridLines;
	EKEventGestureController* _gestureController;
	EKCalendarDate* _initialDragDate;
	char _draggingExistingEvent;
	LargeMonthViewOccurrenceView* _draggingEventView;
	EKEvent* _draggingEvent;
	CGPoint _dragOffset;
	EKCalendarDate* _draggedStartDate;
	EKCalendarDate* _draggedEndDate;
	LargeMonthWeekView* _weekContainingSelectedOccurrence;
	EKCalendarDate* _initialDate;
	EKCalendarDate* _navigationBarDisplayedDate;
	char _shouldPresentEventDetailsForSelectedOccurrence;
	char _shouldPresentEventCommentsForSelectedOccurrence;
	EventDetailContainerViewController* _eventDetailsContainerToShow;
	char _editorDismissedFromDelete;
	char _shouldForceAllowUpdateNavigationBarDateString;
	EKCalendarDate* _activeDateDuringRotation;

}

@property (nonatomic,retain) EKCalendarDate * activeDateDuringRotation;              //@synthesize activeDateDuringRotation=_activeDateDuringRotation - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(float)subviewHeightForDate:(id)arg1 orientation:(int)arg2 ;
+(float)_cellHeightForOrientation:(int)arg1 withMultiplier:(float)arg2 ;
+(char)_shouldForwardViewWillTransitionToSize;
-(void)largeMonthWeekView:(id)arg1 touchesBegan:(id)arg2 withEvent:(id)arg3 ;
-(void)largeMonthWeekView:(id)arg1 touchesMoved:(id)arg2 withEvent:(id)arg3 ;
-(void)largeMonthWeekView:(id)arg1 touchesEnded:(id)arg2 withEvent:(id)arg3 ;
-(id)occurrencesForStartDate:(id)arg1 endDate:(id)arg2 waitForLoad:(char)arg3 ;
-(void)largeMonthWeekView:(id)arg1 didTapOccurrence:(id)arg2 onDay:(id)arg3 ;
-(void)largeMonthWeekView:(id)arg1 didDoubleTapOnDay:(id)arg2 ;
-(void)didCompleteBackgroundOccurrenceRenderingForLargeMonthWeekView:(id)arg1 ;
-(CGRect)frameForTodayHighlight;
-(void)showEvent:(id)arg1 animated:(char)arg2 showDetails:(char)arg3 ;
-(void)showEvent:(id)arg1 animated:(char)arg2 showDetails:(char)arg3 showComments:(char)arg4 ;
-(void)presentDetailsViewWhenReady:(id)arg1 animated:(char)arg2 ;
-(void)updatePalette:(id)arg1 ;
-(void)updateNavigationBarDisplayedDateString;
-(id)popoverSourceViewForEventDetails:(id)arg1 ;
-(CGRect)popoverSourceRectForEventDetails:(id)arg1 ;
-(char)shouldPresentEventDetailsForSelectedOccurrence;
-(void)setShouldPresentEventDetailsForSelectedOccurrence:(char)arg1 ;
-(id)initWithCalendarDate:(id)arg1 model:(id)arg2 ;
-(void)weekNumbersPrefChanged;
-(float)heightForSubviewWithCalendarDate:(id)arg1 ;
-(float)decelerationDistanceThresholdForPreferringMonthBoundary;
-(void)didEndScrolling;
-(id)pushedWeekViewControllerWithDate:(id)arg1 animated:(char)arg2 ;
-(id)createInitialViewForDate:(id)arg1 ;
-(float)subviewBufferExtensionMultiplier;
-(float)topInsetForSubviewWithCalendarDate:(id)arg1 ;
-(unsigned)maximumCachedReusableViews;
-(id)newTopViewAboveViewWithCalendarDate:(id)arg1 ;
-(id)newBottomViewBelowViewWithCalendarDate:(id)arg1 ;
-(void)_displayedOccurrencesChanged:(id)arg1 ;
-(void)_editorUpdated:(id)arg1 ;
-(void)_closeEventPresentationAnimated:(char)arg1 ;
-(id)_weekViewForEKCalendarDate:(id)arg1 ;
-(void)setActiveDateDuringRotation:(EKCalendarDate *)arg1 ;
-(void)_updateDraggingView;
-(EKCalendarDate *)activeDateDuringRotation;
-(void)_removeDraggingOccurrenceAnimated:(char)arg1 ;
-(void)_removeAllWeekHighlights;
-(void)_selectOccurrence:(id)arg1 inWeek:(id)arg2 ;
-(id)_createLargeMonthWeekViewForDate:(id)arg1 ;
-(void)_showEventDetailsForOccurrence:(id)arg1 inWeek:(id)arg2 onDay:(id)arg3 animatedScrollToVisible:(char)arg4 showComments:(char)arg5 ;
-(void)_showDetailViewContainer:(id)arg1 inWeekView:(id)arg2 animated:(char)arg3 ;
-(void)_showEventDetailsForOccurrence:(id)arg1 inWeek:(id)arg2 onDay:(id)arg3 ;
-(id)_occurrenceAtPoint:(CGPoint)arg1 ;
-(id)_weekViewAtPoint:(CGPoint)arg1 pointInWeek:(CGPoint*)arg2 ;
-(void)_scrubAtPoint:(CGPoint)arg1 ;
-(void)_scrubWithTouches:(id)arg1 ;
-(id)_dateAtPoint:(CGPoint)arg1 ;
-(void)_showEventDetailsForOccurrence:(id)arg1 inWeek:(id)arg2 onDay:(id)arg3 animatedScrollToVisible:(char)arg4 ;
-(CGRect)_startingFrameForEvent:(id)arg1 atPoint:(CGPoint)arg2 ;
-(void)_event:(id)arg1 wasCancelledAtPoint:(CGPoint)arg2 ;
-(void)_updateDraggingOffsetTimesForPoint:(CGPoint)arg1 ;
-(void)_updateWeekHighlightsForDragPoint:(CGPoint)arg1 ;
-(CGRect)_mainFrameForEvent:(id)arg1 atLastPosition:(char)arg2 atPoint:(CGPoint)arg3 ;
-(void)_animateDraggingOccurrenceToDate:(id)arg1 atLastPosition:(char)arg2 dropPoint:(CGPoint)arg3 completion:(/*^block*/id)arg4 ;
-(void)_saveDraggedEventWithSpan:(int)arg1 ;
-(char)shouldUseInternalNavigationControllerForEventDetailsContainer:(id)arg1 ;
-(char)_isEventAllInOneWeek:(id)arg1 ;
-(void)eventEditViewController:(id)arg1 didCompleteWithAction:(int)arg2 ;
-(id)touchTrackingViewForEventGestureController:(id)arg1 ;
-(char)eventGestureControllerShouldAllowLongPress:(id)arg1 ;
-(void)significantTimeChangeOccurred;
-(void)eventGestureController:(id)arg1 setUpAtPoint:(CGPoint)arg2 ;
-(void)eventGestureController:(id)arg1 updateToPoint:(CGPoint)arg2 ;
-(void)eventGestureControllerCancelled:(id)arg1 ;
-(void)eventGestureController:(id)arg1 commitToPoint:(CGPoint)arg2 ;
-(void)eventGestureControllerScrollTimerFired:(id)arg1 ;
-(char)isDraggingOccurrence;
-(void)eventViewController:(id)arg1 didCompleteWithAction:(int)arg2 ;
-(void)eventViewControllerWillBeginEditingEvent:(id)arg1 ;
-(char)eventViewDelegateShouldCreateOwnEditViewController:(id)arg1 ;
-(char)eventViewDelegateShouldHandlePresentationOfEditViewController:(id)arg1 ;
-(void)eventViewController:(id)arg1 requestsDisplayOfEditViewController:(id)arg2 animated:(char)arg3 ;
-(int)editorShowTransition;
-(int)editorHideTransition;
-(void)dealloc;
-(char)shouldAutorotate;
-(unsigned)supportedInterfaceOrientations;
-(void)viewWillLayoutSubviews;
-(void)viewDidLayoutSubviews;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)loadView;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)viewDidDisappear:(char)arg1 ;
-(char)popoverPresentationControllerShouldDismissPopover:(id)arg1 ;
-(void)popoverPresentationControllerDidDismissPopover:(id)arg1 ;
-(void)popoverPresentationController:(id)arg1 willRepositionPopoverToRect:(inout CGRect*)arg2 inView:(inout id*)arg3 ;
-(void)didScroll;
-(char)personViewController:(id)arg1 shouldPerformDefaultActionForPerson:(void*)arg2 property:(int)arg3 identifier:(int)arg4 ;
@end

