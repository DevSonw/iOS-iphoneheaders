/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 7:09:38 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <Maps/VSSpeechSynthesizerDelegate.h>
#import <Maps/AVAudioPlayerDelegate.h>

@protocol OS_dispatch_queue, VSSpeechSynthesizerDelegate;
@class NSString, NSDictionary, MNNavigationAudioSession, NSHashTable, AVAudioPlayer, NSObject, VSSpeechSynthesizer;

@interface MNVoiceController : NSObject <VSSpeechSynthesizerDelegate, AVAudioPlayerDelegate> {

	NSString* _currentLanguage;
	char _spokenLanguageIsUILanguage;
	NSDictionary* _localizableStrings;
	NSString* _languageLocale;
	NSString* _uiLanguage;
	char _isPersistentConnectionOpen;
	char _isActivatingAudioSession;
	char _speechMuted;
	MNNavigationAudioSession* _activeNavigationSession;
	NSHashTable* _observers;
	/*^block*/id _completionBlock;
	AVAudioPlayer* _leftTurnAudioPlayer;
	AVAudioPlayer* _rightTurnAudioPlayer;
	char _shouldBePlayingPrompt;
	NSString* _queuedSpeech;
	/*^block*/id _queuedCompletionBlock;
	NSObject*<OS_dispatch_queue> _audioQueue;
	int _currentLanguageSource;
	id<VSSpeechSynthesizerDelegate> delegate;
	VSSpeechSynthesizer* synthesizer;

}

@property (nonatomic,readonly) NSString * currentVoiceLanguage; 
@property (nonatomic,readonly) char speechMuted;                                              //@synthesize speechMuted=_speechMuted - In the implementation block
@property (nonatomic,retain) MNNavigationAudioSession * activeNavigationSession;              //@synthesize activeNavigationSession=_activeNavigationSession - In the implementation block
@property (assign,nonatomic,__weak) id<VSSpeechSynthesizerDelegate> delegate; 
@property (nonatomic,retain) VSSpeechSynthesizer * synthesizer; 
@property (nonatomic,copy) id completionBlock;                                                //@synthesize completionBlock=_completionBlock - In the implementation block
@property (nonatomic,copy) NSString * queuedSpeech;                                           //@synthesize queuedSpeech=_queuedSpeech - In the implementation block
@property (nonatomic,copy) id queuedCompletionBlock;                                          //@synthesize queuedCompletionBlock=_queuedCompletionBlock - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)setVolumeFromDefaults;
+(id)sharedInstance;
+(id)localizedStringForKey:(const char*)arg1 ;
-(MNNavigationAudioSession *)activeNavigationSession;
-(NSString *)currentVoiceLanguage;
-(id)_uiLanguage;
-(id)_vsPreferencesSpokenLanguageIdentifier;
-(id)_defaultVoiceLanguageWithSource:(int*)arg1 ;
-(void)_setGender;
-(void)_updateCurrentVoiceLanguage;
-(id)_localizedStringForKey:(const char*)arg1 ;
-(void)_setVolumeFromDefaults;
-(int)volumeContext;
-(VSSpeechSynthesizer *)synthesizer;
-(void)_setAudioSessionProperties;
-(void)setSynthesizer:(VSSpeechSynthesizer *)arg1 ;
-(char)isPlayingAudio;
-(void)setQueuedSpeech:(NSString *)arg1 ;
-(void)setQueuedCompletionBlock:(id)arg1 ;
-(char)speechMuted;
-(void)_handleFinishedSpeakingWithStatusCode:(int)arg1 ;
-(void)activateAudioSession:(char)arg1 completionHandler:(/*^block*/id)arg2 ;
-(NSString *)queuedSpeech;
-(id)queuedCompletionBlock;
-(void)speak:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)_speakQueued;
-(id)_rightTurnAudioPlayer;
-(id)_leftTurnAudioPlayer;
-(void)_handleFinishedPlayingBeep;
-(void)_audioInterruption:(id)arg1 ;
-(void)_setVolumeControlEnabled:(char)arg1 ;
-(void)_setMaintainInactivePersistentConnection:(char)arg1 ;
-(void)_setLoggingEnabled:(char)arg1 ;
-(id)_uiLocaleIdentifier;
-(void)beepIfNecessaryForShortPromptType:(int)arg1 ;
-(void)setActiveNavigationSession:(MNNavigationAudioSession *)arg1 ;
-(void)prepareToAnnounce;
-(void)endAnnounce;
-(void)dealloc;
-(void)setDelegate:(id<VSSpeechSynthesizerDelegate>)arg1 ;
-(id)init;
-(id<VSSpeechSynthesizerDelegate>)delegate;
-(id)completionBlock;
-(void)setCompletionBlock:(id)arg1 ;
-(void)stop;
-(void)removeObserver:(id)arg1 ;
-(void)addObserver:(id)arg1 ;
-(char)isSpeaking;
-(void)speechSynthesizer:(id)arg1 didFinishSpeaking:(char)arg2 withError:(id)arg3 ;
-(void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(char)arg2 ;
-(void)_defaultsDidChange;
-(void)_mediaServicesWereReset:(id)arg1 ;
@end

