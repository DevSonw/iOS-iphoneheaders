/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 7:09:39 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <CoreLocation/CLLocation.h>

@class GEORouteMatch, VKMapMatch, CLLocation, NSString;

@interface MNLocation : CLLocation {

	int _state;
	GEORouteMatch* _routeMatch;
	VKMapMatch* _roadMatch;
	CLLocation* _rawLocation;
	NSString* _roadName;
	long long _shieldType;
	NSString* _shieldText;
	char _locationUnreliable;

}

@property (nonatomic,readonly) int state;                             //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) NSString * roadName; 
@property (nonatomic,readonly) char hadRouteToCompare; 
@property (nonatomic,retain) GEORouteMatch * routeMatch;              //@synthesize routeMatch=_routeMatch - In the implementation block
@property (nonatomic,readonly) VKMapMatch * roadMatch;                //@synthesize roadMatch=_roadMatch - In the implementation block
@property (nonatomic,readonly) CLLocation * rawLocation;              //@synthesize rawLocation=_rawLocation - In the implementation block
@property (nonatomic,readonly) double routeAccuracy; 
@property (nonatomic,readonly) long long shieldType;                  //@synthesize shieldType=_shieldType - In the implementation block
@property (nonatomic,readonly) NSString * shieldText;                 //@synthesize shieldText=_shieldText - In the implementation block
@property (assign,nonatomic) char locationUnreliable;                 //@synthesize locationUnreliable=_locationUnreliable - In the implementation block
@property (nonatomic,readonly) char isProjected; 
+(id)locationWithRawLocation:(id)arg1 routeMatch:(id)arg2 roadName:(id)arg3 shieldType:(long long)arg4 shieldText:(id)arg5 useMatchLocation:(char)arg6 ;
+(id)locationWithRawLocation:(id)arg1 ;
+(id)locationWithRawLocation:(id)arg1 coordinate:(SCD_Struct_RA2)arg2 course:(double)arg3 ;
+(id)locationWithRawLocation:(id)arg1 roadMatch:(id)arg2 roadName:(id)arg3 useMatchLocation:(char)arg4 ;
-(char)isProjected;
-(NSString *)shieldText;
-(id)initWithRawLocation:(id)arg1 coordinate:(SCD_Struct_RA2)arg2 course:(double)arg3 ;
-(id)initWithRawLocation:(id)arg1 routeMatch:(id)arg2 roadName:(id)arg3 shieldType:(long long)arg4 shieldText:(id)arg5 useMatchLocation:(char)arg6 ;
-(id)initWithRawLocation:(id)arg1 roadMatch:(id)arg2 roadName:(id)arg3 useMatchLocation:(char)arg4 ;
-(double)routeAccuracy;
-(char)hadRouteToCompare;
-(VKMapMatch *)roadMatch;
-(char)hasValidCourse;
-(id)description;
-(int)state;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)locationUnreliable;
-(void)setLocationUnreliable:(char)arg1 ;
-(CLLocation *)rawLocation;
-(long long)shieldType;
-(char)isStale;
-(GEORouteMatch *)routeMatch;
-(NSString *)roadName;
-(void)setRouteMatch:(GEORouteMatch *)arg1 ;
@end

