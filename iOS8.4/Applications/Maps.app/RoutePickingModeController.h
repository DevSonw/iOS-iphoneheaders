/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 7:09:41 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <Maps/RoutePickingBarDelegate.h>
#import <Maps/MKMapViewDelegate.h>
#import <Maps/MainChromeModeController.h>
#import <Maps/MapsActivityViewControllerDelegate.h>

@protocol RoutePickingSessionBasics, RoutePickingSession, RoutePickingDisplayableRoutes, MKAnnotation, RoutePickingProvider, RoutePickingSelectionDelegate;
@class RoutePickingBarProvider, NSArray, CenteringView, UISegmentedControl, MNRoute, PlacePresentationSelectionManagerContext, MainChromeDetailsBarContent, UIButton, AdaptivePresenter, NSError, VKLabelMarker, MapsChromeViewController, NSString, ChromeViewController;

@interface RoutePickingModeController : NSObject <RoutePickingBarDelegate, MKMapViewDelegate, MainChromeModeController, MapsActivityViewControllerDelegate> {

	RoutePickingBarProvider* _bar;
	NSArray* _routes;
	CenteringView* _modeCenteringView;
	UISegmentedControl* _modeSelector;
	/*^block*/id _presentDirectionsSearchUI;
	/*^block*/id _presentDirectionsStepsListUI;
	/*^block*/id _completion;
	unsigned _previousMapType;
	MNRoute* _selectedRoute;
	PlacePresentationSelectionManagerContext* _placePresentationSelectionManagerContext;
	char _hasEverSetUpSessionDisplay;
	id<RoutePickingSessionBasics> _session;
	id<RoutePickingSession> _sessionWithRoutes;
	MainChromeDetailsBarContent* _detailsBarContent;
	char _isSessionCurrent;
	char _canSessionBecomeCurrent;
	char _isSessionResigning;
	char _hasSetUpInitialState;
	id<RoutePickingDisplayableRoutes> _currentRoutes;
	int _currentEffectiveSelectedVariant;
	int _previousEffectiveSelectedVariant;
	int _lastSuccessfullyDisplayedEffectiveSelectedVariant;
	char _isIgnoringProviderAfterError;
	char _isLoading;
	char _showingApps;
	unsigned _numberOfCameraPositioningOperationsInFlight;
	char _isCameraCenteredOnAllRoutes;
	char _isRotating;
	char _isInvokingCompletion;
	UIButton* _mainActionButton;
	UIButton* _defaultMainActionButton;
	AdaptivePresenter* _shareSheetPresenter;
	NSError* _error;
	id<MKAnnotation> _previousAnnotationSelection;
	VKLabelMarker* _previousLabelSelection;
	MapsChromeViewController* _chromeViewController;
	id<RoutePickingProvider> _provider;
	id<RoutePickingSelectionDelegate> _selectionDelegate;

}

@property (nonatomic,readonly) id<RoutePickingProvider> provider;                                     //@synthesize provider=_provider - In the implementation block
@property (assign,nonatomic,__weak) id<RoutePickingSelectionDelegate> selectionDelegate;              //@synthesize selectionDelegate=_selectionDelegate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) ChromeViewController * chromeViewController; 
+(int)_variantForTransportType:(unsigned)arg1 ;
+(CGSize)_routeDisplayPaddingSizeForRoutes:(id)arg1 inMapView:(id)arg2 ;
+(SCD_Struct_RA6)mapRectForRoutes:(id)arg1 withOriginWaypoint:(id)arg2 destinationWaypoint:(id)arg3 inMapView:(id)arg4 extraInsets:(UIEdgeInsets)arg5 ;
-(ChromeViewController *)chromeViewController;
-(void)mapsActivityViewController:(id)arg1 addBookmarkWithSearchResult:(id)arg2 title:(id)arg3 ;
-(void)mapsActivityViewControllerPrint:(id)arg1 ;
-(id)placePresentationSelectionManagerContext;
-(id)_controlBarItems;
-(void)layoutForUnobscuredBoundsChange;
-(void)setChromeViewController:(ChromeViewController *)arg1 ;
-(void)becomeCurrentModeWithViews:(id)arg1 animated:(char)arg2 state:(id)arg3 fromMode:(id)arg4 ;
-(void)resignCurrentModeAnimated:(char)arg1 toMode:(id)arg2 ;
-(void)animateSizeClassChange;
-(char)canDisplayTraffic;
-(char)shouldShowPlacePresentationOptionInCalloutForLabelMarker:(id)arg1 ;
-(char)shouldShowPlacePresentationOptionInCalloutForAnnotationView:(id)arg1 ;
-(void)_updateControlBarItemsAnimated:(char)arg1 ;
-(id)initWithProvider:(id)arg1 variant:(int)arg2 presentDirectionsSearchUI:(/*^block*/id)arg3 presentDirectionsStepsListUI:(/*^block*/id)arg4 completion:(/*^block*/id)arg5 ;
-(id)initWithProvider:(id)arg1 presentDirectionsSearchUI:(/*^block*/id)arg2 presentDirectionsStepsListUI:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 ;
-(void)noteProviderDataDidChange;
-(void)routePickingSuperseded;
-(void)_userDefaultsDidChange;
-(id)_mainChrome;
-(void)showDirectionsStepsListWithPositioning:(/*^block*/id)arg1 forSession:(id)arg2 ;
-(void)routePickingBar:(id)arg1 changedToVariant:(int)arg2 ;
-(void)routePickingBarChoseClear:(id)arg1 ;
-(void)routePickingBarChoseShare:(id)arg1 ;
-(void)routePickingBarChoseToShowDirectionsSheet:(id)arg1 ;
-(id)routePickingBarTextForDepartureLocation:(id)arg1 ;
-(int)routePickingBarAppearanceForDepartureLocation:(id)arg1 ;
-(id)routePickingBarTextForArrivalLocation:(id)arg1 ;
-(int)routePickingBarAppearanceForArrivalLocation:(id)arg1 ;
-(void)cancelRoutingApps;
-(char)_moveToShowingAppsIfPossible;
-(id)_bar;
-(Class)_classForSessionForCurrentState;
-(char)_shouldEnableMainActionButton;
-(id)_selectableVariantsForTransportTypes:(id)arg1 ;
-(void)_moveToSession:(id)arg1 withAnimation:(id)arg2 ;
-(void)_moveToLoadingWithAnimation:(id)arg1 ;
-(void)_restoreHiddenSelectionAnimated:(char)arg1 ;
-(void)_showRoutesForProviderChange;
-(void)_updateRouteAdvisoryDisplayAnimated:(char)arg1 ;
-(void)_moveToSession:(id)arg1 loading:(char)arg2 withAnimation:(id)arg3 ;
-(void)_invokeCompletionWithOutcome:(int)arg1 ;
-(void)_updateRouteSelectionIfNeeded;
-(void)_goToAllRoutesAnimated:(char)arg1 completion:(/*^block*/id)arg2 ;
-(void)_makeSessionResignCurrentIfNeededWithAnimation:(id)arg1 toMoveToSessionWithDetailsBarContent:(id)arg2 ;
-(void)_makeSessionBecomeCurrentIfNeededWithAnimation:(id)arg1 ;
-(void)_updateMainButton;
-(void)_updateRoutesDisplayOnMapAnimated:(char)arg1 ;
-(void)_resetMainButton;
-(void)_setSelectedRouteByDirectReference:(id)arg1 orByIndex:(unsigned)arg2 ;
-(void)_restoreUserSelectedMapType;
-(void)_handleTapToSwitchRoutes:(id)arg1 ;
-(void)_handleSelectionChange;
-(void)goToRoutes:(id)arg1 forSession:(id)arg2 animated:(char)arg3 completion:(/*^block*/id)arg4 ;
-(void)_goToRoutes:(id)arg1 animated:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)_hideSelectionAnimated:(char)arg1 ;
-(void)_updateModeControlSizeForOrientation:(int)arg1 ;
-(void)startSelectedRoute;
-(id)_routesForDisplayInTopBarField;
-(int)_appearanceForSearchResultIfAvailable:(id)arg1 ;
-(void)_showDirectionsStepsListWithPositioning:(/*^block*/id)arg1 ;
-(void)_moveToVariant:(int)arg1 ;
-(char)routePickingBar:(id)arg1 canShowDirectionsStepsListControlForVariant:(int)arg2 ;
-(char)_canHandleError:(id)arg1 ;
-(void)_moveToEditingRouteWithAnimation:(id)arg1 ;
-(void)session:(id)arg1 didSelectRoute:(id)arg2 ;
-(void)beginLoadingRoutesAfterSession:(id)arg1 fromWaypoint:(id)arg2 toWaypoint:(id)arg3 mode:(unsigned)arg4 routeHandle:(id)arg5 ;
-(CGSize)_routeDisplayPaddingSizeForRoutes:(id)arg1 ;
-(void)goToAllRoutesAnimated:(char)arg1 forSession:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setOverriddenViewMode:(int)arg1 forSession:(id)arg2 ;
-(void)setDisallowedViewModes:(id)arg1 preferredViewMode:(int)arg2 forSession:(id)arg3 ;
-(void)_directionsListMapTapped:(id)arg1 ;
-(void)routingAppsRequestedBySession:(id)arg1 ;
-(void)mapView:(id)arg1 canEnter3DModeDidChange:(char)arg2 ;
-(void)mapView:(id)arg1 didSelectLabelMarker:(id)arg2 ;
-(void)mapView:(id)arg1 regionWillChangeAnimated:(char)arg2 ;
-(void)mapView:(id)arg1 regionDidChangeAnimated:(char)arg2 ;
-(void)mapView:(id)arg1 didSelectAnnotationView:(id)arg2 ;
-(id<RoutePickingSelectionDelegate>)selectionDelegate;
-(void)setSelectionDelegate:(id<RoutePickingSelectionDelegate>)arg1 ;
-(void)dealloc;
-(char)shouldAutorotate;
-(unsigned)supportedInterfaceOrientations;
-(void)willRotateToInterfaceOrientation:(int)arg1 duration:(double)arg2 ;
-(void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2 ;
-(void)didRotateFromInterfaceOrientation:(int)arg1 ;
-(id)currentSession;
-(id<RoutePickingProvider>)provider;
-(char)canDisplayError:(id)arg1 ;
@end

