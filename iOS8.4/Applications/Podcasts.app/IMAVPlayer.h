/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 7:10:07 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Podcasts/Podcasts-Structs.h>
#import <Podcasts/AVAudioSessionDelegate.h>

@protocol IMAVPlayerDelegate, OS_dispatch_source;
@class NSURL, AVPlayer, AVAsset, IMVideoView, IMExternalVideoView, UIWindow, NSMutableArray, NSDictionary, NSTimer, NSObject, AVPlayerItem, NSString;

@interface IMAVPlayer : NSObject <AVAudioSessionDelegate> {

	NSURL* _lastPlayingURL;
	AVPlayer* _player;
	AVAsset* _asset;
	IMVideoView* _videoView;
	IMExternalVideoView* _externalVideoView;
	UIWindow* _externalVideoWindow;
	int _state;
	float _playbackRate;
	int _scale;
	int _loadState;
	double _endTime;
	id _endTimeObserver;
	id _periodicTimeObserver;
	NSMutableArray* _timeObservers;
	NSMutableArray* _observingTimes;
	char _timeObserverNeedsUpdate;
	NSDictionary* _metaData;
	float _volume;
	int _loops;
	double _lastSeekingTime;
	double _lastSeekedTime;
	double _preloadingTime;
	double _lastTime;
	char _seeking;
	char _seekForward;
	char _playbackPending;
	char _wasPlaying;
	char _scrubbing;
	NSTimer* _hdcpTimer;
	NSTimer* _seekTimer;
	id<IMAVPlayerDelegate> _delegate;
	struct {
		unsigned delegateStateChanged : 1;
		unsigned delegateErrorDidOccur : 1;
		unsigned delegateMediaTypeAvailable : 1;
		unsigned delegateDurationAvailable : 1;
		unsigned delegateCallbackForTime : 1;
		unsigned delegateLoadStateChanged : 1;
		unsigned delegatePeriodicUpdate : 1;
		unsigned delegateHasDidChangePlayerItem : 1;
		unsigned delegateHasDidStopPlayerItem : 1;
		unsigned delegateHasDidEndedPlayerItem : 1;
		unsigned delegateHasShouldPlayMore : 1;
		unsigned delegateLoadedDurationChanged : 1;
	}  _delegateFlags;
	unsigned _backgroundTask;
	NSObject*<OS_dispatch_source> _fadeOutTimer;
	char _externalDisplay;
	char _useFullExternalScreen;
	AVPlayerItem* _pausedItem;
	int _playbackSpeed;
	double _cachedDuration;

}

@property (assign,nonatomic) char shouldEnforceHDCP; 
@property (assign,nonatomic) int state;                                    //@synthesize state=_state - In the implementation block
@property (assign,nonatomic) int loadState;                                //@synthesize loadState=_loadState - In the implementation block
@property (assign,nonatomic) int scale;                                    //@synthesize scale=_scale - In the implementation block
@property (assign,nonatomic) int playbackSpeed;                            //@synthesize playbackSpeed=_playbackSpeed - In the implementation block
@property (assign,nonatomic) double currentTime; 
@property (nonatomic,readonly) double duration; 
@property (assign,nonatomic) double cachedDuration;                        //@synthesize cachedDuration=_cachedDuration - In the implementation block
@property (nonatomic,readonly) double loadedDuration; 
@property (nonatomic,readonly) AVPlayerItem * currentItem; 
@property (assign,nonatomic) id<IMAVPlayerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) IMVideoView * videoView;                    //@synthesize videoView=_videoView - In the implementation block
@property (nonatomic,retain) AVAsset * asset;                              //@synthesize asset=_asset - In the implementation block
@property (assign,nonatomic) NSURL * assetURL; 
@property (assign,nonatomic) double endTime;                               //@synthesize endTime=_endTime - In the implementation block
@property (nonatomic,retain) NSDictionary * metaData;                      //@synthesize metaData=_metaData - In the implementation block
@property (nonatomic,readonly) char airplayVideoActive; 
@property (nonatomic,readonly) char externalDisplay;                       //@synthesize externalDisplay=_externalDisplay - In the implementation block
@property (assign,nonatomic) int loops;                                    //@synthesize loops=_loops - In the implementation block
@property (assign,nonatomic) char scrubbing;                               //@synthesize scrubbing=_scrubbing - In the implementation block
@property (assign,nonatomic) char useFullExternalScreen;                   //@synthesize useFullExternalScreen=_useFullExternalScreen - In the implementation block
@property (nonatomic,retain) AVPlayerItem * pausedItem;                    //@synthesize pausedItem=_pausedItem - In the implementation block
@property (nonatomic,retain) NSURL * lastPlayingURL;                       //@synthesize lastPlayingURL=_lastPlayingURL - In the implementation block
@property (nonatomic,retain) AVPlayer * player;                            //@synthesize player=_player - In the implementation block
@property (nonatomic,retain) id periodicTimeObserver;                      //@synthesize periodicTimeObserver=_periodicTimeObserver - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(float)rateForPlaybackSpeed:(int)arg1 ;
+(int)playbackSpeedForRate:(float)arg1 ;
+(id)sharedPlayer;
-(char)airplayVideoActive;
-(char)externalDisplay;
-(AVPlayerItem *)pausedItem;
-(double)loadedDuration;
-(void)startSeek:(char)arg1 ;
-(void)setUseFullExternalScreen:(char)arg1 ;
-(void)pauseLoading:(char)arg1 ;
-(char)scrubbing;
-(void)updateVideoLayer;
-(void)onRouteChange:(id)arg1 ;
-(void)playerItemDidReachEnd:(id)arg1 ;
-(void)onScreenConnection:(id)arg1 ;
-(void)onScreenDisonnection:(id)arg1 ;
-(void)onClosedCaptioningChanged:(id)arg1 ;
-(void)resetPlayer:(id)arg1 ;
-(void)clearEndTimeObserver;
-(void)removeAllTimeObservers;
-(void)removePeriodicTimeObserver;
-(void)setMetaData:(NSDictionary *)arg1 ;
-(void)setPausedItem:(AVPlayerItem *)arg1 ;
-(void)clearExternalDisplay;
-(void)updatePlayer;
-(void)setLastPlayingURL:(NSURL *)arg1 ;
-(void)setLoadState:(int)arg1 ;
-(void)beginBackgroundTask;
-(void)updateTimeObservers;
-(void)seekFinished:(double)arg1 ;
-(void)cancelSeek;
-(void)sendItemStoppedNotification;
-(void)onSeekTimer:(id)arg1 ;
-(void)updateNowPlayingInfo;
-(void)fadeOutWithDuration:(double)arg1 completion:(/*^block*/id)arg2 ;
-(void)updateScale;
-(void)addPeriodicTimeObserver;
-(void)createExternalDisplayOnScreen:(id)arg1 ;
-(void)stopObservingPlayerItem:(id)arg1 ;
-(void)clearTimeObservers;
-(void)playFrom:(double)arg1 ;
-(void)updateSeekTime:(double)arg1 ;
-(void)sendItemEndedNotification;
-(void)sendPeriodicTimeEvent:(double)arg1 duration:(double)arg2 finished:(char)arg3 ;
-(void)forceTriggerTimeObserverAt:(double)arg1 ;
-(void)setCachedDuration:(double)arg1 ;
-(double)cachedDuration;
-(void)addCMTimeObserver:(SCD_Struct_MT3)arg1 ;
-(void)removeCMTimeObserver:(SCD_Struct_MT3)arg1 ;
-(void)setupEndTimeObserver;
-(void)setupTimeObserver:(id)arg1 ;
-(void)triggerTimeObserverAt:(id)arg1 ;
-(void)_resetHelper:(char)arg1 ;
-(void)setAssetURL:(id)arg1 withStartTime:(double)arg2 ;
-(char)playbackPending;
-(void)addTimeObserver:(double)arg1 ;
-(id)stillFrameAt:(double)arg1 maxSize:(CGSize)arg2 scale:(float)arg3 ;
-(NSURL *)lastPlayingURL;
-(char)useFullExternalScreen;
-(void)hdcpTimer:(id)arg1 ;
-(void)setScrubbing:(char)arg1 ;
-(void)sleep;
-(int)loadState;
-(void)play;
-(void)endSeek;
-(void)setShouldEnforceHDCP:(char)arg1 ;
-(char)shouldEnforceHDCP;
-(void)beginInterruption;
-(void)endInterruptionWithFlags:(unsigned)arg1 ;
-(IMVideoView *)videoView;
-(int)loops;
-(void)setLoops:(int)arg1 ;
-(void)setEndTime:(double)arg1 ;
-(int)playbackSpeed;
-(void)setPlaybackSpeed:(int)arg1 ;
-(void)setCurrentTime:(double)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id<IMAVPlayerDelegate>)arg1 ;
-(id)init;
-(id<IMAVPlayerDelegate>)delegate;
-(int)state;
-(double)duration;
-(void)setState:(int)arg1 ;
-(int)scale;
-(void)stop;
-(void)setScale:(int)arg1 ;
-(AVPlayerItem *)currentItem;
-(void)fadeOutWithDuration:(double)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)fadeOut;
-(AVAsset *)asset;
-(void)setAsset:(AVAsset *)arg1 ;
-(void)pause;
-(char)isVideo;
-(void)cancelFadeOut;
-(void)togglePlayPause;
-(NSURL *)assetURL;
-(void)resumeLoading;
-(NSDictionary *)metaData;
-(id)periodicTimeObserver;
-(void)setPeriodicTimeObserver:(id)arg1 ;
-(void)setAssetURL:(NSURL *)arg1 ;
-(double)endTime;
-(void)removeTimeObserver:(double)arg1 ;
-(void)setPlayer:(AVPlayer *)arg1 ;
-(double)currentTime;
-(AVPlayer *)player;
-(char)isPlaying;
-(void)endBackgroundTask;
@end

