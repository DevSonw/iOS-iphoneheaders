/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 7:10:01 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /Applications/Podcasts.app/Podcasts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSObject, NSError, NSString, IMTaskAssertion, NSMutableArray;

@interface IMAsynchronousTask : NSObject {

	NSObject*<OS_dispatch_queue> _handlerQueue;
	NSObject*<OS_dispatch_queue> _queue;
	NSObject*<OS_dispatch_source> _timeoutTimer;
	char _taskInvalidationDisabled;
	double _timeout;
	int _cancelType;
	/*^block*/id _finishedHandler;
	/*^block*/id _expirationHandler;
	id _result;
	NSError* _error;
	NSString* _debugDescription;
	IMTaskAssertion* _taskAssertion;
	NSMutableArray* _completions;

}

@property (nonatomic,copy) id finishedHandler;                             //@synthesize finishedHandler=_finishedHandler - In the implementation block
@property (nonatomic,copy) id expirationHandler;                           //@synthesize expirationHandler=_expirationHandler - In the implementation block
@property (nonatomic,retain) id result;                                    //@synthesize result=_result - In the implementation block
@property (nonatomic,retain) NSError * error;                              //@synthesize error=_error - In the implementation block
@property (assign,nonatomic) int cancelType;                               //@synthesize cancelType=_cancelType - In the implementation block
@property (nonatomic,copy) NSString * debugDescription;                    //@synthesize debugDescription=_debugDescription - In the implementation block
@property (nonatomic,retain) IMTaskAssertion * taskAssertion;              //@synthesize taskAssertion=_taskAssertion - In the implementation block
@property (nonatomic,retain) NSMutableArray * completions;                 //@synthesize completions=_completions - In the implementation block
-(void)setDebugDescription:(NSString *)arg1 ;
-(void)_invalidateTimer;
-(void)dealloc;
-(id)description;
-(NSString *)debugDescription;
-(void)invalidate;
-(id)result;
-(NSError *)error;
-(void)setResult:(id)arg1 ;
-(void)setFinishedHandler:(id)arg1 ;
-(id)finishedHandler;
-(void)setError:(NSError *)arg1 ;
-(void)addTaskCompletionBlock:(/*^block*/id)arg1 ;
-(id)initWithHandlerQueue:(id)arg1 timeout:(double)arg2 debugDescription:(id)arg3 ;
-(void)setExpirationHandler:(id)arg1 ;
-(void)invokeTaskCompletionBlocksWithBlock:(/*^block*/id)arg1 ;
-(void)finishTaskOperationWithResult:(id)arg1 error:(id)arg2 ;
-(void)beginTaskOperation;
-(int)cancelType;
-(void)setCancelType:(int)arg1 ;
-(void)_onQueueFireExpirationHandlerIfNecesary;
-(id)expirationHandler;
-(void)setTaskAssertion:(IMTaskAssertion *)arg1 ;
-(void)_invalidateAssertion:(char)arg1 ;
-(void)endTaskOperation;
-(IMTaskAssertion *)taskAssertion;
-(NSMutableArray *)completions;
-(void)setCompletions:(NSMutableArray *)arg1 ;
@end

