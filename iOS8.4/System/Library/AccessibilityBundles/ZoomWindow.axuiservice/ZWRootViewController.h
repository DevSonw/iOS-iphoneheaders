/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:15:40 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/AccessibilityBundles/ZoomWindow.axuiservice/ZoomWindow
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <ZoomWindow/ZoomWindow-Structs.h>
#import <UIKit/UIViewController.h>
#import <ZoomWindow/ZWMenuViewControllerDelegate.h>
#import <ZoomWindow/ZWZoomSlugViewControllerDelegate.h>
#import <ZoomWindow/ZOTFullscreenZoomHandlerDelegate.h>
#import <ZoomWindow/ZWEventProcessorDelegate.h>
#import <ZoomWindow/ZWZoomPIPLensViewControllerDelegate.h>
#import <UIKit/UIPopoverControllerDelegate.h>
#import <ZoomWindow/AXUIViewControllerReachabilityHandler.h>

@protocol AXUIService, OS_dispatch_queue;
@class CADisplayLink, NSMutableSet, AXTimer, UIView, ZWAlertManager, ZWKeyboardContext, AXAssertion, ZWZoomLensViewController, ZWZoomPIPLensViewController, NSLayoutConstraint, ZWZoomFullscreenLensViewController, ZWZoomSlugViewController, ZWMenuViewController, UIPopoverController, ZWEventProcessor, NSObject, NSString;

@interface ZWRootViewController : UIViewController <ZWMenuViewControllerDelegate, ZWZoomSlugViewControllerDelegate, ZOTFullscreenZoomHandlerDelegate, ZWEventProcessorDelegate, ZWZoomPIPLensViewControllerDelegate, UIPopoverControllerDelegate, AXUIViewControllerReachabilityHandler> {

	CGPoint _lensDeltaSinceInitialMove;
	double _lastMenuDismissalTime;
	double _lastTypingFocusChangeTime;
	double _lastDeviceUnlockTime;
	BOOL _cachedIsVoiceOverRunning;
	id _voiceOverStatusChangedNotificationObserverToken;
	SCD_Struct_ZW5 _eventUIContext;
	BOOL _validatePanOffsetWithFullscreen;
	BOOL _usingRelativePushPanning;
	CGPoint _fullScreenZoomStartPosition;
	CGPoint _fullScreenZoomStartOffset;
	double _fullScreenZoomVelocity;
	CGPoint _distanceAvailable;
	BOOL _careBorderX;
	BOOL _careBorderY;
	double _lastUpdateVelocityTime;
	CADisplayLink* _movementTimer;
	BOOL _isBlockingShowNotifications;
	BOOL _isBlockingControlCenter;
	NSMutableSet* _zoomListeners;
	AXTimer* _zoomListenerUpdate;
	BOOL _zoomWasUnzoomedDueToAppTransition;
	id<AXUIService> _axuiService;
	UIView* _containerView;
	ZWAlertManager* _zoomAlertManager;
	double _reachabilityOffset;
	ZWKeyboardContext* _kbContext;
	AXAssertion* _disableSystemGesturesAssertionLensOnEdge;
	ZWZoomLensViewController* _activeLensViewController;
	ZWZoomPIPLensViewController* _pipLensViewController;
	NSLayoutConstraint* _lensDragXConstraint;
	NSLayoutConstraint* _lensDragYConstraint;
	NSLayoutConstraint* _lensWidthConstraint;
	NSLayoutConstraint* _lensHeightConstraint;
	unsigned long long _pipLensEdgeMask;
	ZWZoomFullscreenLensViewController* _fullscreenLensViewController;
	ZWZoomSlugViewController* _slugViewController;
	NSLayoutConstraint* _slugRingDragXConstraint;
	NSLayoutConstraint* _slugRingDragYConstraint;
	unsigned long long _slugEdgeMask;
	ZWMenuViewController* _menuViewController;
	UIPopoverController* _menuPopoverController;
	AXTimer* _idleTouchTimer;
	ZWEventProcessor* _eventManager;
	NSObject*<OS_dispatch_queue> _cachedValuesSerialQueue;
	UIView* _debugFocusView;

}

@property (assign,nonatomic,__weak) id<AXUIService> axuiService;                                             //@synthesize axuiService=_axuiService - In the implementation block
@property (getter=isZoomLensVisible,nonatomic,readonly) BOOL zoomLensVisible; 
@property (getter=isZoomSlugVisible,nonatomic,readonly) BOOL zoomSlugVisible; 
@property (nonatomic,retain) UIView * containerView;                                                         //@synthesize containerView=_containerView - In the implementation block
@property (nonatomic,retain) ZWAlertManager * zoomAlertManager;                                              //@synthesize zoomAlertManager=_zoomAlertManager - In the implementation block
@property (assign,nonatomic) BOOL zoomWasUnzoomedDueToAppTransition;                                         //@synthesize zoomWasUnzoomedDueToAppTransition=_zoomWasUnzoomedDueToAppTransition - In the implementation block
@property (assign,nonatomic) double reachabilityOffset;                                                      //@synthesize reachabilityOffset=_reachabilityOffset - In the implementation block
@property (nonatomic,retain) ZWKeyboardContext * kbContext;                                                  //@synthesize kbContext=_kbContext - In the implementation block
@property (nonatomic,retain) AXAssertion * disableSystemGesturesAssertionLensOnEdge;                         //@synthesize disableSystemGesturesAssertionLensOnEdge=_disableSystemGesturesAssertionLensOnEdge - In the implementation block
@property (nonatomic,retain) ZWZoomLensViewController * activeLensViewController;                            //@synthesize activeLensViewController=_activeLensViewController - In the implementation block
@property (nonatomic,retain) ZWZoomPIPLensViewController * pipLensViewController;                            //@synthesize pipLensViewController=_pipLensViewController - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * lensDragXConstraint;                                       //@synthesize lensDragXConstraint=_lensDragXConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * lensDragYConstraint;                                       //@synthesize lensDragYConstraint=_lensDragYConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * lensWidthConstraint;                                       //@synthesize lensWidthConstraint=_lensWidthConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * lensHeightConstraint;                                      //@synthesize lensHeightConstraint=_lensHeightConstraint - In the implementation block
@property (assign,nonatomic) unsigned long long pipLensEdgeMask;                                             //@synthesize pipLensEdgeMask=_pipLensEdgeMask - In the implementation block
@property (nonatomic,retain) ZWZoomFullscreenLensViewController * fullscreenLensViewController;              //@synthesize fullscreenLensViewController=_fullscreenLensViewController - In the implementation block
@property (nonatomic,retain) ZWZoomSlugViewController * slugViewController;                                  //@synthesize slugViewController=_slugViewController - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * slugRingDragXConstraint;                                   //@synthesize slugRingDragXConstraint=_slugRingDragXConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * slugRingDragYConstraint;                                   //@synthesize slugRingDragYConstraint=_slugRingDragYConstraint - In the implementation block
@property (assign,nonatomic) unsigned long long slugEdgeMask;                                                //@synthesize slugEdgeMask=_slugEdgeMask - In the implementation block
@property (nonatomic,retain) ZWMenuViewController * menuViewController;                                      //@synthesize menuViewController=_menuViewController - In the implementation block
@property (nonatomic,retain) UIPopoverController * menuPopoverController;                                    //@synthesize menuPopoverController=_menuPopoverController - In the implementation block
@property (nonatomic,retain) AXTimer * idleTouchTimer;                                                       //@synthesize idleTouchTimer=_idleTouchTimer - In the implementation block
@property (nonatomic,retain) ZWEventProcessor * eventManager;                                                //@synthesize eventManager=_eventManager - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> cachedValuesSerialQueue;                           //@synthesize cachedValuesSerialQueue=_cachedValuesSerialQueue - In the implementation block
@property (nonatomic,retain) UIView * debugFocusView;                                                        //@synthesize debugFocusView=_debugFocusView - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)handleSubstantialAppTransition;
-(void)handleDeviceWasUnlocked;
-(void)hideZoomSlugAndLens:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)handleLockButtonWasPressed;
-(ZWZoomFullscreenLensViewController *)fullscreenLensViewController;
-(void)_updateKeyboardFrame:(CGRect)arg1 ;
-(void)_resizeZoomLensByDelta:(CGPoint)arg1 ;
-(void)setPipLensViewController:(ZWZoomPIPLensViewController *)arg1 ;
-(NSLayoutConstraint *)lensDragXConstraint;
-(void)_disableZoomWindowHitTesting;
-(NSLayoutConstraint *)slugRingDragYConstraint;
-(void)setPipLensEdgeMask:(unsigned long long)arg1 ;
-(void)setLensWidthConstraint:(NSLayoutConstraint *)arg1 ;
-(void)setSlugViewController:(ZWZoomSlugViewController *)arg1 ;
-(void)setLensDragXConstraint:(NSLayoutConstraint *)arg1 ;
-(CGSize)_lensMinimumSize;
-(BOOL)isZoomSlugVisible;
-(ZWAlertManager *)zoomAlertManager;
-(BOOL)_isZoomFactorAtMinimum:(double)arg1 ;
-(NSLayoutConstraint *)lensDragYConstraint;
-(ZWZoomPIPLensViewController *)pipLensViewController;
-(void)_updateSlugLayoutAnimated:(BOOL)arg1 ;
-(void)_updateSystemGestureBlockers;
-(void)_beginObservingValuesForLens:(id)arg1 ;
-(void)setSlugEdgeMask:(unsigned long long)arg1 ;
-(NSLayoutConstraint *)slugRingDragXConstraint;
-(void)_menuDidDisappear;
-(CGSize)_lensMaximumSize;
-(NSLayoutConstraint *)lensHeightConstraint;
-(void)_zoomMovementHeartbeat;
-(ZWZoomLensViewController *)activeLensViewController;
-(void)setDebugFocusView:(UIView *)arg1 ;
-(void)_dismissMenuAnimated:(BOOL)arg1 ;
-(ZWMenuViewController *)menuViewController;
-(NSLayoutConstraint *)lensWidthConstraint;
-(CGRect)_determineSuitableLensFrame;
-(void)_exitStandbyIfNecessary;
-(void)setMenuViewController:(ZWMenuViewController *)arg1 ;
-(void)_enableZoomWindowHitTesting;
-(ZWZoomSlugViewController *)slugViewController;
-(void)setMenuPopoverController:(UIPopoverController *)arg1 ;
-(void)_initializeEventUIContext;
-(BOOL)_isZoomedToMinimum;
-(void)setActiveLensViewController:(ZWZoomLensViewController *)arg1 ;
-(void)_updateLensLayout;
-(BOOL)_lensIsNearTopOrBottomOfScreen;
-(NSObject*<OS_dispatch_queue>)cachedValuesSerialQueue;
-(void)setLensHeightConstraint:(NSLayoutConstraint *)arg1 ;
-(UIPopoverController *)menuPopoverController;
-(CGSize)_lensDefaultSize;
-(void)setSlugRingDragXConstraint:(NSLayoutConstraint *)arg1 ;
-(void)setIdleTouchTimer:(AXTimer *)arg1 ;
-(void)_endObservingValuesForLens:(id)arg1 ;
-(void)setSlugRingDragYConstraint:(NSLayoutConstraint *)arg1 ;
-(void)setLensDragYConstraint:(NSLayoutConstraint *)arg1 ;
-(id<AXUIService>)axuiService;
-(void)setAxuiService:(id<AXUIService>)arg1 ;
-(id)initWithAXUIService:(id)arg1 ;
-(void)_updateZoomListeners;
-(void)setCachedValuesSerialQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)_loadZoomTouchExtras;
-(void)_initializeZoomSettingsIfNeeded;
-(void)menuDidDisappear:(id)arg1 ;
-(BOOL)inStandByForMenuViewController:(id)arg1 ;
-(void)setEventManager:(ZWEventProcessor *)arg1 ;
-(void)setZoomAlertManager:(ZWAlertManager *)arg1 ;
-(void)handleKeyboardWillHide;
-(BOOL)isZoomLensVisible;
-(void)handleHomeButtonWasPressed;
-(void)showZoomSlugAndLens:(BOOL)arg1 ;
-(double)zoomLevelWithFullscreenEventHandler:(id)arg1 ;
-(SCD_Struct_ZW6)currentUIContextForEventProcessor:(id)arg1 ;
-(void)disableZoomWindowHitTestingWithEventProcessor:(id)arg1 ;
-(long long)currentInterfaceOrientationForEventProcessor:(id)arg1 ;
-(void)eventProcessor:(id)arg1 didGetFirstTouchAtLocation:(CGPoint)arg2 ;
-(void)lastFingerWasLiftedWithEventProcessor:(id)arg1 ;
-(void)handleKeyboardWillAppearWithFrame:(CGRect)arg1 ;
-(void)zoomListenerRegistered:(BOOL)arg1 clientIdentifier:(id)arg2 ;
-(void)handleFocusChangedWithType:(long long)arg1 rect:(CGRect)arg2 keyboardFrame:(CGRect)arg3 contextId:(unsigned)arg4 ;
-(void)handleSettingsAppDidUpdatePreferredLensMode:(id)arg1 ;
-(void)handleSettingsAppDidUpdateIdleSlugOpacity:(double)arg1 ;
-(void)handleAppActivationAnimationWillBegin;
-(void)handleAppDeactivationAnimationWillBegin;
-(void)handleAppSwitcherRevealAnimationWillBegin;
-(void)handleAppDidEnterBackgroundWithID:(id)arg1 ;
-(void)handleAppDidBecomeActiveWithID:(id)arg1 initialKeyboardFrame:(CGRect)arg2 ;
-(double)handleAppActivationAnimationDelay;
-(double)handleAppDeactivationAnimationDelay;
-(double)handleAppSwitcherRevealAnimationDelay;
-(void)zoomLensViewController:(id)arg1 willBeginMovingLens:(id)arg2 ;
-(void)zoomLensViewController:(id)arg1 didMoveLens:(id)arg2 withDelta:(CGPoint)arg3 ;
-(void)zoomLensViewController:(id)arg1 didFinishMovingLens:(id)arg2 ;
-(AXTimer *)idleTouchTimer;
-(ZWKeyboardContext *)kbContext;
-(unsigned long long)slugEdgeMask;
-(unsigned long long)pipLensEdgeMask;
-(ZWEventProcessor *)eventManager;
-(UIView *)debugFocusView;
-(void)menuDidAppear:(id)arg1 ;
-(void)setKbContext:(ZWKeyboardContext *)arg1 ;
-(BOOL)fullscreenEventHandler:(id)arg1 autopanShouldStartWithEvent:(id)arg2 speedFactor:(double*)arg3 initialSingleFingerLocation:(CGPoint)arg4 ;
-(BOOL)shouldHideGrabbersWithZoomLensViewController:(id)arg1 ;
-(void)zoomLensViewController:(id)arg1 grabberDidReceiveTap:(id)arg2 ;
-(BOOL)isZoomMovingWithVelocityWithFullscreenEventHandler:(id)arg1 ;
-(void)stopZoomMovementWithVelocityWithFullscreenEventHandler:(id)arg1 ;
-(void)endZoomMovementWithFullscreenEventHandler:(id)arg1 ;
-(void)fullscreenEventHandler:(id)arg1 updateZoomMovementWithPoint:(CGPoint)arg2 ;
-(void)fullscreenEventHandler:(id)arg1 continueZoomMovementWithVelocity:(double)arg2 angle:(double)arg3 ;
-(void)fullscreenEventHandler:(id)arg1 didReceiveThreeFingerSingleTapAtLocation:(CGPoint)arg2 ;
-(void)fullscreenEventHandler:(id)arg1 didReceiveThreeFingerDoubleTapAtLocation:(CGPoint)arg2 ;
-(void)blockNotificationCenterGestureIfNeededWithFullscreenEventHandler:(id)arg1 ;
-(void)blockControlCenterGestureIfNeededWithFullscreenEventHandler:(id)arg1 ;
-(void)fullscreenEventHandler:(id)arg1 didReceiveThreeFingerTripleTapAtLocation:(CGPoint)arg2 ;
-(void)updateStoredZoomedLevelWithFullscreenEventHandler:(id)arg1 ;
-(double)storedZoomLevelWithFullscreenEventHandler:(id)arg1 ;
-(CGPoint)zoomLocationWithFullscreenEventHandler:(id)arg1 ;
-(void)fullscreenEventHandler:(id)arg1 storeZoomLevel:(double)arg2 location:(CGPoint)arg3 zoomed:(BOOL)arg4 forKey:(id)arg5 ;
-(void)fullscreenEventHandler:(id)arg1 setUsingRelativePushPanning:(BOOL)arg2 ;
-(int)interfaceOrientationWithFullscreenEventHandler:(id)arg1 ;
-(BOOL)fullscreenEventHandler:(id)arg1 autopanWithLocation:(CGPoint)arg2 initialSingleFingerLocation:(CGPoint)arg3 distance:(double)arg4 animationDuration:(double)arg5 ;
-(BOOL)usingRelativePushPanningWithFullscreenEventHandler:(id)arg1 ;
-(void)fullscreenEventHandler:(id)arg1 setZoomLevel:(double)arg2 duration:(double)arg3 ;
-(BOOL)inFullscreenModeForMenuViewController:(id)arg1 ;
-(double)zoomFactorForMenuViewController:(id)arg1 ;
-(void)toggleLensVisibilityWithMenuViewController:(id)arg1 ;
-(void)menuViewController:(id)arg1 applyNextLensModeWithCompletion:(/*^block*/id)arg2 ;
-(void)toggleLensResizeModeWithMenuViewController:(id)arg1 ;
-(BOOL)toggleSlugVisibilityWithMenuViewController:(id)arg1 ;
-(void)menuViewController:(id)arg1 adjustZoomFactor:(double)arg2 ;
-(void)menuViewController:(id)arg1 finishedAdjustingZoomFactor:(double)arg2 ;
-(void)menuViewController:(id)arg1 didChooseLensEffect:(id)arg2 ;
-(void)setFullscreenLensViewController:(ZWZoomFullscreenLensViewController *)arg1 ;
-(void)setDisableSystemGesturesAssertionLensOnEdge:(AXAssertion *)arg1 ;
-(void)_transitionToLensForMode:(id)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)_transitionToLens:(id)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)_focusLensOnRect:(CGRect)arg1 panLensContent:(BOOL)arg2 recentreLens:(BOOL)arg3 animated:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(void)_unzoomDueToAppTransitionIfNeeded;
-(void)_rezoomDueToAppTransitionIfNeeded;
-(void)_moveZoomItemWithController:(id)arg1 byDelta:(CGPoint)arg2 animated:(BOOL)arg3 userInitiated:(BOOL)arg4 ;
-(void)_applyInitialConstraintsForLensViewController:(id)arg1 ;
-(CGPoint)_slugOriginForNormalizedPosition:(CGPoint)arg1 ;
-(CGPoint)_slugNormalizedPositionForCurrentPosition;
-(void)_updateLensEdgeMaskForZoomController:(id)arg1 ;
-(AXAssertion *)disableSystemGesturesAssertionLensOnEdge;
-(void)setZoomWasUnzoomedDueToAppTransition:(BOOL)arg1 ;
-(BOOL)zoomWasUnzoomedDueToAppTransition;
-(void)_presentMenuWithAnchorView:(id)arg1 animated:(BOOL)arg2 ;
-(void)_transitionToNextLensModeAnimated:(BOOL)arg1 saveAsNewPreferredLensMode:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(double)_interfaceAwareAdjustedAngleForScreenAngle:(double)arg1 ;
-(BOOL)_shouldBlockShowNotificationGesture;
-(BOOL)_shouldBlockShowControlCenterGesture;
-(void)_zoomMovementHeartbeat:(double)arg1 fullscreenEventHandler:(id)arg2 ;
-(void)willBeginAutopanningLensWithSlugViewController:(id)arg1 ;
-(void)didFinishAutopanningLensWithSlugViewController:(id)arg1 ;
-(void)zoomSlugViewController:(id)arg1 wantsToAutomoveLenswithDelta:(CGPoint)arg2 ;
-(void)slugWasSingleTappedWithSlugViewController:(id)arg1 ;
-(void)slugWasDoubleTappedWithSlugViewController:(id)arg1 ;
-(BOOL)shouldBeginAutopanningLensWithSlugViewController:(id)arg1 ;
-(void)zoomSlugViewController:(id)arg1 didDragSlug:(id)arg2 withDelta:(CGPoint)arg3 ;
-(void)eventProcessor:(id)arg1 didGet3FingerDragWithDelta:(CGPoint)arg2 ;
-(BOOL)shouldShowSlugWithSlugViewController:(id)arg1 ;
-(void)dismissMenuWithMenuViewController:(id)arg1 ;
-(double)_calculateDurationForVelocity:(double)arg1 ;
-(double)reachabilityScaleFactor;
-(void)setZoomFactor:(double)arg1 ;
-(double)zoomFactor;
-(void)dealloc;
-(UIView *)containerView;
-(void)setContainerView:(UIView *)arg1 ;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)loadView;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidLoad;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(BOOL)popoverControllerShouldDismissPopover:(id)arg1 ;
-(void)setReachabilityOffset:(double)arg1 ;
-(BOOL)hostingWindowShouldMoveForReachability;
-(void)handleReachabilityToggled:(double)arg1 ;
-(void)didAnimateForReachabilityToOffset:(double)arg1 ;
-(double)reachabilityOffset;
-(CGPoint)zoomPanOffset;
-(void)setZoomPanOffset:(CGPoint)arg1 ;
@end

