/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:24:33 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <PhotoLibrary/PhotoLibrary-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol PLImageAdjustmentViewDelegate;
@class PLCropModel, UIImageView, PLCropOverlayLayer, UIImage, NSTimer, NSString;

@interface PLImageAdjustmentView : UIView <UIGestureRecognizerDelegate> {

	PLCropModel* _cropModel;
	UIImageView* _imageView;
	PLCropOverlayLayer* _overlayLayer;
	id<PLImageAdjustmentViewDelegate> _delegate;
	UIImage* _editedImage;
	UIEdgeInsets _cropInsets;
	int _gestureCount;
	CGAffineTransform _originalTransform;
	CGRect _imageCropRect;
	CGRect _previousImageCropRect;
	double _cropAngle;
	double _previousCropAngle;
	double _photoViewScale;
	double _sourceAspectRatio;
	unsigned _currentCropAction;
	NSTimer* _manualCropTimer;
	double _autoCropScale;
	double _animationDuration;
	unsigned _isCropMode : 1;
	unsigned _isAdjustingCropRect : 1;
	unsigned _isAnimating : 1;
	unsigned _canRotate : 1;
	unsigned _needsRecenterImage : 1;
	unsigned _delegateWillCropImage : 1;
	unsigned _delegateDidCropImage : 1;
	unsigned _delegateDidTouchImage : 1;

}

@property (nonatomic,retain) UIImage * editedImage; 
@property (assign,nonatomic) id<PLImageAdjustmentViewDelegate> delegate; 
@property (assign,nonatomic) UIEdgeInsets cropInsets; 
@property (assign,getter=isCropMode,nonatomic) BOOL cropMode; 
@property (assign,nonatomic) CGSize aspectRatio; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(CGRect)cropRect;
-(void)_updateGestureRecognizers;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id<PLImageAdjustmentViewDelegate>)arg1 ;
-(void)layoutSubviews;
-(id<PLImageAdjustmentViewDelegate>)delegate;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(void)reset;
-(void)commitAnimations;
-(id)imageView;
-(void)_updateImageView;
-(void)setCropMode:(BOOL)arg1 ;
-(double)rotationAngle;
-(void)setRotationAngle:(double)arg1 ;
-(void)beginAnimation:(double)arg1 ;
-(CGRect)overlayCropRect;
-(BOOL)isCropMode;
-(void)setCropInsets:(UIEdgeInsets)arg1 ;
-(BOOL)isDisplayingProgressIndicators;
-(void)removeProgressIndicators;
-(void)setEditedImage:(UIImage *)arg1 ;
-(void)replaceEditedImage:(id)arg1 ;
-(void)setCropRect:(CGRect)arg1 cropAngle:(double)arg2 ;
-(CGRect)previousCropRect;
-(double)cropAngle;
-(double)previousCropAngle;
-(CGPoint)convertPointToImage:(CGPoint)arg1 ;
-(void)displayProgressIndicatorAtLocation:(CGPoint)arg1 ;
-(void)removeProgressIndicatorAtLocation:(CGPoint)arg1 ;
-(void)showIndicatorAtPointInImage:(CGPoint)arg1 duration:(double)arg2 ;
-(UIImage *)editedImage;
-(BOOL)_isInCropGesture;
-(void)_updateOverlayCropRect;
-(CGRect)_maxOverlayCropRect;
-(void)rotate:(id)arg1 ;
-(void)scale:(id)arg1 ;
-(void)crop:(id)arg1 ;
-(void)_beginCropGesture:(id)arg1 ;
-(void)_endCropGesture:(id)arg1 ;
-(int)cropActionForPoint:(CGPoint)arg1 ;
-(void)_performCropAction:(int)arg1 location:(CGPoint)arg2 ;
-(void)_cropTimer:(id)arg1 ;
-(BOOL)_updateCropAngle;
-(BOOL)_updateCropRect;
-(CGPoint)convertPointFromImage:(CGPoint)arg1 ;
-(void)setNeedsRecenterImage;
-(double)computeScaleToFillRelativeToPointInImage:(CGPoint)arg1 ;
-(UIEdgeInsets)cropInsets;
-(double)_imageScale;
-(double)_minimumImageScale;
-(id)overlayLayer;
-(void)setAspectRatio:(CGSize)arg1 ;
-(CGSize)aspectRatio;
-(void)pan:(id)arg1 ;
-(void)touch:(id)arg1 ;
@end

