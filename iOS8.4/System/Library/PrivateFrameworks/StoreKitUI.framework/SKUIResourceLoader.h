/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:25:46 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <StoreKitUI/NSCacheDelegate.h>

@protocol SKUIResourceLoaderDelegate;
@class SKUIClientContext, NSOperationQueue, NSMutableDictionary, NSMapTable, NSCache, NSString;

@interface SKUIResourceLoader : NSObject <NSCacheDelegate> {

	SKUIClientContext* _clientContext;
	id<SKUIResourceLoaderDelegate> _delegate;
	NSOperationQueue* _operationQueue;
	NSMutableDictionary* _operationsByRequestID;
	NSMapTable* _requestsByCacheKey;
	NSCache* _resourcesByRequestID;

}

@property (nonatomic,readonly) SKUIClientContext * clientContext;                         //@synthesize clientContext=_clientContext - In the implementation block
@property (nonatomic,readonly) NSOperationQueue * operationQueue;                         //@synthesize operationQueue=_operationQueue - In the implementation block
@property (assign,nonatomic,__weak) id<SKUIResourceLoaderDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (getter=isIdle,nonatomic,readonly) BOOL idle; 
@property (assign,nonatomic) long long resourceCacheLimit; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)cache:(id)arg1 willEvictObject:(id)arg2 ;
-(void)setDelegate:(id<SKUIResourceLoaderDelegate>)arg1 ;
-(id)init;
-(id<SKUIResourceLoaderDelegate>)delegate;
-(NSOperationQueue *)operationQueue;
-(SKUIClientContext *)clientContext;
-(id)cachedResourceForRequestIdentifier:(unsigned long long)arg1 ;
-(id)initWithOperationQueue:(id)arg1 clientContext:(id)arg2 ;
-(void)setReason:(long long)arg1 forRequestWithIdentifier:(unsigned long long)arg2 ;
-(BOOL)loadResourceWithRequest:(id)arg1 reason:(long long)arg2 ;
-(BOOL)isIdle;
-(id)requestIdentifierForCacheKey:(id)arg1 ;
-(id)initWithOperationQueue:(id)arg1 ;
-(void)_finishLoadForRequest:(id)arg1 withResource:(id)arg2 ;
-(void)_sendDidIdleIfNecessary;
-(void)addResource:(id)arg1 forRequestIdentifier:(unsigned long long)arg2 ;
-(void)cancelAllRequests;
-(void)cancelRequestWithIdentifier:(unsigned long long)arg1 ;
-(void)removeAllCachedResources;
-(long long)resourceCacheLimit;
-(void)setResourceCacheLimit:(long long)arg1 ;
@end

