/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:26:34 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/VisualVoicemail.framework/VisualVoicemail
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


#import <VisualVoicemail/VisualVoicemail-Structs.h>
@class NSRecursiveLock, NSError, NSString, PCPersistentTimer;

@interface VVService : NSObject {

	NSRecursiveLock* _lock;
	unsigned _capabilities;
	int _mailboxUsage;
	double _trashCompactionAge;
	unsigned _unreadCount;
	unsigned _trashedCount;
	NSError* _passwordError;
	NSError* _activationError;
	NSString* _password;
	NSString* _passwordMailboxName;
	CFArrayRef _retryIntervals;
	PCPersistentTimer* _retryTimer;
	PCPersistentTimer* _trashCompactionTimer;
	PCPersistentTimer* _notificationFallbackTimer;
	CFDateRef _notificationFallbackWakeDate;
	CFDateRef _nextRetryWakeDate;
	CFDateRef _nextTrashCompactionWakeDate;
	int _retryIntervalIndex;
	unsigned _pmNotifier;
	IONotificationPortRef _pmNotifierPort;
	unsigned _pmRootPort;
	CFRunLoopSourceRef _pmRunLoopSource;
	id _carrierParameters;
	Class _notificationInterpreter;
	struct {
		unsigned offline : 1;
		unsigned subscribed : 1;
		unsigned initialSetupRequired : 1;
		unsigned fakeInitialSetup : 1;
		unsigned launchedWithFakeInitialSetup : 1;
		unsigned mwiState : 1;
		unsigned notificationFallbackEnabled : 1;
		unsigned capabilitiesLoaded : 1;
	}  _serviceFlags;
	BOOL _VVMDataConnectionAvailable;

}

@property (assign) BOOL VVMDataConnectionAvailable;              //@synthesize VVMDataConnectionAvailable=_VVMDataConnectionAvailable - In the implementation block
+(void)initialize;
+(id)sharedService;
+(BOOL)_lockedSharedServiceIsSubscribed;
+(void)_resetInsomniaState;
+(void)_suppressInsomniaState;
+(unsigned)_voicemailPowerAssertion;
+(void)_setInsomniaState:(BOOL)arg1 ;
+(void)_handleSIMChange;
+(BOOL)sharedServiceIsSubscribed;
+(void)setInsomniaEnabled:(BOOL)arg1 ;
-(double)trashCompactionAge;
-(BOOL)doTrashCompaction;
-(BOOL)shouldTrashCompactRecord:(void*)arg1 ;
-(void)removeAllRecords;
-(BOOL)isSubscribed;
-(void)setSubscribed:(BOOL)arg1 ;
-(void)dealloc;
-(id)init;
-(id)password;
-(void)setPassword:(id)arg1 ;
-(unsigned)capabilities;
-(unsigned)unreadCount;
-(CFStringRef)connectionServiceType;
-(void)setUnreadCount:(unsigned)arg1 ;
-(id)mailboxName;
-(void)reportError:(id)arg1 ;
-(void)kill;
-(void)setMessageWaiting:(BOOL)arg1 ;
-(void)clearRemoteUIDsForDetachedMessages;
-(void)cancelDelayedSynchronize;
-(void)cancelPasswordRequest;
-(void)cancelNotificationFallback;
-(void)cancelAutomatedTrashCompaction;
-(void)resetCounts;
-(BOOL)isVVMAvailableOverWiFi;
-(void)_setActivationError:(id)arg1 ;
-(void)setOnline:(BOOL)arg1 ;
-(void)_contextActivationFailed:(id)arg1 ;
-(void)_contextActivationSucceeded:(id)arg1 ;
-(void)handleDataContextDeactivated;
-(void)_updateOnlineStatusWithDataStatusDict:(CFDictionaryRef)arg1 ;
-(BOOL)sharedSubscriptionRequiresSetup;
-(BOOL)mailboxRequiresSetup;
-(void)setProvisionalPassword:(id)arg1 ;
-(void)_scheduleFallbackTimerIfNecessary;
-(int)mailboxUsage;
-(BOOL)shouldScheduleAutoTrashOnMailboxUsageChange;
-(void)scheduleAutomatedTrashCompaction;
-(BOOL)isOnline;
-(void)setTrashedCount:(unsigned)arg1 ;
-(void)_setOnline:(BOOL)arg1 fallbackMode:(BOOL)arg2 ;
-(BOOL)_isOfflineDueToRoamingWithDataStatusDict:(CFDictionaryRef)arg1 ;
-(BOOL)VVMDataConnectionAvailable;
-(void)synchronize:(BOOL)arg1 ;
-(void)_deregisterForPowerEventsIfNecessary;
-(BOOL)isMessageWaiting;
-(void)_deliverFallbackNotification;
-(void)_enterFallbackMode:(id)arg1 ;
-(void)_registerForPowerEventsIfNecessary;
-(void)_reactToIndicator;
-(BOOL)respectsMWINotifications;
-(BOOL)isInSync;
-(void)_cancelIndicatorAction;
-(Class)notificationInterpreterClass;
-(void)handleNotification:(id)arg1 isMWI:(BOOL)arg2 ;
-(id)passwordIgnoringSubscription:(BOOL)arg1 ;
-(void)displayPasswordRequestIfNecessary;
-(void)_attemptDelayedSynchronize;
-(CFArrayRef)_retryIntervals;
-(void)_attemptDelayedSynchronize:(id)arg1 ;
-(void)_scheduleAutomatedTrashCompaction;
-(BOOL)doesClientManageTrashCompaction;
-(void)_attemptScheduledTrashCompaction;
-(void)_cancelAutomatedTrashCompaction;
-(void)setMailboxRequiresSetup:(BOOL)arg1 ;
-(void)setMailboxUsage:(int)arg1 ;
-(unsigned)trashedCount;
-(void)updateCountsForChangedFlags:(unsigned)arg1 currentRecordFlags:(unsigned)arg2 ;
-(void)removeAllNonDetachedRecords;
-(void)updateLoggingSettings;
-(BOOL)isOfflineDueToRoaming;
-(void)_handleCallStatusChange:(CFDictionaryRef)arg1 ;
-(id)activationError;
-(void)clearActivationError;
-(void)handleIndicatorNotification:(CFDictionaryRef)arg1 ;
-(BOOL)isPasswordReady;
-(id)provisionalPassword;
-(void)handlePasswordRequestCancellation;
-(void)handlePasswordNotificationResponse:(id)arg1 ;
-(int)maximumGreetingDuration;
-(int)maximumRecordedNameDuration;
-(int)minimumPasswordLength;
-(int)maximumPasswordLength;
-(BOOL)passwordChangeRequiresEnteringOldPassword;
-(long long)mailboxGreetingType;
-(id)carrierParameterValueForKey:(id)arg1 ;
-(BOOL)taskOfTypeExists:(long long)arg1 ;
-(void)progressiveDataLengthsForRecord:(void*)arg1 expected:(unsigned*)arg2 current:(unsigned*)arg3 ;
-(BOOL)dataForRecordPending:(void*)arg1 progressiveLoadInProgress:(BOOL*)arg2 ;
-(BOOL)headerChangesPending;
-(BOOL)synchronizationPending;
-(BOOL)greetingFetchExistsProgressiveLoadInProgress:(BOOL*)arg1 ;
-(void)retrieveDataForRecord:(void*)arg1 ;
-(void)changePassword:(id)arg1 fromPassword:(id)arg2 ;
-(void)retrieveGreeting;
-(BOOL)greetingAvailable;
-(void)setGreetingType:(long long)arg1 withData:(id)arg2 duration:(unsigned)arg3 ;
-(void)moveRecordToTrash:(void*)arg1 ;
-(void)moveRecordFromTrash:(void*)arg1 ;
-(void)resetDelayedSynchronizationAttemptCount;
-(void)scheduleDelayedSynchronize;
-(void)setVVMDataConnectionAvailable:(BOOL)arg1 ;
@end

