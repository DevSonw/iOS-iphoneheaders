/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:23:56 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/NanoPassKit.framework/NanoPassKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <NanoPassKit/NanoPassKit-Structs.h>
@class NSObject, NSMutableDictionary, NSMutableArray, NSData, NSDictionary, NSArray;

@interface NPKGizmoDatabase : NSObject {

	sqlite3Ref _database;
	sqlite3_stmtRef _deleteStatement;
	sqlite3_stmtRef _insertStatement;
	sqlite3_stmtRef _insertDiffStatement;
	sqlite3_stmtRef _selectPassDataStatement;
	sqlite3_stmtRef _selectPassDiffStatement;
	sqlite3_stmtRef _updateDeletePendingStatment;
	NSObject*<OS_dispatch_queue> _dbQueue;
	BOOL _isInTransaction;
	NSMutableDictionary* _manifest;
	NSMutableArray* _passDescriptions;
	NSData* _libraryHash;
	int _externallyChangedBroadcasts;
	BOOL _observingFirstUnlockNotification;
	BOOL _sendingLocalNotifyDatabaseChanged;
	BOOL _needsMoreLocalNotifyDatabaseChanged;
	BOOL _passDBIsAvailable;

}

@property (readonly) NSData * libraryHash; 
@property (readonly) NSDictionary * manifestHashes; 
@property (readonly) NSArray * passDescriptions; 
@property (assign,nonatomic) BOOL passDBIsAvailable;                            //@synthesize passDBIsAvailable=_passDBIsAvailable - In the implementation block
@property (readonly) sqlite3Ref database; 
@property (readonly) sqlite3_stmtRef deleteStatement; 
@property (readonly) sqlite3_stmtRef insertStatement; 
@property (readonly) sqlite3_stmtRef selectPassDataStatement; 
@property (readonly) sqlite3_stmtRef selectPassDiffStatement; 
@property (readonly) sqlite3_stmtRef insertDiffStatement; 
@property (readonly) sqlite3_stmtRef updateDeletePendingStatement; 
+(id)sharedDatabase;
+(long long)maxDatabaseVersion;
-(sqlite3_stmtRef)insertStatement;
-(sqlite3Ref)database;
-(void)dealloc;
-(id)init;
-(NSArray *)passDescriptions;
-(NSDictionary *)manifestHashes;
-(NSData *)libraryHash;
-(void)setPassDBIsAvailable:(BOOL)arg1 ;
-(BOOL)_executeSQL:(id)arg1 ;
-(void)_migrateDatabase:(/*^block*/id)arg1 ;
-(void)_loadInitialManifestLocked;
-(void)_savePassLocked:(id)arg1 ;
-(id)_libraryHashLocked;
-(void)_notifyDatabaseChangedExternally;
-(void)_notifyDatabaseChangedWithNoop:(BOOL)arg1 ;
-(void)_saveDiffLocked:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(BOOL)_removePassWithUniqueIDLocked:(id)arg1 ;
-(void)_performTransactionWithBlock:(/*^block*/id)arg1 ;
-(void)_notifyDatabaseChangedWithNoop:(BOOL)arg1 firstUnlock:(BOOL)arg2 ;
-(BOOL)_passDBIsAvailableLocked;
-(id)_passForUniqueIDLocked:(id)arg1 ;
-(sqlite3_stmtRef)deleteStatement;
-(sqlite3_stmtRef)selectPassDataStatement;
-(sqlite3_stmtRef)selectPassDiffStatement;
-(sqlite3_stmtRef)insertDiffStatement;
-(id)_diffForUniqueIDLocked:(id)arg1 ;
-(sqlite3_stmtRef)updateDeletePendingStatement;
-(long long)_databaseVersionExists:(BOOL*)arg1 valid:(BOOL*)arg2 ;
-(void)_updateDatabaseVersionRow:(long long)arg1 ;
-(void)_insertDatabaseVersionRow:(long long)arg1 ;
-(void)_executeSQLQuery:(id)arg1 processResultsBlock:(/*^block*/id)arg2 ;
-(void)_notifyForFirstUnlock;
-(id)savePass:(id)arg1 ;
-(void)saveDiff:(id)arg1 forPassWithUniqueID:(id)arg2 ;
-(id)nukeAndRebuildDatabaseWithPasses:(id)arg1 ;
-(BOOL)passDBIsAvailable;
-(id)passForUniqueID:(id)arg1 ;
-(id)diffForUniqueID:(id)arg1 ;
-(id)hashForUniqueID:(id)arg1 ;
-(void)setDeletePending:(BOOL)arg1 forUniqueID:(id)arg2 ;
-(void)enumerateAllPassesWithBlock:(/*^block*/id)arg1 ;
-(void)_handleDatabaseChangedExternally;
-(void)_handleFirstUnlock;
-(id)removePassWithUniqueID:(id)arg1 ;
@end

