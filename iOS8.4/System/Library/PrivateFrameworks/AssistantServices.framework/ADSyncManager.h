/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:20:48 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@protocol OS_dispatch_queue, ADSyncManagerDelegate;
@class ADAccount, ADServiceManager, NSObject, NSString, NSMutableArray, SASyncAnchor, ADService, NSUUID, NSArray;

@interface ADSyncManager : NSObject {

	ADAccount* _account;
	ADServiceManager* _serviceManager;
	NSObject*<OS_dispatch_queue> _queue;
	NSString* _anchorsRequestId;
	NSMutableArray* _anchorsToSync;
	NSMutableArray* _syncedAnchors;
	SASyncAnchor* _currentAnchor;
	ADService* _currentSyncService;
	NSUUID* _currentSyncID;
	id<ADSyncManagerDelegate> _delegate;
	/*^block*/id _continueBlock;
	BOOL _currentSyncShouldCancel;
	BOOL _syncNeededOverride;
	BOOL _isAggressivelySyncing;
	NSArray* _queuedAnchors;
	BOOL _forceResetOnNextSync;

}

@property (nonatomic,copy) NSString * anchorsRequestId;                                                //@synthesize anchorsRequestId=_anchorsRequestId - In the implementation block
@property (nonatomic,copy) NSArray * queuedAnchors;                                                    //@synthesize queuedAnchors=_queuedAnchors - In the implementation block
@property (assign,setter=_setForceResetOnNextSync:,nonatomic) BOOL _forceResetOnNextSync;              //@synthesize forceResetOnNextSync=_forceResetOnNextSync - In the implementation block
@property (setter=_setCurrentAnchor:,nonatomic,retain) SASyncAnchor * _currentAnchor;                  //@synthesize currentAnchor=_currentAnchor - In the implementation block
@property (setter=_setContinueBlock:,nonatomic,copy) id _continueBlock;                                //@synthesize continueBlock=_continueBlock - In the implementation block
-(id)initWithAccount:(id)arg1 serviceManager:(id)arg2 serialQueue:(id)arg3 ;
-(void)setAnchorsRequestId:(NSString *)arg1 ;
-(BOOL)isAggressivelySyncing;
-(void)continueSync;
-(NSString *)anchorsRequestId;
-(id)anchorKeysNeedingSync;
-(void)setQueuedAnchors:(NSArray *)arg1 ;
-(void)prepareSyncWithAnchors:(id)arg1 delegate:(id)arg2 ;
-(void)cancelSyncForAnchor:(id)arg1 ;
-(void)setSyncNeeded;
-(void)beginAggressiveSyncWithAnchors:(id)arg1 delegate:(id)arg2 ;
-(NSArray *)queuedAnchors;
-(void)_setForceResetOnNextSync:(BOOL)arg1 ;
-(id)aggressiveSyncKeys;
-(void)_postSyncFinishedNotification;
-(void)_setCurrentAnchor:(id)arg1 ;
-(void)_setContinueBlock:(/*^block*/id)arg1 ;
-(void)_currentAnchorFinishedWithSuccess:(BOOL)arg1 ;
-(void)_setCurrentAnchorToNext;
-(void)_syncFinishedForService:(id)arg1 ;
-(void)_syncingService:(id)arg1 receivedChunk:(id)arg2 continueBlock:(/*^block*/id)arg3 ;
-(void)_finishSync;
-(SASyncAnchor *)_currentAnchor;
-(void)_continueSync;
-(id)_preferredSyncKeyOrder;
-(BOOL)_needsSync;
-(id)_sortedAnchorsFromAnchors:(id)arg1 ;
-(void)_setAnchorsToSync:(id)arg1 ;
-(id)_whitelistedAggressiveSyncKeys;
-(void)_invokeContinueBlockWithKeepGoingArgument:(BOOL)arg1 ;
-(BOOL)_forceResetOnNextSync;
-(id)_continueBlock;
-(void)reset;
-(BOOL)isSyncing;
@end

