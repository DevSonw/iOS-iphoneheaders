/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:20:48 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/AssistantServices.framework/assistantd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <assistantd/ADCommandCenterSpeechDelegate.h>
#import <assistantd/AFDictationService.h>

@protocol AFDictationServiceDelegate, OS_dispatch_queue;
@class NSObject, NSString;

@interface ADDictationConnection : NSObject <ADCommandCenterSpeechDelegate, AFDictationService> {

	id<AFDictationServiceDelegate> _serviceDelegate;
	NSObject*<OS_dispatch_queue> _queue;
	BOOL _speechRecognitionXPCTransactionIsActive;
	BOOL _audioFileXPCTransactionIsActive;
	BOOL _waitingForSpeechRecognition;
	BOOL _waitingForStructuredResults;
	BOOL _waitingForAudioFile;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithServiceDelegate:(id)arg1 ;
-(void)adSpeechRecordingDidFail:(id)arg1 ;
-(void)adSpeechRecognitionDidFail:(id)arg1 ;
-(void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 ;
-(void)adSpeechRecognizedPartialResult:(id)arg1 usingSpeechModel:(id)arg2 ;
-(void)adSpeechRecognizedStructuredResult:(id)arg1 usingSpeechModel:(id)arg2 ;
-(BOOL)adWaitingForAudioFile;
-(void)adSpeechRecordingDidEnd;
-(void)adSpeechRecordingWillBegin;
-(void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 ;
-(void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 ;
-(void)adSpeechRecordingDidUpdateAveragePower:(float)arg1 peakPower:(float)arg2 ;
-(void)adSpeechRecordingDidCancel;
-(void)adAudioFileFinishedWriting:(id)arg1 error:(id)arg2 ;
-(void)_endTranscriptionXPCTransactionForReason:(id)arg1 ;
-(void)_endAudioFileXPCTransactionForReason:(id)arg1 ;
-(void)_beginTranscriptionXPCTransactionForReason:(id)arg1 ;
-(void)_beginAudioFileXPCTransactionForReason:(id)arg1 ;
-(oneway void)startDictationWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3 ;
-(oneway void)endSession;
-(oneway void)cancelSpeech;
-(oneway void)stopSpeechWithOptions:(id)arg1 ;
-(oneway void)preheat;
-(oneway void)requestStateUpdateWithReply:(/*^block*/id)arg1 ;
-(oneway void)recordFailureMetricsForError:(id)arg1 ;
-(oneway void)updateSpeechOptions:(id)arg1 ;
-(oneway void)prepareWithOptions:(id)arg1 ;
-(oneway void)sendSpeechCorrectionInfo:(id)arg1 forCorrectionContext:(id)arg2 ;
-(oneway void)_startDictationWithURL:(id)arg1 isNarrowBand:(BOOL)arg2 language:(id)arg3 options:(id)arg4 ;
@end

