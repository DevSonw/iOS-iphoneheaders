/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:21:48 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/CoreRC.framework/CoreRC
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreRC/NSXPCListenerDelegate.h>
#import <CoreRC/CoreRCXPCService.h>
#import <CoreRC/CoreRCManagerDelegate.h>
#import <CoreRC/CoreRCBusDelegate.h>
#import <CoreRC/CoreRCDeviceDelegate.h>
#import <CoreRC/CoreRCXPCServiceCECPrivate.h>
#import <CoreRC/CoreRCXPCServiceIR.h>
#import <CoreRC/CoreRCXPCServicePrivate.h>
#import <CoreRC/CoreRCXPCServiceCEC.h>
#import <CoreRC/CoreCECBusDelegate.h>
#import <CoreRC/CoreCECDeviceDelegate.h>

@protocol OS_dispatch_queue;
@class NSMutableSet, NSXPCListener, NSObject, CoreRCManagerProvider, NSString, NSSet;

@interface CoreRCXPCService : NSObject <NSXPCListenerDelegate, CoreRCXPCService, CoreRCManagerDelegate, CoreRCBusDelegate, CoreRCDeviceDelegate, CoreRCXPCServiceCECPrivate, CoreRCXPCServiceIR, CoreRCXPCServicePrivate, CoreRCXPCServiceCEC, CoreCECBusDelegate, CoreCECDeviceDelegate> {

	NSMutableSet* _connections;
	NSXPCListener* _listener;
	NSObject*<OS_dispatch_queue> _queue;
	CoreRCManagerProvider* _manager;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSSet * connections;                          //@synthesize connections=_connections - In the implementation block
@property (nonatomic,readonly) CoreRCManagerProvider * manager;              //@synthesize manager=_manager - In the implementation block
-(void)performActiveSourceAsync:(id)arg1 withMenus:(BOOL)arg2 reply:(/*^block*/id)arg3 ;
-(void)performDeckControlSetDeckStatusAsync:(unsigned long long)arg1 forDevice:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)performDeckControlCommandAsync:(id)arg1 controlMode:(unsigned long long)arg2 targetDevice:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)performDeckControlPlayAsync:(id)arg1 playMode:(unsigned long long)arg2 targetDevice:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)performDeckControlRefreshStatusAsync:(id)arg1 targetDevice:(id)arg2 requestType:(unsigned long long)arg3 reply:(/*^block*/id)arg4 ;
-(void)performInactiveSourceAsync:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)performRefreshDevicesAsync:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)performRefreshProperties:(id)arg1 ofDevice:(id)arg2 withDeviceAsync:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)performRequestActiveSourceAsync:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)performSetSystemAudioControlEnabled:(BOOL)arg1 withDeviceAsync:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)performSystemAudioModeRequestAsync:(id)arg1 withDesiredState:(unsigned long long)arg2 reply:(/*^block*/id)arg3 ;
-(void)performStandbyAsync:(id)arg1 targetDevice:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)queryLocalInstanceAsync:(unsigned long long)arg1 bus:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)setOsdNameAsync:(id)arg1 forBus:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)setTvLanguageCodeAsync:(id)arg1 forBus:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)cecBus:(id)arg1 activeSourceHasChangedTo:(id)arg2 fromDevice:(id)arg3 ;
-(void)cecDevice:(id)arg1 activeSourceStatusHasChanged:(BOOL)arg2 ;
-(void)cecDevice:(id)arg1 deckControlPlayHasBeenReceived:(unsigned long long)arg2 fromDevice:(id)arg3 ;
-(void)cecDevice:(id)arg1 deckControlCommandHasBeenReceived:(unsigned long long)arg2 fromDevice:(id)arg3 ;
-(void)cecDevice:(id)arg1 deckControlStatusHasBeenUpdated:(unsigned long long)arg2 fromDevice:(id)arg3 ;
-(void)cecDevice:(id)arg1 featureAbort:(id)arg2 ;
-(void)cecDevice:(id)arg1 standbyRequestHasBeenReceived:(id)arg2 ;
-(void)cecBus:(id)arg1 linkStateHasBeenUpdated:(BOOL)arg2 ;
-(void)queryLoggingAsync:(/*^block*/id)arg1 ;
-(void)setLoggingAsync:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)addExternalDeviceOnBusAsync:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)fakeBusCreateAsync:(unsigned long long)arg1 reply:(/*^block*/id)arg2 ;
-(void)fakeSetBusLinkStateAsync:(id)arg1 newLinkState:(BOOL)arg2 reply:(/*^block*/id)arg3 ;
-(void)fakeCreateRemoteInstanceAsync:(unsigned long long)arg1 bus:(id)arg2 withLogicalAddress:(unsigned char)arg3 withPhysicalAddress:(unsigned long long)arg4 reply:(/*^block*/id)arg5 ;
-(void)fakeAssignLogicalAddressAsync:(id)arg1 logicalAddress:(unsigned char)arg2 reply:(/*^block*/id)arg3 ;
-(void)fakeDeviceRemoveAsync:(id)arg1 reply:(/*^block*/id)arg2 ;
-(NSSet *)connections;
-(void)dealloc;
-(id)init;
-(void)invalidate;
-(BOOL)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(CoreRCManagerProvider *)manager;
-(void)bus:(id)arg1 deviceHasBeenAdded:(id)arg2 ;
-(void)bus:(id)arg1 deviceHasBeenRemoved:(id)arg2 ;
-(void)bus:(id)arg1 deviceHasBeenUpdated:(id)arg2 ;
-(void)device:(id)arg1 receivedHIDEvent:(id)arg2 fromDevice:(id)arg3 ;
-(void)startOnQueue:(id)arg1 ;
-(void)manager:(id)arg1 hasAdded:(id)arg2 ;
-(void)manager:(id)arg1 hasRemoved:(id)arg2 ;
-(void)manager:(id)arg1 hasUpdated:(id)arg2 ;
-(void)setPropertyAsync:(id)arg1 forKey:(id)arg2 ofBus:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)getPropertyAsyncForKey:(id)arg1 ofBus:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)queryBusesAsync:(/*^block*/id)arg1 ;
-(void)sendHIDEventAsync:(id)arg1 fromDevice:(id)arg2 toDevice:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)connectionInvalidated:(id)arg1 ;
@end

