/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:27:03 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/iTunesStore.framework/Support/itunesstored
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <itunesstored/itunesstored-Structs.h>
@class NSObject, ISOperationQueue;

@interface AppReceiptController : NSObject {

	NSObject*<OS_dispatch_queue> _dispatchQueue;
	ISOperationQueue* _operationQueue;

}
+(void)observeXPCServer:(id)arg1 ;
+(void)getApplicationReceiptPathWithMessage:(id)arg1 connection:(id)arg2 ;
+(void)handleInvalidReceipt:(id)arg1 connection:(id)arg2 ;
+(void)refreshAllReceipts:(id)arg1 connection:(id)arg2 ;
+(void)refreshAppReceipt:(id)arg1 connection:(id)arg2 ;
+(BOOL)connectionHasEntitlement:(id)arg1 ;
+(id)sharedController;
-(void)_resetBackgroundTaskJobs;
-(void)_setReceiptRevocationCheckInterval:(double)arg1 ;
-(void)_setReceiptRevocationCheckIntervalCellular:(double)arg1 ;
-(void)_performBackgroundCheckForJob:(id)arg1 jobName:(id)arg2 ;
-(void)_handleInvalidReceipt:(id)arg1 forConnection:(id)arg2 ;
-(void)_performBackgroundReceiptRevocationCheckWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)_performBackgroundReceiptRevocationCheck:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)_performBackgroundReceiptRevocationCheckIfNeeded;
-(double)_checkIntervalWithDefault:(double)arg1 bagKey:(id)arg2 defaultsKey:(CFStringRef)arg3 ;
-(void)_setLastReceiptRevocationCheckDate:(id)arg1 ;
-(double)_automaticRevocationCheckInterval;
-(double)_automaticRevocationCheckIntervalCellular;
-(void)_postNotificationForRevoked:(id)arg1 ;
-(void)_postNotificationForExpiring:(id)arg1 ;
-(id)_nextCheckDateWithInterval:(double)arg1 ;
-(void)_addRevocationCheckJobWithDate:(id)arg1 identifier:(id)arg2 allowsCellular:(BOOL)arg3 ;
-(void)_setCheckInterval:(double)arg1 forDefaultsKey:(CFStringRef)arg2 ;
-(void)dealloc;
-(id)init;
-(void)start;
-(void)_addOperation:(id)arg1 ;
-(id)_operationQueue;
-(void)_dispatchAsync:(/*^block*/id)arg1 ;
@end

