/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:22:41 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <GeoServices/GeoServices-Structs.h>
#import <ProtocolBuffer/PBCodable.h>
#import <GeoServices/NSCopying.h>
#import <GeoServices/GEOMapItemPrivate.h>

@class GEOMapItemClientAttributes, GEOPlace, GEOPDPlace, GEOPlaceResult, GEOMapRegion, NSString, NSData, GEOAddress, NSDictionary, NSArray, NSDate, GEOPDFlyover, NSURL, GEOMapItemPlaceAttribution, GEOMapItemPhotosAttribution, GEOMapItemReviewsAttribution, GEOFeatureStyleAttributes, GEOPDBusinessClaim;

@interface GEOMapItemStorage : PBCodable <NSCopying, GEOMapItemPrivate> {

	GEOMapItemClientAttributes* _clientAttributes;
	GEOPlace* _place;
	GEOPDPlace* _placeData;
	GEOPlaceResult* _placeResult;

}

@property (nonatomic,readonly) GEOMapRegion * mapRegion; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSString * name; 
@property (nonatomic,readonly) NSData * encodedData; 
@property (getter=isDisputed,nonatomic,readonly) BOOL disputed; 
@property (getter=isValid,nonatomic,readonly) BOOL valid; 
@property (nonatomic,readonly) SCD_Struct_GE15 coordinate; 
@property (nonatomic,readonly) SCD_Struct_GE15 centerCoordinate; 
@property (nonatomic,readonly) GEOMapRegion * displayMapRegion; 
@property (nonatomic,readonly) GEOMapRegion * geoFenceMapRegion; 
@property (nonatomic,readonly) GEOAddress * geoAddress; 
@property (nonatomic,readonly) NSDictionary * addressDictionary; 
@property (nonatomic,readonly) NSArray * areasOfInterest; 
@property (nonatomic,readonly) NSString * timezone; 
@property (nonatomic,readonly) GEOMapRegion * displayMapRegionOrNil; 
@property (nonatomic,readonly) int contactAddressType; 
@property (nonatomic,readonly) NSString * contactName; 
@property (nonatomic,readonly) NSString * contactSpokenName; 
@property (nonatomic,readonly) BOOL contactIsMe; 
@property (nonatomic,readonly) NSString * eventName; 
@property (nonatomic,readonly) NSDate * eventDate; 
@property (nonatomic,readonly) BOOL isEventAllDay; 
@property (getter=_place,nonatomic,readonly) GEOPlace * place; 
@property (getter=_placeData,nonatomic,readonly) GEOPDPlace * placeData; 
@property (getter=_clientAttributes,nonatomic,readonly) GEOMapItemClientAttributes * clientAttributes; 
@property (getter=_placeAsData,nonatomic,readonly) NSData * placeAsData; 
@property (getter=_placeDataAsData,nonatomic,readonly) NSData * placeDataAsData; 
@property (getter=_hasResolvablePartialInformation,nonatomic,readonly) BOOL hasResolvablePartialInformation; 
@property (getter=_placeType,nonatomic,readonly) int placeType; 
@property (getter=_roadAccessPoints,nonatomic,readonly) NSArray * roadAccessPoints; 
@property (getter=_hasResultProviderID,nonatomic,readonly) BOOL hasResultProviderID; 
@property (getter=_resultProviderID,nonatomic,readonly) int resultProviderID; 
@property (getter=_hasFlyover,nonatomic,readonly) BOOL hasFlyover; 
@property (getter=_flyover,nonatomic,readonly) GEOPDFlyover * flyover; 
@property (getter=_hasFlyoverAnnouncementMessage,nonatomic,readonly) BOOL hasFlyoverAnnouncement; 
@property (getter=_flyoverAnnouncementMessage,nonatomic,readonly) NSString * flyoverAnnouncement; 
@property (getter=_hasMUID,nonatomic,readonly) BOOL hasMUID; 
@property (getter=_muid,nonatomic,readonly) unsigned long long muid; 
@property (getter=_hasAreaInMeters,nonatomic,readonly) BOOL hasAreaInMeters; 
@property (getter=_areaInMeters,nonatomic,readonly) double areaInMeters; 
@property (getter=_businessURL,nonatomic,readonly) NSString * businessURL; 
@property (getter=_hasUserRatingScore,nonatomic,readonly) BOOL hasUserRatingScore; 
@property (getter=_sampleSizeForUserRatingScore,nonatomic,readonly) unsigned sampleSizeForUserRatingScore; 
@property (getter=_normalizedUserRatingScore,nonatomic,readonly) float normalizedUserRatingScore; 
@property (getter=_hasPriceRange,nonatomic,readonly) BOOL hasPriceRange; 
@property (getter=_priceRange,nonatomic,readonly) unsigned priceRange; 
@property (getter=_hasAnyAmenities,nonatomic,readonly) BOOL hasAnyAmenities; 
@property (getter=_hasDeliveryAmenity,nonatomic,readonly) BOOL hasDeliveryAmenity; 
@property (getter=_hasDelivery,nonatomic,readonly) BOOL hasDelivery; 
@property (getter=_hasGoodForKidsAmenity,nonatomic,readonly) BOOL hasGoodForKidsAmenity; 
@property (getter=_goodForKids,nonatomic,readonly) BOOL goodForKids; 
@property (getter=_hasTakesReservationsAmenity,nonatomic,readonly) BOOL hasTakesReservationsAmenity; 
@property (getter=_takesReservations,nonatomic,readonly) BOOL takesReservations; 
@property (getter=_hasOperatingHours,nonatomic,readonly) BOOL hasOperatingHours; 
@property (getter=_hasCurrentOperatingHours,nonatomic,readonly) BOOL hasCurrentOperatingHours; 
@property (getter=_operatingHours,nonatomic,readonly) NSArray * operatingHours; 
@property (getter=_hasTelephone,nonatomic,readonly) BOOL hasTelephone; 
@property (getter=_telephone,nonatomic,readonly) NSString * telephone; 
@property (getter=_disambiguationName,nonatomic,readonly) NSString * disambiguationName; 
@property (getter=_openingHoursOptions,nonatomic,readonly) unsigned long long openingHoursOptions; 
@property (getter=_needsAttribution,nonatomic,readonly) BOOL needsAttribution; 
@property (getter=_webURL,nonatomic,copy,readonly) NSURL * webURL; 
@property (getter=_providerURL,nonatomic,copy,readonly) NSURL * providerURL; 
@property (getter=_vendorID,nonatomic,copy,readonly) NSString * vendorID; 
@property (getter=_attribution,nonatomic,readonly) GEOMapItemPlaceAttribution * attribution; 
@property (getter=_photosAttribution,nonatomic,readonly) GEOMapItemPhotosAttribution * photosAttribution; 
@property (getter=_reviewsAttribution,nonatomic,readonly) GEOMapItemReviewsAttribution * reviewsAttribution; 
@property (getter=_poiSurveyURLString,nonatomic,readonly) NSString * poiSurveyURLString; 
@property (getter=_styleAttributes,nonatomic,readonly) GEOFeatureStyleAttributes * styleAttributes; 
@property (getter=_customIconID,nonatomic,readonly) unsigned long long customIconID; 
@property (getter=_additionalPlaceInfos,nonatomic,readonly) NSArray * additionalPlaceInfos; 
@property (getter=_hasBusinessClaim,nonatomic,readonly) BOOL hasBusinessClaim; 
@property (getter=_businessClaim,nonatomic,readonly) GEOPDBusinessClaim * businessClaim; 
@property (nonatomic,readonly) BOOL hasPlaceData; 
@property (nonatomic,retain) GEOPDPlace * placeData;                                                                      //@synthesize placeData=_placeData - In the implementation block
@property (nonatomic,readonly) BOOL hasPlace; 
@property (nonatomic,retain) GEOPlace * place;                                                                            //@synthesize place=_place - In the implementation block
@property (nonatomic,readonly) BOOL hasClientAttributes; 
@property (nonatomic,retain) GEOMapItemClientAttributes * clientAttributes;                                               //@synthesize clientAttributes=_clientAttributes - In the implementation block
@property (nonatomic,readonly) BOOL hasPlaceResult; 
@property (nonatomic,retain) GEOPlaceResult * placeResult;                                                                //@synthesize placeResult=_placeResult - In the implementation block
+(id)mapItemStorageForGEOMapItem:(id)arg1 ;
+(id)mapItemStorageForPlaceData:(id)arg1 ;
+(id)mapItemStorageForGEOMapItemPrivate:(id)arg1 ;
+(id)mapItemStorageForPlace:(id)arg1 ;
+(id)mapItemStorageForGEOMapItem:(id)arg1 clientAttributes:(id)arg2 ;
+(id)mapItemStorageToShareForGEOMapItem:(id)arg1 ;
+(id)mapItemStorageForSerializedMapItemStorage:(id)arg1 ;
+(id)mapItemStorageForSerializedPlaceData:(id)arg1 ;
+(id)mapItemStorageForPlace:(id)arg1 clientAttributes:(id)arg2 ;
+(id)mapItemStorageForPlaceResult:(id)arg1 ;
-(NSString *)name;
-(BOOL)isValid;
-(id)_roadAccessPoints;
-(NSDictionary *)addressDictionary;
-(NSString *)timezone;
-(GEOMapRegion *)displayMapRegion;
-(id)_telephone;
-(BOOL)isDisputed;
-(BOOL)_hasMUID;
-(unsigned long long)_muid;
-(BOOL)_hasUserRatingScore;
-(unsigned)_sampleSizeForUserRatingScore;
-(float)_normalizedUserRatingScore;
-(BOOL)_hasPriceRange;
-(unsigned)_priceRange;
-(id)_localizedCategoryNamesForType:(unsigned)arg1 ;
-(BOOL)_hasLocalizedCategoryNamesForType:(unsigned)arg1 ;
-(BOOL)_hasAnyAmenities;
-(BOOL)_hasDeliveryAmenity;
-(BOOL)_hasDelivery;
-(BOOL)_hasGoodForKidsAmenity;
-(BOOL)_goodForKids;
-(BOOL)_hasTakesReservationsAmenity;
-(BOOL)_takesReservations;
-(BOOL)_hasOperatingHours;
-(id)_webURL;
-(id)_spokenAddressForLocale:(id)arg1 ;
-(int)_recommendedTransportType;
-(BOOL)_hasTravelTimeForTransportType:(int)arg1 ;
-(unsigned)_travelTimeForTransportType:(int)arg1 ;
-(unsigned)_travelDistanceForTransportType:(int)arg1 ;
-(id)_arrivalMapRegionForTransportType:(int)arg1 ;
-(id)_asPlaceInfo;
-(id)_mapItemByStrippingOptionalData;
-(id)_placeData;
-(id)_clientAttributes;
-(id)_placeAsData;
-(id)_placeDataAsData;
-(BOOL)_hasResolvablePartialInformation;
-(BOOL)_hasResultProviderID;
-(int)_resultProviderID;
-(BOOL)_hasFlyover;
-(BOOL)_hasFlyoverAnnouncementMessage;
-(id)_flyoverAnnouncementMessage;
-(BOOL)_hasAreaInMeters;
-(id)_businessURL;
-(BOOL)_hasCurrentOperatingHours;
-(id)_operatingHours;
-(BOOL)_hasTelephone;
-(id)_disambiguationName;
-(unsigned long long)_openingHoursOptions;
-(BOOL)_needsAttribution;
-(id)_providerURL;
-(id)_vendorID;
-(id)_attribution;
-(id)_photosAttribution;
-(id)_reviewsAttribution;
-(id)_poiSurveyURLString;
-(unsigned long long)_customIconID;
-(BOOL)_hasBusinessClaim;
-(id)_businessClaim;
-(id)spokenNameForLocale:(id)arg1 ;
-(GEOMapRegion *)geoFenceMapRegion;
-(NSArray *)areasOfInterest;
-(GEOMapRegion *)displayMapRegionOrNil;
-(int)contactAddressType;
-(NSString *)contactName;
-(NSString *)contactSpokenName;
-(BOOL)contactIsMe;
-(NSString *)eventName;
-(NSDate *)eventDate;
-(BOOL)isEventAllDay;
-(id)initWithPlaceData:(id)arg1 clientAttributes:(id)arg2 ;
-(id)initWithPlace:(id)arg1 clientAttributes:(id)arg2 ;
-(id)initWithPlaceResult:(id)arg1 ;
-(id)_geoMapItem;
-(NSData *)encodedData;
-(GEOAddress *)geoAddress;
-(int)_placeType;
-(id)_additionalPlaceInfos;
-(id)_place;
-(double)_areaInMeters;
-(GEOMapRegion *)mapRegion;
-(SCD_Struct_GE15)centerCoordinate;
-(SCD_Struct_GE15)coordinate;
-(id)_styleAttributes;
-(id)_flyover;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)dictionaryRepresentation;
-(void)setPlace:(GEOPlace *)arg1 ;
-(GEOPlace *)place;
-(BOOL)hasPlace;
-(BOOL)hasPlaceResult;
-(GEOPlaceResult *)placeResult;
-(void)setClientAttributes:(GEOMapItemClientAttributes *)arg1 ;
-(GEOPDPlace *)placeData;
-(void)setPlaceResult:(GEOPlaceResult *)arg1 ;
-(void)setPlaceData:(GEOPDPlace *)arg1 ;
-(BOOL)hasPlaceData;
-(BOOL)hasClientAttributes;
-(GEOMapItemClientAttributes *)clientAttributes;
-(void)mergeFrom:(id)arg1 ;
-(BOOL)readFrom:(id)arg1 ;
-(void)writeTo:(id)arg1 ;
-(void)copyTo:(id)arg1 ;
@end

