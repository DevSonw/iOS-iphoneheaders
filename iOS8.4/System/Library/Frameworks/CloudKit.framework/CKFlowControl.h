/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:17:20 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/CloudKit.framework/CloudKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/


@class NSDate;

@interface CKFlowControl : NSObject {

	unsigned long long _budgetCap;
	double _regenerationPerSecond;
	unsigned long long _totalSamples;
	double _totalCost;
	double _budget;
	double _maximumThrottleTime;
	NSDate* _lastExpenditure;

}

@property (assign) unsigned long long budgetCap;                      //@synthesize budgetCap=_budgetCap - In the implementation block
@property (assign) double regenerationPerSecond;                      //@synthesize regenerationPerSecond=_regenerationPerSecond - In the implementation block
@property (assign) double budget;                                     //@synthesize budget=_budget - In the implementation block
@property (assign,nonatomic) double maximumThrottleTime;              //@synthesize maximumThrottleTime=_maximumThrottleTime - In the implementation block
@property (retain) NSDate * lastExpenditure;                          //@synthesize lastExpenditure=_lastExpenditure - In the implementation block
+(id)flowControlWithBudgetCap:(unsigned long long)arg1 withMaximumThrottleTime:(double)arg2 andRegenerationPerSecond:(double)arg3 ;
-(void)setBudget:(double)arg1 ;
-(void)setLastExpenditure:(NSDate *)arg1 ;
-(id)initWithBudgetCap:(unsigned long long)arg1 withMaximumThrottleTime:(double)arg2 andRegenerationPerSecond:(double)arg3 ;
-(double)_secondsUntilBudgetLimitationRemovedNoRegen;
-(NSDate *)lastExpenditure;
-(BOOL)attemptBudgetedExpenditureWithCost:(double)arg1 ;
-(id)description;
-(void)setMaximumThrottleTime:(double)arg1 ;
-(double)maximumThrottleTime;
-(id)CKPropertiesDescription;
-(double)secondsUntilBudgetLimitationRemoved;
-(BOOL)isLimited;
-(void)expendWithCost:(double)arg1 ;
-(double)budget;
-(double)regenerationPerSecond;
-(unsigned long long)budgetCap;
-(void)setBudgetCap:(unsigned long long)arg1 ;
-(void)setRegenerationPerSecond:(double)arg1 ;
-(void)regenerate;
@end

