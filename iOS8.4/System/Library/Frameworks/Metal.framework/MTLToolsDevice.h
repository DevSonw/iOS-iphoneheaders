/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:18:21 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/Metal.framework/Metal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <Metal/Metal-Structs.h>
#import <Metal/MTLToolsObject.h>
#import <Metal/MTLDeviceSPI.h>

@class MTLToolsPointerArray, NSString;

@interface MTLToolsDevice : MTLToolsObject <MTLDeviceSPI> {

	MTLToolsPointerArray* _buffers;
	MTLToolsPointerArray* _depthStencilStates;
	MTLToolsPointerArray* _textures;
	MTLToolsPointerArray* _samplers;
	MTLToolsPointerArray* _commandQueues;
	MTLToolsPointerArray* _libraries;
	MTLToolsPointerArray* _pipelineStates;
	MTLToolsPointerArray* _computePipelineStates;

}

@property (nonatomic,readonly) MTLToolsPointerArray * buffers;                            //@synthesize buffers=_buffers - In the implementation block
@property (nonatomic,readonly) MTLToolsPointerArray * depthStencilStates;                 //@synthesize depthStencilStates=_depthStencilStates - In the implementation block
@property (nonatomic,readonly) MTLToolsPointerArray * textures;                           //@synthesize textures=_textures - In the implementation block
@property (nonatomic,readonly) MTLToolsPointerArray * samplers;                           //@synthesize samplers=_samplers - In the implementation block
@property (nonatomic,readonly) MTLToolsPointerArray * commandQueues;                      //@synthesize commandQueues=_commandQueues - In the implementation block
@property (nonatomic,readonly) MTLToolsPointerArray * libraries;                          //@synthesize libraries=_libraries - In the implementation block
@property (nonatomic,readonly) MTLToolsPointerArray * pipelineStates;                     //@synthesize pipelineStates=_pipelineStates - In the implementation block
@property (nonatomic,readonly) MTLToolsPointerArray * computePipelineStates;              //@synthesize computePipelineStates=_computePipelineStates - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) NSString * name; 
@property (assign) BOOL shaderDebugInfoCaching; 
@property (readonly) unsigned long long halfFPConfig; 
@property (readonly) unsigned long long singleFPConfig; 
@property (readonly) unsigned long long doubleFPConfig; 
@property (assign,nonatomic) BOOL metalAssertionsEnabled; 
@property (readonly) unsigned long long featureProfile; 
@property (readonly) const SCD_Struct_MT4* limits; 
@property (readonly) unsigned long long maxColorAttachments; 
@property (readonly) unsigned long long maxVertexAttributes; 
@property (readonly) unsigned long long maxVertexBuffers; 
@property (readonly) unsigned long long maxVertexTextures; 
@property (readonly) unsigned long long maxVertexInlineDataSize; 
@property (readonly) unsigned long long maxVertexSamplers; 
@property (readonly) unsigned long long maxInterpolants; 
@property (readonly) unsigned long long maxFragmentBuffers; 
@property (readonly) unsigned long long maxFragmentTextures; 
@property (readonly) unsigned long long maxFragmentSamplers; 
@property (readonly) unsigned long long maxFragmentInlineDataSize; 
@property (readonly) unsigned long long maxComputeBuffers; 
@property (readonly) unsigned long long maxComputeTextures; 
@property (readonly) unsigned long long maxComputeSamplers; 
@property (readonly) unsigned long long maxComputeInlineDataSize; 
@property (readonly) unsigned long long maxComputeLocalMemorySizes; 
@property (readonly) unsigned long long maxComputeThreadsPerThreadgroup; 
@property (readonly) unsigned long long maxComputeThreadgroupSize; 
@property (readonly) unsigned long long maxComputeThreadgroupMemory; 
@property (readonly) float maxLineWidth; 
@property (readonly) float maxPointSize; 
@property (readonly) unsigned long long maxVisibilityQueryOffset; 
@property (readonly) unsigned long long maxSampleCount; 
@property (readonly) unsigned long long maxBufferLength; 
@property (readonly) unsigned long long maxTextureWidth2D; 
@property (readonly) unsigned long long maxTextureHeight2D; 
@property (readonly) unsigned long long maxTextureLayers; 
@property (readonly) unsigned long long maxTextureWidth3D; 
@property (readonly) unsigned long long maxTextureHeight3D; 
@property (readonly) unsigned long long maxTextureDepth3D; 
@property (readonly) unsigned long long maxFramebufferStorageBits; 
+(void)registerDevices;
-(void)acceptVisitor:(id)arg1 ;
-(id)initWithBaseObject:(id)arg1 parent:(id)arg2 ;
-(const SCD_Struct_MT4*)limits;
-(BOOL)supportsFeatureSet:(unsigned long long)arg1 ;
-(id)newCommandQueueWithMaxCommandBufferCount:(unsigned long long)arg1 ;
-(id)newBufferWithBytes:(const void*)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 ;
-(id)newBufferWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 deallocator:(/*^block*/id)arg4 ;
-(id)newDepthStencilStateWithDescriptor:(id)arg1 ;
-(id)newDefaultLibrary;
-(id)newLibraryWithFile:(id)arg1 error:(id*)arg2 ;
-(id)newLibraryWithData:(id)arg1 error:(id*)arg2 ;
-(void)newLibraryWithSource:(id)arg1 options:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id*)arg3 error:(id*)arg4 ;
-(void)newRenderPipelineStateWithDescriptor:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newComputePipelineStateWithFunction:(id)arg1 error:(id*)arg2 ;
-(id)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 reflection:(id*)arg3 error:(id*)arg4 ;
-(void)newComputePipelineStateWithFunction:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newComputePipelineStateWithDescriptor:(id)arg1 error:(id*)arg2 ;
-(void)newComputePipelineStateWithDescriptor:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(unsigned long long)halfFPConfig;
-(unsigned long long)singleFPConfig;
-(unsigned long long)doubleFPConfig;
-(BOOL)metalAssertionsEnabled;
-(void)setMetalAssertionsEnabled:(BOOL)arg1 ;
-(unsigned long long)featureProfile;
-(unsigned long long)maxColorAttachments;
-(unsigned long long)maxVertexAttributes;
-(unsigned long long)maxVertexBuffers;
-(unsigned long long)maxVertexTextures;
-(unsigned long long)maxVertexInlineDataSize;
-(unsigned long long)maxVertexSamplers;
-(unsigned long long)maxInterpolants;
-(unsigned long long)maxFragmentBuffers;
-(unsigned long long)maxFragmentTextures;
-(unsigned long long)maxFragmentSamplers;
-(unsigned long long)maxFragmentInlineDataSize;
-(unsigned long long)maxComputeBuffers;
-(unsigned long long)maxComputeTextures;
-(unsigned long long)maxComputeSamplers;
-(unsigned long long)maxComputeInlineDataSize;
-(unsigned long long)maxComputeLocalMemorySizes;
-(unsigned long long)maxComputeThreadsPerThreadgroup;
-(unsigned long long)maxComputeThreadgroupSize;
-(unsigned long long)maxComputeThreadgroupMemory;
-(float)maxLineWidth;
-(float)maxPointSize;
-(unsigned long long)maxVisibilityQueryOffset;
-(unsigned long long)maxSampleCount;
-(unsigned long long)maxBufferLength;
-(unsigned long long)maxTextureWidth2D;
-(unsigned long long)maxTextureHeight2D;
-(unsigned long long)maxTextureLayers;
-(unsigned long long)maxTextureWidth3D;
-(unsigned long long)maxTextureHeight3D;
-(unsigned long long)maxTextureDepth3D;
-(unsigned long long)maxFramebufferStorageBits;
-(MTLToolsPointerArray *)depthStencilStates;
-(MTLToolsPointerArray *)commandQueues;
-(MTLToolsPointerArray *)buffers;
-(MTLToolsPointerArray *)samplers;
-(MTLToolsPointerArray *)libraries;
-(id)unwrapMTLRenderPipelineDescriptor:(id)arg1 ;
-(MTLToolsPointerArray *)pipelineStates;
-(id)unwrapMTLComputePipelineDescriptor:(id)arg1 ;
-(MTLToolsPointerArray *)computePipelineStates;
-(id)newTextureWithDescriptor:(id)arg1 iosurface:(IOSurfaceRef)arg2 plane:(unsigned long long)arg3 ;
-(id)newCommandQueue;
-(id)newLibraryWithSource:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(id)newRenderPipelineStateWithDescriptor:(id)arg1 error:(id*)arg2 ;
-(id)newSamplerStateWithDescriptor:(id)arg1 ;
-(id)newTextureWithDescriptor:(id)arg1 ;
-(id)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 ;
-(NSString *)name;
-(MTLToolsPointerArray *)textures;
@end

