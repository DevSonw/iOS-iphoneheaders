/*
* This header is generated by classdump-dyld 0.7
* on Wednesday, July 22, 2015 at 5:17:30 PM Japan Standard Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <CoreFoundation/CoreFoundation-Structs.h>
#import <CoreFoundation/NSCopying.h>
#import <CoreFoundation/NSMutableCopying.h>
#import <CoreFoundation/NSSecureCoding.h>
#import <CoreFoundation/NSFastEnumeration.h>
#import <CoreFoundation/PQLBindable.h>

@class NSString, NSArray, NSNumber;

@interface NSDictionary : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration, PQLBindable>

@property (assign,nonatomic) unsigned long long lastServerRevision; 
@property (assign,nonatomic) unsigned long long lastClientRevision; 
@property (assign,nonatomic) unsigned long long newRevision; 
@property (nonatomic,copy) NSString * versionToken; 
@property (readonly) NSString * npkRelevancyUniqueID; 
@property (readonly) NSString * npkRelevancyRelevantText; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSString * title; 
@property (nonatomic,readonly) NSString * bundleId; 
@property (nonatomic,readonly) NSString * creator; 
@property (nonatomic,readonly) float averageRating; 
@property (nonatomic,readonly) unsigned long long ratingCount; 
@property (nonatomic,readonly) NSString * url; 
@property (nonatomic,readonly) NSString * priceFormatted; 
@property (nonatomic,readonly) NSArray * transitModeKeys; 
@property (nonatomic,readonly) NSArray * categories; 
@property (nonatomic,readonly) NSNumber * storeID; 
@property (nonatomic,readonly) BOOL isOfficialApp; 
@property (nonatomic,readonly) BOOL isInstalled; 
@property (nonatomic,readonly) unsigned short fileHFSFlags; 
@property (nonatomic,readonly) unsigned long long fileHFSResourceForkSize; 
@property (readonly) unsigned long long count; 
+(id)dictionaryWithContentsOfData:(id)arg1 ;
+(id)dictionaryWithContentsOfData:(id)arg1 ;
+(id)npkRelevancyTupleWithUniqueID:(id)arg1 relevantText:(id)arg2 ;
+(id)_gkImageCacheKeyPathsByKey;
+(id)_gkClientImageDictionaryForServerImageURLs:(id)arg1 ;
+(id)_gkDictionaryWithFormEncodedString:(id)arg1 ;
+(id)dictionaryWithParametersInURLString:(id)arg1 ;
+(id)SLDictionaryWithOAuthAccessTokenResponseData:(id)arg1 ;
+(id)hk_dictionaryWithCodableMetadata:(id)arg1 ;
+(id)hk_secureCodingClasses;
+(BOOL)hk_acceptsMetadataValue:(id)arg1 ;
+(BOOL)hk_acceptsMetadataKey:(id)arg1 ;
+(Class)_hk_expectedClassForKey:(id)arg1 ;
+(BOOL)_hk_validateMetadataValueContent:(id)arg1 forKey:(id)arg2 error:(id*)arg3 ;
+(id)hk_acceptedMetadataValueClasses;
+(id)hk_acceptedMetadataKeyClasses;
+(id)_geo_dictionaryFromXPCObject:(id)arg1 ;
+(id)_geo_replyDictionaryForError:(id)arg1 key:(id)arg2 ;
+(id)dictionaryWithPlistData:(id)arg1 ;
+(id)_dictionaryWithData:(id)arg1 isPlist:(BOOL)arg2 allowedClasses:(id)arg3 ;
+(id)dictionaryWithArchiveData:(id)arg1 allowedClasses:(id)arg2 ;
+(id)dictionaryWithArchiveData:(id)arg1 ;
+(id)dictionaryWithKeyArray:(id)arg1 defaultValue:(id)arg2 ;
+(id)newWithContentsOf:(id)arg1 immutable:(BOOL)arg2 ;
+(id)dictionaryWithContentsOfURL:(id)arg1 ;
+(BOOL)supportsSecureCoding;
+(id)dictionaryWithContentsOfFile:(id)arg1 ;
+(id)sharedKeySetForKeys:(id)arg1 ;
+(id)newDictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
+(id)dictionaryWithDictionary:(id)arg1 copyItems:(BOOL)arg2 ;
+(id)dictionaryWithDictionary:(id)arg1 ;
+(id)dictionaryWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
+(id)dictionaryWithObject:(id)arg1 forKey:(id)arg2 ;
+(id)dictionary;
+(id)allocWithZone:(NSZone*)arg1 ;
+(BOOL)supportsSecureCoding;
+(id)dictionaryWithObjects:(id)arg1 forKeys:(id)arg2 ;
+(id)dictionaryWithObjectsAndKeys:(id)arg1 ;
-(id)safari_arrayForKey:(id)arg1 ;
-(id)safari_stringForKey:(id)arg1 ;
-(BOOL)safari_boolForKey:(id)arg1 ;
-(id)safari_numberForKey:(id)arg1 ;
-(id)safari_dateForKey:(id)arg1 ;
-(id)safari_dictionaryForKey:(id)arg1 ;
-(id)safari_URLForKey:(id)arg1 ;
-(id)safari_dataForKey:(id)arg1 ;
-(BOOL)_writeBinaryPlist:(id)arg1 error:(id*)arg2 ;
-(id)searchResultWithAddressBook:(void*)arg1 fileVersion:(int)arg2 ;
-(id)searchResultWithAddressBook:(void*)arg1 ;
-(id)model;
-(id)displayName;
-(void)setModel:(id)arg1 ;
-(void)setGrappaInfo:(id)arg1 ;
-(void)setEnabledDataClasses:(id)arg1 ;
-(id)enabledDataClasses;
-(id)grappaInfo;
-(unsigned long long)lastServerRevision;
-(void)setLastServerRevision:(unsigned long long)arg1 ;
-(unsigned long long)lastClientRevision;
-(void)setLastClientRevision:(unsigned long long)arg1 ;
-(void)setNewRevision:(unsigned long long)arg1 ;
-(unsigned long long)newRevision;
-(NSString *)versionToken;
-(void)setVersionToken:(NSString *)arg1 ;
-(void)setDisplayName:(id)arg1 ;
-(id)osVersion;
-(void)setOsVersion:(id)arg1 ;
-(id)dictionaryWithLowercaseKeys;
-(int)iterations;
-(float)offset;
-(SEL)setupSelector;
-(SEL)testSelector;
-(id)scriptPath;
-(id)scriptEntry;
-(id)objectForKey:(id)arg1 ofClass:(Class)arg2 ;
-(id)dictionaryWithLowercaseKeys;
-(id)blj_dictionaryBySwappingValuesWithDictionary:(id)arg1 ;
-(id)blj_dictionaryByRemovingValuesForKey:(id)arg1 ;
-(NSString *)npkRelevancyUniqueID;
-(NSString *)npkRelevancyRelevantText;
-(id)PKStringForKey:(id)arg1 ;
-(id)PKNumberForKey:(id)arg1 ;
-(id)PKArrayForKey:(id)arg1 ;
-(id)PKSetForKey:(id)arg1 ;
-(id)PKDecimalNumberForKey:(id)arg1 ;
-(id)PKDateForKey:(id)arg1 ;
-(id)PKURLForKey:(id)arg1 ;
-(id)PKUUIDForKey:(id)arg1 ;
-(id)PKColorForKey:(id)arg1 ;
-(long long)PKIntegerForKey:(id)arg1 ;
-(double)PKDoubleForKey:(id)arg1 ;
-(BOOL)PKBoolForKey:(id)arg1 ;
-(id)PKDictionaryForKey:(id)arg1 ;
-(id)PKArrayContaining:(Class)arg1 forKey:(id)arg2 ;
-(id)PKSetContaining:(Class)arg1 forKey:(id)arg2 ;
-(id)shortDescription;
-(id)shortDescriptionWithIndent:(id)arg1 newLine:(BOOL)arg2 ;
-(BOOL)boolForKey:(id)arg1 ;
-(id)stringForKey:(id)arg1 ;
-(id)dictionaryForKey:(id)arg1 ;
-(BOOL)boolForKey:(id)arg1 keyPresent:(BOOL*)arg2 ;
-(id)numberForKey:(id)arg1 ;
-(id)uuidForKey:(id)arg1 ;
-(id)uuidFromStringForKey:(id)arg1 ;
-(id)mutableDictionaryForKey:(id)arg1 ;
-(id)mutableArrayForKey:(id)arg1 ;
-(id)dateForKey:(id)arg1 ;
-(id)timeZoneForKey:(id)arg1 ;
-(id)timeZoneFromDataForKey:(id)arg1 ;
-(id)dateComponentsForKey:(id)arg1 ;
-(id)dateComponentsFromDataForKey:(id)arg1 ;
-(id)errorForKey:(id)arg1 ;
-(id)errorFromDataForKey:(id)arg1 ;
-(id)calendarForKey:(id)arg1 ;
-(id)calendarFromDataForKey:(id)arg1 ;
-(id)nullForKey:(id)arg1 ;
-(id)nsValueForKey:(id)arg1 ;
-(id)dataForKey:(id)arg1 ;
-(id)arrayForKey:(id)arg1 ;
-(id)objectForInt:(int)arg1 ;
-(id)mutableCopyWithElementsCopy;
-(id)mf_filterUsingMap:(id)arg1 inverse:(BOOL)arg2 ;
-(id)_gkImageURLForSize:(long long)arg1 scale:(double)arg2 foundSize:(out unsigned long long*)arg3 ;
-(id)_gkImageURLForSize:(long long)arg1 scale:(double)arg2 ;
-(id)_gkDictionaryByRemovingObjectsForKeys:(id)arg1 ;
-(id)_gkDictionaryByRemovingObjectForKey:(id)arg1 ;
-(id)_gkSubDictionaryWithKeys:(id)arg1 ;
-(id)_gkSubDictionaryWithKeys:(id)arg1 mappedToNewKeys:(id)arg2 ;
-(id)_gkValuesForKeys:(id)arg1 ;
-(id)deepCopy;
-(id)gksDeepMutableCopy;
-(id)plistArchiveWithCPLArchiver:(id)arg1 ;
-(id)initWithCPLArchiver:(id)arg1 ;
-(BOOL)MSASIsGlobalResetSync;
-(id)MSASAlbumResetSyncAlbumGUID;
-(BOOL)MSASIsLocalChange;
-(id)MSASEventIsDueToAlbumDeletionAlbumGUID;
-(id)MSASEventIsDueToAssetCollectionDeletionAssetCollectionGUID;
-(BOOL)MSASIsNotInteresting;
-(BOOL)MSASIsErrorRecovery;
-(id)MSMutableDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MSDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MSMutableDeepCopy;
-(id)MSDeepCopy;
-(void)sqliteBind:(sqlite3_stmtRef)arg1 index:(int)arg2 ;
-(id)CKPercentEscapedQueryString;
-(id)CKObjectForKeyCaseInsensitive:(id)arg1 ;
-(id)numberForKeyPath:(id)arg1 ;
-(id)stringForKeyPath:(id)arg1 ;
-(id)objectForKeyPath:(id)arg1 ;
-(id)_objectOfKind:(Class)arg1 forKeyPath:(id)arg2 ;
-(double)floatForKeyPath:(id)arg1 ;
-(BOOL)_mapkit_writeBinaryPlist:(id)arg1 atomically:(BOOL)arg2 ;
-(id)_ratingData;
-(id)_defaultOffer;
-(NSString *)bundleId;
-(float)averageRating;
-(NSString *)priceFormatted;
-(id)bestImageURLForWidth:(double)arg1 ;
-(NSArray *)transitModeKeys;
-(BOOL)isOfficialApp;
-(NSNumber *)storeID;
-(NSString *)url;
-(NSString *)title;
-(NSArray *)categories;
-(NSString *)creator;
-(unsigned long long)ratingCount;
-(BOOL)isInstalled;
-(long long)abCompare:(id)arg1 ;
-(BOOL)mf_boolForKey:(id)arg1 ;
-(int)mf_integerForKey:(id)arg1 ;
-(id)DAObjectForKeyCaseInsensitive:(id)arg1 ;
-(id)DAMergeOverrideDictionary:(id)arg1 ;
-(void)CKAssignToContainerWithID:(id)arg1 ;
-(id)dictionaryChanging:(id)arg1 to:(id)arg2 ;
-(id)hk_codableMetadata;
-(BOOL)hk_validateMetadataKeysAndValuesWithError:(id*)arg1 ;
-(id)__ftreg_responseAppleID;
-(id)__ftreg_responseProfileID;
-(id)__ftreg_responseAuthToken;
-(BOOL)__ftreg_responseIsUpgrade;
-(BOOL)__ftreg_isValidSetupDictionary;
-(id)__ftreg_candidateAliases;
-(BOOL)writeToProtectedFile:(id)arg1 atomically:(BOOL)arg2 ;
-(id)asQueryParameterString;
-(id)_FTFilteredDictionaryForAPS;
-(id)mutableCopyWithElementsCopy;
-(id)CalMutableRecursiveCopy;
-(BOOL)CalHasKeyIn:(id)arg1 ;
-(id)filteredDictionaryPassingTest:(/*^block*/id)arg1 ;
-(id)_geo_errorForKey:(id)arg1 ;
-(id)_geo_newXPCObject;
-(id)_placeOrCurrentLocation:(BOOL*)arg1 ;
-(id)CDVObjectForKeyWithNameSpace:(id)arg1 andName:(id)arg2 ;
-(id)CDVObjectForKeyCaseInsensitive:(id)arg1 ;
-(id)CDVMergeOverrideDictionary:(id)arg1 ;
-(unsigned short)fileHFSFlags;
-(unsigned long long)fileHFSResourceForkSize;
-(id)_dictionaryForKey:(id)arg1 ;
-(id)_arrayForKey:(id)arg1 ;
-(id)_numberForKey:(id)arg1 ;
-(id)_stringForKey:(id)arg1 ;
-(id)_dataForKey:(id)arg1 ;
-(id)archiveData;
-(id)plistData;
-(BOOL)__imIsMutable;
-(id)__imDeepCopy;
-(id)keysOfChangedEntriesComparedTo:(id)arg1 ;
-(id)dictionaryFromChanges:(id)arg1 ;
-(id)_accessibilityLeafDescendantsWithCount:(unsigned long long)arg1 shouldStopAtRemoteElement:(BOOL)arg2 options:(id)arg3 ;
-(id)mutableDeepAutoreleasedCopy;
-(unsigned)bw_optimalMicPolarPattern;
-(BOOL)bw_containsBuiltInMicAsAnInput;
-(id)bw_dataSourceDictionaryForDesiredMicOrientation:(unsigned)arg1 ;
-(BOOL)matchesUID:(id)arg1 ;
-(id)_web_messageText;
-(int)_web_messageLineNumber;
-(id)_web_messageSourceURL;
-(int)_web_messageType;
-(BOOL)_boolForKey:(id)arg1 ;
-(BOOL)_ui_dictionaryContainsUIStringDrawingKeys;
-(id)_ui_attributesForDictionaryContainingUIStringDrawingKeys;
-(id)_webkit_objectForMIMEType:(id)arg1 ;
-(id)_webkit_stringForKey:(id)arg1 ;
-(BOOL)_webkit_boolForKey:(id)arg1 ;
-(id)_webkit_arrayForKey:(id)arg1 ;
-(id)_webkit_numberForKey:(id)arg1 ;
-(int)_webkit_intForKey:(id)arg1 ;
-(id)MCMutableDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MCDeepCopyWithZone:(NSZone*)arg1 ;
-(id)MCMutableDeepCopy;
-(id)MCDeepCopy;
-(id)MCRetainRequiredObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 missingDataCode:(long long)arg4 missingDataErrorString:(id)arg5 invalidDataCode:(long long)arg6 invalidDataErrorString:(id)arg7 outError:(id*)arg8 ;
-(id)MCRetainOptionalObjectKey:(id)arg1 type:(Class)arg2 errorDomain:(id)arg3 invalidDataCode:(long long)arg4 invalidDataErrorString:(id)arg5 outError:(id*)arg6 ;
-(id)MCRetainRequiredNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 missingDataCode:(long long)arg3 missingDataErrorString:(id)arg4 invalidDataCode:(long long)arg5 invalidDataErrorString:(id)arg6 outError:(id*)arg7 ;
-(id)MCRetainOptionalNonZeroLengthStringKey:(id)arg1 errorDomain:(id)arg2 invalidDataCode:(long long)arg3 invalidDataErrorString:(id)arg4 outError:(id*)arg5 ;
-(id)sbs_safeObjectForKey:(id)arg1 ofType:(Class)arg2 ;
-(id)sbs_dictionaryByAddingEntriesFromDictionary:(id)arg1 ;
-(BOOL)MR_isEqualToNowPlayingInfo:(id)arg1 ;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLType;
-(KeyValueArray*)CA_copyRenderKeyValueArray;
-(void)bs_eachValue:(/*^block*/id)arg1 ;
-(id)bs_safeObjectForKey:(id)arg1 ofType:(Class)arg2 ;
-(id)_sa_mappedDictionaryWithBlock:(/*^block*/id)arg1 ;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(id)_web_numberForKey:(id)arg1 ;
-(int)_web_intForKey:(id)arg1 ;
-(id)_web_objectForMIMEType:(id)arg1 ;
-(id)_web_stringForKey:(id)arg1 ;
-(id)valueForKey:(id)arg1 ;
-(id)valueForKeyPath:(id)arg1 ;
-(BOOL)fileIsImmutable;
-(unsigned long long)fileOwnerAccountNumber;
-(id)fileGroupOwnerAccountName;
-(unsigned long long)fileGroupOwnerAccountNumber;
-(long long)fileSystemNumber;
-(unsigned long long)fileSystemFileNumber;
-(BOOL)fileExtensionHidden;
-(unsigned)fileHFSCreatorCode;
-(unsigned)fileHFSTypeCode;
-(BOOL)fileIsAppendOnly;
-(id)fileOwnerAccountID;
-(id)fileGroupOwnerAccountID;
-(id)fileType;
-(id)fileModificationDate;
-(id)fileOwnerAccountName;
-(unsigned long long)filePosixPermissions;
-(unsigned long long)fileSize;
-(id)fileCreationDate;
-(id)_stringToWrite;
-(id)descriptionInStringsFileFormat;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2 ;
-(BOOL)writeToURL:(id)arg1 atomically:(BOOL)arg2 ;
-(Class)classForCoder;
-(id)initWithContentsOfFile:(id)arg1 ;
-(id)initWithContentsOfURL:(id)arg1 ;
-(BOOL)isNSDictionary__;
-(id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2 ;
-(void)getObjects:(id*)arg1 ;
-(void)getObjects:(id*)arg1 andKeys:(id*)arg2 ;
-(void)getKeys:(id*)arg1 ;
-(unsigned long long)countForKey:(id)arg1 ;
-(BOOL)__getValue:(id*)arg1 forKey:(id)arg2 ;
-(void)__apply:(/*function pointer*/void*)arg1 context:(void*)arg2 ;
-(unsigned long long)_cfTypeID;
-(void)getObjects:(id*)arg1 andKeys:(id*)arg2 count:(unsigned long long)arg3 ;
-(void)enumerateKeysAndObjectsWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)keyOfEntryWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)keysOfEntriesWithOptions:(unsigned long long)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)keysSortedByValueWithOptions:(unsigned long long)arg1 usingComparator:(/*^block*/id)arg2 ;
-(id)invertedDictionary;
-(id)keyOfEntryPassingTest:(/*^block*/id)arg1 ;
-(id)keysSortedByValueUsingComparator:(/*^block*/id)arg1 ;
-(id)keysSortedByValueUsingSelector:(SEL)arg1 ;
-(id)objectsForKeys:(id)arg1 notFoundMarker:(id)arg2 ;
-(id)initWithObject:(id)arg1 forKey:(id)arg2 ;
-(id)allKeys;
-(unsigned long long)countByEnumeratingWithState:(SCD_Struct_NS16*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(unsigned long long)count;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)description;
-(id)initWithDictionary:(id)arg1 ;
-(id)objectForKeyedSubscript:(id)arg1 ;
-(BOOL)containsObject:(id)arg1 ;
-(id)allObjects;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)objectEnumerator;
-(void)enumerateKeysAndObjectsUsingBlock:(/*^block*/id)arg1 ;
-(id)initWithObjects:(const id*)arg1 forKeys:(const id*)arg2 count:(unsigned long long)arg3 ;
-(BOOL)isEqualToDictionary:(id)arg1 ;
-(id)initWithObjects:(id)arg1 forKeys:(id)arg2 ;
-(id)allValues;
-(id)keyEnumerator;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(id)allKeysForObject:(id)arg1 ;
-(id)keysOfEntriesPassingTest:(/*^block*/id)arg1 ;
-(id)initWithDictionary:(id)arg1 copyItems:(BOOL)arg2 ;
-(unsigned long long)countForObject:(id)arg1 ;
-(id)descriptionWithLocale:(id)arg1 ;
-(id)objectForKey:(id)arg1 ;
-(id)initWithObjectsAndKeys:(id)arg1 ;
-(BOOL)containsKey:(id)arg1 ;
@end

